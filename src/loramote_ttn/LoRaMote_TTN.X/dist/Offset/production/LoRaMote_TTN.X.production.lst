

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Thu May  5 18:59:54 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	text111,global,reloc=2,class=CODE,delta=1
   127                           	psect	text112,global,reloc=2,class=CODE,delta=1
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133                           	dabs	1,0x400,48,_BDT
   134                           	dabs	1,0x500,64,_cdc_data_tx
   135                           	dabs	1,0x438,8,_CtrlTrfData
   136                           	dabs	1,0x430,8,_SetupPkt
   137                           	dabs	1,0x540,64,_cdc_data_rx
   138  0000                     
   139                           	psect	idataBANK0
   140  004407                     __pidataBANK0:
   141                           	opt stack 0
   142                           
   143                           ;initializer for _selectedFont
   144  004407  BF                 	db	low _OledFont0
   145  004408  77                 	db	high _OledFont0
   146                           
   147                           ;initializer for _moteState
   148  004409  01                 	db	1
   149                           
   150                           	psect	mediumconst
   151  0077A4                     __pmediumconst:
   152                           	opt stack 0
   153  0077A4  00                 	db	0
   154  0077A5                     _dpowers:
   155                           	opt stack 0
   156  0077A5  0001               	dw	1
   157  0077A7  000A               	dw	10
   158  0077A9  0064               	dw	100
   159  0077AB  03E8               	dw	1000
   160  0077AD  2710               	dw	10000
   161  0077AF                     __end_of_dpowers:
   162                           	opt stack 0
   163  0077AF                     _hexpowers:
   164                           	opt stack 0
   165  0077AF  0001               	dw	1
   166  0077B1  0010               	dw	16
   167  0077B3  0100               	dw	256
   168  0077B5  1000               	dw	4096
   169  0077B7                     __end_of_hexpowers:
   170                           	opt stack 0
   171  0077B7                     _USB_SD_Ptr:
   172                           	opt stack 0
   173  0077B7  7C                 	db	low _sd000
   174  0077B8  7B                 	db	high _sd000
   175  0077B9  02                 	db	low _sd001
   176  0077BA  7B                 	db	high _sd001
   177  0077BB  36                 	db	low _sd002
   178  0077BC  7B                 	db	high _sd002
   179  0077BD                     __end_of_USB_SD_Ptr:
   180                           	opt stack 0
   181  0077BD                     _USB_CD_Ptr:
   182                           	opt stack 0
   183  0077BD  BF                 	db	low _configDescriptor1
   184  0077BE  7A                 	db	high _configDescriptor1
   185  0077BF                     __end_of_USB_CD_Ptr:
   186                           	opt stack 0
   187  0077BF                     _OledFont0:
   188                           	opt stack 0
   189  0077BF  00                 	db	0
   190  0077C0  00                 	db	0
   191  0077C1  00                 	db	0
   192  0077C2  00                 	db	0
   193  0077C3  00                 	db	0
   194  0077C4  00                 	db	0
   195  0077C5  00                 	db	0
   196  0077C6  00                 	db	0
   197  0077C7  00                 	db	0
   198  0077C8  00                 	db	0
   199  0077C9  00                 	db	0
   200  0077CA  5F                 	db	95
   201  0077CB  00                 	db	0
   202  0077CC  00                 	db	0
   203  0077CD  00                 	db	0
   204  0077CE  00                 	db	0
   205  0077CF  00                 	db	0
   206  0077D0  00                 	db	0
   207  0077D1  03                 	db	3
   208  0077D2  00                 	db	0
   209  0077D3  03                 	db	3
   210  0077D4  00                 	db	0
   211  0077D5  00                 	db	0
   212  0077D6  00                 	db	0
   213  0077D7  64                 	db	100
   214  0077D8  3C                 	db	60
   215  0077D9  26                 	db	38
   216  0077DA  64                 	db	100
   217  0077DB  3C                 	db	60
   218  0077DC  26                 	db	38
   219  0077DD  24                 	db	36
   220  0077DE  00                 	db	0
   221  0077DF  26                 	db	38
   222  0077E0  49                 	db	73
   223  0077E1  49                 	db	73
   224  0077E2  7F                 	db	127
   225  0077E3  49                 	db	73
   226  0077E4  49                 	db	73
   227  0077E5  32                 	db	50
   228  0077E6  00                 	db	0
   229  0077E7  42                 	db	66
   230  0077E8  25                 	db	37
   231  0077E9  12                 	db	18
   232  0077EA  08                 	db	8
   233  0077EB  24                 	db	36
   234  0077EC  52                 	db	82
   235  0077ED  21                 	db	33
   236  0077EE  00                 	db	0
   237  0077EF  20                 	db	32
   238  0077F0  50                 	db	80
   239  0077F1  4E                 	db	78
   240  0077F2  55                 	db	85
   241  0077F3  22                 	db	34
   242  0077F4  58                 	db	88
   243  0077F5  28                 	db	40
   244  0077F6  00                 	db	0
   245  0077F7  00                 	db	0
   246  0077F8  00                 	db	0
   247  0077F9  00                 	db	0
   248  0077FA  03                 	db	3
   249  0077FB  00                 	db	0
   250  0077FC  00                 	db	0
   251  0077FD  00                 	db	0
   252  0077FE  00                 	db	0
   253  0077FF  00                 	db	0
   254  007800  00                 	db	0
   255  007801  1C                 	db	28
   256  007802  22                 	db	34
   257  007803  41                 	db	65
   258  007804  00                 	db	0
   259  007805  00                 	db	0
   260  007806  00                 	db	0
   261  007807  00                 	db	0
   262  007808  00                 	db	0
   263  007809  00                 	db	0
   264  00780A  41                 	db	65
   265  00780B  22                 	db	34
   266  00780C  1C                 	db	28
   267  00780D  00                 	db	0
   268  00780E  00                 	db	0
   269  00780F  00                 	db	0
   270  007810  15                 	db	21
   271  007811  15                 	db	21
   272  007812  0E                 	db	14
   273  007813  0E                 	db	14
   274  007814  15                 	db	21
   275  007815  15                 	db	21
   276  007816  00                 	db	0
   277  007817  00                 	db	0
   278  007818  08                 	db	8
   279  007819  08                 	db	8
   280  00781A  3E                 	db	62
   281  00781B  08                 	db	8
   282  00781C  08                 	db	8
   283  00781D  00                 	db	0
   284  00781E  00                 	db	0
   285  00781F  00                 	db	0
   286  007820  00                 	db	0
   287  007821  00                 	db	0
   288  007822  50                 	db	80
   289  007823  30                 	db	48
   290  007824  00                 	db	0
   291  007825  00                 	db	0
   292  007826  00                 	db	0
   293  007827  00                 	db	0
   294  007828  08                 	db	8
   295  007829  08                 	db	8
   296  00782A  08                 	db	8
   297  00782B  08                 	db	8
   298  00782C  08                 	db	8
   299  00782D  00                 	db	0
   300  00782E  00                 	db	0
   301  00782F  00                 	db	0
   302  007830  00                 	db	0
   303  007831  00                 	db	0
   304  007832  40                 	db	64
   305  007833  00                 	db	0
   306  007834  00                 	db	0
   307  007835  00                 	db	0
   308  007836  00                 	db	0
   309  007837  40                 	db	64
   310  007838  20                 	db	32
   311  007839  10                 	db	16
   312  00783A  08                 	db	8
   313  00783B  04                 	db	4
   314  00783C  02                 	db	2
   315  00783D  01                 	db	1
   316  00783E  00                 	db	0
   317  00783F  00                 	db	0
   318  007840  3E                 	db	62
   319  007841  41                 	db	65
   320  007842  41                 	db	65
   321  007843  41                 	db	65
   322  007844  3E                 	db	62
   323  007845  00                 	db	0
   324  007846  00                 	db	0
   325  007847  00                 	db	0
   326  007848  00                 	db	0
   327  007849  41                 	db	65
   328  00784A  7F                 	db	127
   329  00784B  40                 	db	64
   330  00784C  00                 	db	0
   331  00784D  00                 	db	0
   332  00784E  00                 	db	0
   333  00784F  00                 	db	0
   334  007850  42                 	db	66
   335  007851  61                 	db	97
   336  007852  51                 	db	81
   337  007853  49                 	db	73
   338  007854  6E                 	db	110
   339  007855  00                 	db	0
   340  007856  00                 	db	0
   341  007857  00                 	db	0
   342  007858  22                 	db	34
   343  007859  41                 	db	65
   344  00785A  49                 	db	73
   345  00785B  49                 	db	73
   346  00785C  36                 	db	54
   347  00785D  00                 	db	0
   348  00785E  00                 	db	0
   349  00785F  00                 	db	0
   350  007860  18                 	db	24
   351  007861  14                 	db	20
   352  007862  12                 	db	18
   353  007863  7F                 	db	127
   354  007864  10                 	db	16
   355  007865  00                 	db	0
   356  007866  00                 	db	0
   357  007867  00                 	db	0
   358  007868  27                 	db	39
   359  007869  49                 	db	73
   360  00786A  49                 	db	73
   361  00786B  49                 	db	73
   362  00786C  71                 	db	113
   363  00786D  00                 	db	0
   364  00786E  00                 	db	0
   365  00786F  00                 	db	0
   366  007870  3C                 	db	60
   367  007871  4A                 	db	74
   368  007872  49                 	db	73
   369  007873  48                 	db	72
   370  007874  70                 	db	112
   371  007875  00                 	db	0
   372  007876  00                 	db	0
   373  007877  00                 	db	0
   374  007878  43                 	db	67
   375  007879  21                 	db	33
   376  00787A  11                 	db	17
   377  00787B  0D                 	db	13
   378  00787C  03                 	db	3
   379  00787D  00                 	db	0
   380  00787E  00                 	db	0
   381  00787F  00                 	db	0
   382  007880  36                 	db	54
   383  007881  49                 	db	73
   384  007882  49                 	db	73
   385  007883  49                 	db	73
   386  007884  36                 	db	54
   387  007885  00                 	db	0
   388  007886  00                 	db	0
   389  007887  00                 	db	0
   390  007888  06                 	db	6
   391  007889  09                 	db	9
   392  00788A  49                 	db	73
   393  00788B  29                 	db	41
   394  00788C  1E                 	db	30
   395  00788D  00                 	db	0
   396  00788E  00                 	db	0
   397  00788F  00                 	db	0
   398  007890  00                 	db	0
   399  007891  00                 	db	0
   400  007892  12                 	db	18
   401  007893  00                 	db	0
   402  007894  00                 	db	0
   403  007895  00                 	db	0
   404  007896  00                 	db	0
   405  007897  00                 	db	0
   406  007898  00                 	db	0
   407  007899  00                 	db	0
   408  00789A  52                 	db	82
   409  00789B  30                 	db	48
   410  00789C  00                 	db	0
   411  00789D  00                 	db	0
   412  00789E  00                 	db	0
   413  00789F  00                 	db	0
   414  0078A0  00                 	db	0
   415  0078A1  08                 	db	8
   416  0078A2  14                 	db	20
   417  0078A3  14                 	db	20
   418  0078A4  22                 	db	34
   419  0078A5  00                 	db	0
   420  0078A6  00                 	db	0
   421  0078A7  00                 	db	0
   422  0078A8  14                 	db	20
   423  0078A9  14                 	db	20
   424  0078AA  14                 	db	20
   425  0078AB  14                 	db	20
   426  0078AC  14                 	db	20
   427  0078AD  14                 	db	20
   428  0078AE  00                 	db	0
   429  0078AF  00                 	db	0
   430  0078B0  00                 	db	0
   431  0078B1  22                 	db	34
   432  0078B2  14                 	db	20
   433  0078B3  14                 	db	20
   434  0078B4  08                 	db	8
   435  0078B5  00                 	db	0
   436  0078B6  00                 	db	0
   437  0078B7  00                 	db	0
   438  0078B8  02                 	db	2
   439  0078B9  01                 	db	1
   440  0078BA  59                 	db	89
   441  0078BB  05                 	db	5
   442  0078BC  02                 	db	2
   443  0078BD  00                 	db	0
   444  0078BE  00                 	db	0
   445  0078BF  3E                 	db	62
   446  0078C0  41                 	db	65
   447  0078C1  5D                 	db	93
   448  0078C2  55                 	db	85
   449  0078C3  4D                 	db	77
   450  0078C4  51                 	db	81
   451  0078C5  2E                 	db	46
   452  0078C6  00                 	db	0
   453  0078C7  40                 	db	64
   454  0078C8  7C                 	db	124
   455  0078C9  4A                 	db	74
   456  0078CA  09                 	db	9
   457  0078CB  4A                 	db	74
   458  0078CC  7C                 	db	124
   459  0078CD  40                 	db	64
   460  0078CE  00                 	db	0
   461  0078CF  41                 	db	65
   462  0078D0  7F                 	db	127
   463  0078D1  49                 	db	73
   464  0078D2  49                 	db	73
   465  0078D3  49                 	db	73
   466  0078D4  49                 	db	73
   467  0078D5  36                 	db	54
   468  0078D6  00                 	db	0
   469  0078D7  1C                 	db	28
   470  0078D8  22                 	db	34
   471  0078D9  41                 	db	65
   472  0078DA  41                 	db	65
   473  0078DB  41                 	db	65
   474  0078DC  41                 	db	65
   475  0078DD  22                 	db	34
   476  0078DE  00                 	db	0
   477  0078DF  41                 	db	65
   478  0078E0  7F                 	db	127
   479  0078E1  41                 	db	65
   480  0078E2  41                 	db	65
   481  0078E3  41                 	db	65
   482  0078E4  22                 	db	34
   483  0078E5  1C                 	db	28
   484  0078E6  00                 	db	0
   485  0078E7  41                 	db	65
   486  0078E8  7F                 	db	127
   487  0078E9  49                 	db	73
   488  0078EA  49                 	db	73
   489  0078EB  5D                 	db	93
   490  0078EC  41                 	db	65
   491  0078ED  63                 	db	99
   492  0078EE  00                 	db	0
   493  0078EF  41                 	db	65
   494  0078F0  7F                 	db	127
   495  0078F1  49                 	db	73
   496  0078F2  09                 	db	9
   497  0078F3  1D                 	db	29
   498  0078F4  01                 	db	1
   499  0078F5  03                 	db	3
   500  0078F6  00                 	db	0
   501  0078F7  1C                 	db	28
   502  0078F8  22                 	db	34
   503  0078F9  41                 	db	65
   504  0078FA  49                 	db	73
   505  0078FB  49                 	db	73
   506  0078FC  3A                 	db	58
   507  0078FD  08                 	db	8
   508  0078FE  00                 	db	0
   509  0078FF  41                 	db	65
   510  007900  7F                 	db	127
   511  007901  08                 	db	8
   512  007902  08                 	db	8
   513  007903  08                 	db	8
   514  007904  7F                 	db	127
   515  007905  41                 	db	65
   516  007906  00                 	db	0
   517  007907  00                 	db	0
   518  007908  41                 	db	65
   519  007909  41                 	db	65
   520  00790A  7F                 	db	127
   521  00790B  41                 	db	65
   522  00790C  41                 	db	65
   523  00790D  00                 	db	0
   524  00790E  00                 	db	0
   525  00790F  30                 	db	48
   526  007910  40                 	db	64
   527  007911  41                 	db	65
   528  007912  41                 	db	65
   529  007913  3F                 	db	63
   530  007914  01                 	db	1
   531  007915  01                 	db	1
   532  007916  00                 	db	0
   533  007917  41                 	db	65
   534  007918  7F                 	db	127
   535  007919  08                 	db	8
   536  00791A  0C                 	db	12
   537  00791B  12                 	db	18
   538  00791C  61                 	db	97
   539  00791D  41                 	db	65
   540  00791E  00                 	db	0
   541  00791F  41                 	db	65
   542  007920  7F                 	db	127
   543  007921  41                 	db	65
   544  007922  40                 	db	64
   545  007923  40                 	db	64
   546  007924  40                 	db	64
   547  007925  60                 	db	96
   548  007926  00                 	db	0
   549  007927  41                 	db	65
   550  007928  7F                 	db	127
   551  007929  42                 	db	66
   552  00792A  0C                 	db	12
   553  00792B  42                 	db	66
   554  00792C  7F                 	db	127
   555  00792D  41                 	db	65
   556  00792E  00                 	db	0
   557  00792F  41                 	db	65
   558  007930  7F                 	db	127
   559  007931  42                 	db	66
   560  007932  0C                 	db	12
   561  007933  11                 	db	17
   562  007934  7F                 	db	127
   563  007935  01                 	db	1
   564  007936  00                 	db	0
   565  007937  1C                 	db	28
   566  007938  22                 	db	34
   567  007939  41                 	db	65
   568  00793A  41                 	db	65
   569  00793B  41                 	db	65
   570  00793C  22                 	db	34
   571  00793D  1C                 	db	28
   572  00793E  00                 	db	0
   573  00793F  41                 	db	65
   574  007940  7F                 	db	127
   575  007941  49                 	db	73
   576  007942  09                 	db	9
   577  007943  09                 	db	9
   578  007944  09                 	db	9
   579  007945  06                 	db	6
   580  007946  00                 	db	0
   581  007947  0C                 	db	12
   582  007948  12                 	db	18
   583  007949  21                 	db	33
   584  00794A  21                 	db	33
   585  00794B  61                 	db	97
   586  00794C  52                 	db	82
   587  00794D  4C                 	db	76
   588  00794E  00                 	db	0
   589  00794F  41                 	db	65
   590  007950  7F                 	db	127
   591  007951  09                 	db	9
   592  007952  09                 	db	9
   593  007953  19                 	db	25
   594  007954  69                 	db	105
   595  007955  46                 	db	70
   596  007956  00                 	db	0
   597  007957  66                 	db	102
   598  007958  49                 	db	73
   599  007959  49                 	db	73
   600  00795A  49                 	db	73
   601  00795B  49                 	db	73
   602  00795C  49                 	db	73
   603  00795D  33                 	db	51
   604  00795E  00                 	db	0
   605  00795F  03                 	db	3
   606  007960  01                 	db	1
   607  007961  41                 	db	65
   608  007962  7F                 	db	127
   609  007963  41                 	db	65
   610  007964  01                 	db	1
   611  007965  03                 	db	3
   612  007966  00                 	db	0
   613  007967  01                 	db	1
   614  007968  3F                 	db	63
   615  007969  41                 	db	65
   616  00796A  40                 	db	64
   617  00796B  41                 	db	65
   618  00796C  3F                 	db	63
   619  00796D  01                 	db	1
   620  00796E  00                 	db	0
   621  00796F  01                 	db	1
   622  007970  0F                 	db	15
   623  007971  31                 	db	49
   624  007972  40                 	db	64
   625  007973  31                 	db	49
   626  007974  0F                 	db	15
   627  007975  01                 	db	1
   628  007976  00                 	db	0
   629  007977  01                 	db	1
   630  007978  1F                 	db	31
   631  007979  61                 	db	97
   632  00797A  14                 	db	20
   633  00797B  61                 	db	97
   634  00797C  1F                 	db	31
   635  00797D  01                 	db	1
   636  00797E  00                 	db	0
   637  00797F  41                 	db	65
   638  007980  41                 	db	65
   639  007981  36                 	db	54
   640  007982  08                 	db	8
   641  007983  36                 	db	54
   642  007984  41                 	db	65
   643  007985  41                 	db	65
   644  007986  00                 	db	0
   645  007987  01                 	db	1
   646  007988  03                 	db	3
   647  007989  44                 	db	68
   648  00798A  78                 	db	120
   649  00798B  44                 	db	68
   650  00798C  03                 	db	3
   651  00798D  01                 	db	1
   652  00798E  00                 	db	0
   653  00798F  43                 	db	67
   654  007990  61                 	db	97
   655  007991  51                 	db	81
   656  007992  49                 	db	73
   657  007993  45                 	db	69
   658  007994  43                 	db	67
   659  007995  61                 	db	97
   660  007996  00                 	db	0
   661  007997  00                 	db	0
   662  007998  00                 	db	0
   663  007999  7F                 	db	127
   664  00799A  41                 	db	65
   665  00799B  41                 	db	65
   666  00799C  00                 	db	0
   667  00799D  00                 	db	0
   668  00799E  00                 	db	0
   669  00799F  01                 	db	1
   670  0079A0  02                 	db	2
   671  0079A1  04                 	db	4
   672  0079A2  08                 	db	8
   673  0079A3  10                 	db	16
   674  0079A4  20                 	db	32
   675  0079A5  40                 	db	64
   676  0079A6  00                 	db	0
   677  0079A7  00                 	db	0
   678  0079A8  00                 	db	0
   679  0079A9  41                 	db	65
   680  0079AA  41                 	db	65
   681  0079AB  7F                 	db	127
   682  0079AC  00                 	db	0
   683  0079AD  00                 	db	0
   684  0079AE  00                 	db	0
   685  0079AF  00                 	db	0
   686  0079B0  04                 	db	4
   687  0079B1  02                 	db	2
   688  0079B2  01                 	db	1
   689  0079B3  01                 	db	1
   690  0079B4  02                 	db	2
   691  0079B5  04                 	db	4
   692  0079B6  00                 	db	0
   693  0079B7  00                 	db	0
   694  0079B8  40                 	db	64
   695  0079B9  40                 	db	64
   696  0079BA  40                 	db	64
   697  0079BB  40                 	db	64
   698  0079BC  40                 	db	64
   699  0079BD  40                 	db	64
   700  0079BE  00                 	db	0
   701  0079BF  00                 	db	0
   702  0079C0  01                 	db	1
   703  0079C1  02                 	db	2
   704  0079C2  00                 	db	0
   705  0079C3  00                 	db	0
   706  0079C4  00                 	db	0
   707  0079C5  00                 	db	0
   708  0079C6  00                 	db	0
   709  0079C7  00                 	db	0
   710  0079C8  34                 	db	52
   711  0079C9  4A                 	db	74
   712  0079CA  4A                 	db	74
   713  0079CB  4A                 	db	74
   714  0079CC  3C                 	db	60
   715  0079CD  40                 	db	64
   716  0079CE  00                 	db	0
   717  0079CF  00                 	db	0
   718  0079D0  41                 	db	65
   719  0079D1  3F                 	db	63
   720  0079D2  48                 	db	72
   721  0079D3  48                 	db	72
   722  0079D4  48                 	db	72
   723  0079D5  30                 	db	48
   724  0079D6  00                 	db	0
   725  0079D7  00                 	db	0
   726  0079D8  3C                 	db	60
   727  0079D9  42                 	db	66
   728  0079DA  42                 	db	66
   729  0079DB  42                 	db	66
   730  0079DC  24                 	db	36
   731  0079DD  00                 	db	0
   732  0079DE  00                 	db	0
   733  0079DF  00                 	db	0
   734  0079E0  30                 	db	48
   735  0079E1  48                 	db	72
   736  0079E2  48                 	db	72
   737  0079E3  49                 	db	73
   738  0079E4  3F                 	db	63
   739  0079E5  40                 	db	64
   740  0079E6  00                 	db	0
   741  0079E7  00                 	db	0
   742  0079E8  3C                 	db	60
   743  0079E9  4A                 	db	74
   744  0079EA  4A                 	db	74
   745  0079EB  4A                 	db	74
   746  0079EC  2C                 	db	44
   747  0079ED  00                 	db	0
   748  0079EE  00                 	db	0
   749  0079EF  00                 	db	0
   750  0079F0  00                 	db	0
   751  0079F1  48                 	db	72
   752  0079F2  7E                 	db	126
   753  0079F3  49                 	db	73
   754  0079F4  09                 	db	9
   755  0079F5  00                 	db	0
   756  0079F6  00                 	db	0
   757  0079F7  00                 	db	0
   758  0079F8  26                 	db	38
   759  0079F9  49                 	db	73
   760  0079FA  49                 	db	73
   761  0079FB  49                 	db	73
   762  0079FC  3F                 	db	63
   763  0079FD  01                 	db	1
   764  0079FE  00                 	db	0
   765  0079FF  41                 	db	65
   766  007A00  7F                 	db	127
   767  007A01  48                 	db	72
   768  007A02  04                 	db	4
   769  007A03  44                 	db	68
   770  007A04  78                 	db	120
   771  007A05  40                 	db	64
   772  007A06  00                 	db	0
   773  007A07  00                 	db	0
   774  007A08  00                 	db	0
   775  007A09  44                 	db	68
   776  007A0A  7D                 	db	125
   777  007A0B  40                 	db	64
   778  007A0C  00                 	db	0
   779  007A0D  00                 	db	0
   780  007A0E  00                 	db	0
   781  007A0F  00                 	db	0
   782  007A10  00                 	db	0
   783  007A11  40                 	db	64
   784  007A12  44                 	db	68
   785  007A13  3D                 	db	61
   786  007A14  00                 	db	0
   787  007A15  00                 	db	0
   788  007A16  00                 	db	0
   789  007A17  41                 	db	65
   790  007A18  7F                 	db	127
   791  007A19  10                 	db	16
   792  007A1A  18                 	db	24
   793  007A1B  24                 	db	36
   794  007A1C  42                 	db	66
   795  007A1D  42                 	db	66
   796  007A1E  00                 	db	0
   797  007A1F  00                 	db	0
   798  007A20  40                 	db	64
   799  007A21  41                 	db	65
   800  007A22  7F                 	db	127
   801  007A23  40                 	db	64
   802  007A24  40                 	db	64
   803  007A25  00                 	db	0
   804  007A26  00                 	db	0
   805  007A27  42                 	db	66
   806  007A28  7E                 	db	126
   807  007A29  02                 	db	2
   808  007A2A  7C                 	db	124
   809  007A2B  02                 	db	2
   810  007A2C  7E                 	db	126
   811  007A2D  40                 	db	64
   812  007A2E  00                 	db	0
   813  007A2F  42                 	db	66
   814  007A30  7E                 	db	126
   815  007A31  44                 	db	68
   816  007A32  02                 	db	2
   817  007A33  42                 	db	66
   818  007A34  7C                 	db	124
   819  007A35  40                 	db	64
   820  007A36  00                 	db	0
   821  007A37  00                 	db	0
   822  007A38  3C                 	db	60
   823  007A39  42                 	db	66
   824  007A3A  42                 	db	66
   825  007A3B  42                 	db	66
   826  007A3C  3C                 	db	60
   827  007A3D  00                 	db	0
   828  007A3E  00                 	db	0
   829  007A3F  00                 	db	0
   830  007A40  41                 	db	65
   831  007A41  7F                 	db	127
   832  007A42  49                 	db	73
   833  007A43  09                 	db	9
   834  007A44  09                 	db	9
   835  007A45  06                 	db	6
   836  007A46  00                 	db	0
   837  007A47  00                 	db	0
   838  007A48  06                 	db	6
   839  007A49  09                 	db	9
   840  007A4A  09                 	db	9
   841  007A4B  49                 	db	73
   842  007A4C  7F                 	db	127
   843  007A4D  41                 	db	65
   844  007A4E  00                 	db	0
   845  007A4F  00                 	db	0
   846  007A50  42                 	db	66
   847  007A51  7E                 	db	126
   848  007A52  44                 	db	68
   849  007A53  02                 	db	2
   850  007A54  02                 	db	2
   851  007A55  04                 	db	4
   852  007A56  00                 	db	0
   853  007A57  00                 	db	0
   854  007A58  64                 	db	100
   855  007A59  4A                 	db	74
   856  007A5A  4A                 	db	74
   857  007A5B  4A                 	db	74
   858  007A5C  36                 	db	54
   859  007A5D  00                 	db	0
   860  007A5E  00                 	db	0
   861  007A5F  00                 	db	0
   862  007A60  04                 	db	4
   863  007A61  3F                 	db	63
   864  007A62  44                 	db	68
   865  007A63  44                 	db	68
   866  007A64  20                 	db	32
   867  007A65  00                 	db	0
   868  007A66  00                 	db	0
   869  007A67  00                 	db	0
   870  007A68  02                 	db	2
   871  007A69  3E                 	db	62
   872  007A6A  40                 	db	64
   873  007A6B  40                 	db	64
   874  007A6C  22                 	db	34
   875  007A6D  7E                 	db	126
   876  007A6E  40                 	db	64
   877  007A6F  02                 	db	2
   878  007A70  0E                 	db	14
   879  007A71  32                 	db	50
   880  007A72  40                 	db	64
   881  007A73  32                 	db	50
   882  007A74  0E                 	db	14
   883  007A75  02                 	db	2
   884  007A76  00                 	db	0
   885  007A77  02                 	db	2
   886  007A78  1E                 	db	30
   887  007A79  62                 	db	98
   888  007A7A  18                 	db	24
   889  007A7B  62                 	db	98
   890  007A7C  1E                 	db	30
   891  007A7D  02                 	db	2
   892  007A7E  00                 	db	0
   893  007A7F  42                 	db	66
   894  007A80  62                 	db	98
   895  007A81  14                 	db	20
   896  007A82  08                 	db	8
   897  007A83  14                 	db	20
   898  007A84  62                 	db	98
   899  007A85  42                 	db	66
   900  007A86  00                 	db	0
   901  007A87  01                 	db	1
   902  007A88  43                 	db	67
   903  007A89  45                 	db	69
   904  007A8A  38                 	db	56
   905  007A8B  05                 	db	5
   906  007A8C  03                 	db	3
   907  007A8D  01                 	db	1
   908  007A8E  00                 	db	0
   909  007A8F  00                 	db	0
   910  007A90  46                 	db	70
   911  007A91  62                 	db	98
   912  007A92  52                 	db	82
   913  007A93  4A                 	db	74
   914  007A94  46                 	db	70
   915  007A95  62                 	db	98
   916  007A96  00                 	db	0
   917  007A97  00                 	db	0
   918  007A98  00                 	db	0
   919  007A99  08                 	db	8
   920  007A9A  36                 	db	54
   921  007A9B  41                 	db	65
   922  007A9C  00                 	db	0
   923  007A9D  00                 	db	0
   924  007A9E  00                 	db	0
   925  007A9F  00                 	db	0
   926  007AA0  00                 	db	0
   927  007AA1  00                 	db	0
   928  007AA2  7F                 	db	127
   929  007AA3  00                 	db	0
   930  007AA4  00                 	db	0
   931  007AA5  00                 	db	0
   932  007AA6  00                 	db	0
   933  007AA7  00                 	db	0
   934  007AA8  00                 	db	0
   935  007AA9  00                 	db	0
   936  007AAA  41                 	db	65
   937  007AAB  36                 	db	54
   938  007AAC  08                 	db	8
   939  007AAD  00                 	db	0
   940  007AAE  00                 	db	0
   941  007AAF  00                 	db	0
   942  007AB0  18                 	db	24
   943  007AB1  08                 	db	8
   944  007AB2  08                 	db	8
   945  007AB3  10                 	db	16
   946  007AB4  10                 	db	16
   947  007AB5  18                 	db	24
   948  007AB6  00                 	db	0
   949  007AB7  AA                 	db	170
   950  007AB8  55                 	db	85
   951  007AB9  AA                 	db	170
   952  007ABA  55                 	db	85
   953  007ABB  AA                 	db	170
   954  007ABC  55                 	db	85
   955  007ABD  AA                 	db	170
   956  007ABE  55                 	db	85
   957  007ABF                     __end_of_OledFont0:
   958                           	opt stack 0
   959  007ABF                     _configDescriptor1:
   960                           	opt stack 0
   961  007ABF  09                 	db	9
   962  007AC0  02                 	db	2
   963  007AC1  43                 	db	67
   964  007AC2  00                 	db	0
   965  007AC3  02                 	db	2
   966  007AC4  01                 	db	1
   967  007AC5  00                 	db	0
   968  007AC6  C0                 	db	192
   969  007AC7  32                 	db	50
   970  007AC8  09                 	db	9
   971  007AC9  04                 	db	4
   972  007ACA  00                 	db	0
   973  007ACB  00                 	db	0
   974  007ACC  01                 	db	1
   975  007ACD  02                 	db	2
   976  007ACE  02                 	db	2
   977  007ACF  01                 	db	1
   978  007AD0  00                 	db	0
   979  007AD1  05                 	db	5
   980  007AD2  24                 	db	36
   981  007AD3  00                 	db	0
   982  007AD4  10                 	db	16
   983  007AD5  01                 	db	1
   984  007AD6  04                 	db	4
   985  007AD7  24                 	db	36
   986  007AD8  02                 	db	2
   987  007AD9  02                 	db	2
   988  007ADA  05                 	db	5
   989  007ADB  24                 	db	36
   990  007ADC  06                 	db	6
   991  007ADD  00                 	db	0
   992  007ADE  01                 	db	1
   993  007ADF  05                 	db	5
   994  007AE0  24                 	db	36
   995  007AE1  01                 	db	1
   996  007AE2  00                 	db	0
   997  007AE3  01                 	db	1
   998  007AE4  07                 	db	7
   999  007AE5  05                 	db	5
  1000  007AE6  81                 	db	129
  1001  007AE7  03                 	db	3
  1002  007AE8  08                 	db	8
  1003  007AE9  00                 	db	0
  1004  007AEA  02                 	db	2
  1005  007AEB  09                 	db	9
  1006  007AEC  04                 	db	4
  1007  007AED  01                 	db	1
  1008  007AEE  00                 	db	0
  1009  007AEF  02                 	db	2
  1010  007AF0  0A                 	db	10
  1011  007AF1  00                 	db	0
  1012  007AF2  00                 	db	0
  1013  007AF3  00                 	db	0
  1014  007AF4  07                 	db	7
  1015  007AF5  05                 	db	5
  1016  007AF6  02                 	db	2
  1017  007AF7  02                 	db	2
  1018  007AF8  40                 	db	64
  1019  007AF9  00                 	db	0
  1020  007AFA  00                 	db	0
  1021  007AFB  07                 	db	7
  1022  007AFC  05                 	db	5
  1023  007AFD  82                 	db	130
  1024  007AFE  02                 	db	2
  1025  007AFF  40                 	db	64
  1026  007B00  00                 	db	0
  1027  007B01  00                 	db	0
  1028  007B02                     __end_of_configDescriptor1:
  1029                           	opt stack 0
  1030  007B02                     _sd001:
  1031                           	opt stack 0
  1032  007B02  34                 	db	52
  1033  007B03  03                 	db	3
  1034  007B04  004D               	dw	77
  1035  007B06  0069               	dw	105
  1036  007B08  0063               	dw	99
  1037  007B0A  0072               	dw	114
  1038  007B0C  006F               	dw	111
  1039  007B0E  0063               	dw	99
  1040  007B10  0068               	dw	104
  1041  007B12  0069               	dw	105
  1042  007B14  0070               	dw	112
  1043  007B16  0020               	dw	32
  1044  007B18  0054               	dw	84
  1045  007B1A  0065               	dw	101
  1046  007B1C  0063               	dw	99
  1047  007B1E  0068               	dw	104
  1048  007B20  006E               	dw	110
  1049  007B22  006F               	dw	111
  1050  007B24  006C               	dw	108
  1051  007B26  006F               	dw	111
  1052  007B28  0067               	dw	103
  1053  007B2A  0079               	dw	121
  1054  007B2C  0020               	dw	32
  1055  007B2E  0049               	dw	73
  1056  007B30  006E               	dw	110
  1057  007B32  0063               	dw	99
  1058  007B34  002E               	dw	46
  1059  007B36                     __end_of_sd001:
  1060                           	opt stack 0
  1061  007B36                     _sd002:
  1062                           	opt stack 0
  1063  007B36  34                 	db	52
  1064  007B37  03                 	db	3
  1065  007B38  0043               	dw	67
  1066  007B3A  0044               	dw	68
  1067  007B3C  0043               	dw	67
  1068  007B3E  0020               	dw	32
  1069  007B40  0052               	dw	82
  1070  007B42  0053               	dw	83
  1071  007B44  002D               	dw	45
  1072  007B46  0032               	dw	50
  1073  007B48  0033               	dw	51
  1074  007B4A  0032               	dw	50
  1075  007B4C  0020               	dw	32
  1076  007B4E  0045               	dw	69
  1077  007B50  006D               	dw	109
  1078  007B52  0075               	dw	117
  1079  007B54  006C               	dw	108
  1080  007B56  0061               	dw	97
  1081  007B58  0074               	dw	116
  1082  007B5A  0069               	dw	105
  1083  007B5C  006F               	dw	111
  1084  007B5E  006E               	dw	110
  1085  007B60  0020               	dw	32
  1086  007B62  0044               	dw	68
  1087  007B64  0065               	dw	101
  1088  007B66  006D               	dw	109
  1089  007B68  006F               	dw	111
  1090  007B6A                     __end_of_sd002:
  1091                           	opt stack 0
  1092  007B6A                     _device_dsc:
  1093                           	opt stack 0
  1094  007B6A  12                 	db	18
  1095  007B6B  01                 	db	1
  1096  007B6C  0200               	dw	512
  1097  007B6E  02                 	db	2
  1098  007B6F  00                 	db	0
  1099  007B70  00                 	db	0
  1100  007B71  08                 	db	8
  1101  007B72  04D8               	dw	1240
  1102  007B74  000A               	dw	10
  1103  007B76  0100               	dw	256
  1104  007B78  01                 	db	1
  1105  007B79  02                 	db	2
  1106  007B7A  00                 	db	0
  1107  007B7B  01                 	db	1
  1108  007B7C                     __end_of_device_dsc:
  1109                           	opt stack 0
  1110  007B7C                     _sd000:
  1111                           	opt stack 0
  1112  007B7C  04                 	db	4
  1113  007B7D  03                 	db	3
  1114  007B7E  0409               	dw	1033
  1115  007B80                     __end_of_sd000:
  1116                           	opt stack 0
  1117  0000                     _ANSELAbits	set	3931
  1118  0000                     _ANSELCbits	set	3933
  1119  0000                     _ACTCON	set	4021
  1120  0000                     _ADCON0	set	4034
  1121  0000                     _ADCON0bits	set	4034
  1122  0000                     _ADCON1	set	4033
  1123  0000                     _ADCON2	set	4032
  1124  0000                     _ADRESH	set	4036
  1125  0000                     _ADRESL	set	4035
  1126  0000                     _BAUDCON	set	4024
  1127  0000                     _CM1CON0	set	3992
  1128  0000                     _CM2CON1bits	set	3994
  1129  0000                     _EEADR	set	4009
  1130  0000                     _EECON1bits	set	4006
  1131  0000                     _EECON2	set	4007
  1132  0000                     _EEDATA	set	4008
  1133  0000                     _INTCONbits	set	4082
  1134  0000                     _IOCCbits	set	3975
  1135  0000                     _IPR3bits	set	4005
  1136  0000                     _LATAbits	set	3977
  1137  0000                     _LATBbits	set	3978
  1138  0000                     _LATCbits	set	3979
  1139  0000                     _OSCCON	set	4051
  1140  0000                     _OSCCON2	set	4050
  1141  0000                     _OSCCON2bits	set	4050
  1142  0000                     _OSCTUNE	set	3995
  1143  0000                     _PIE1bits	set	3997
  1144  0000                     _PIE2bits	set	4000
  1145  0000                     _PIE3bits	set	4003
  1146  0000                     _PIR1bits	set	3998
  1147  0000                     _PIR2bits	set	4001
  1148  0000                     _PIR3bits	set	4004
  1149  0000                     _PORTAbits	set	3968
  1150  0000                     _PORTCbits	set	3970
  1151  0000                     _PR2	set	4027
  1152  0000                     _RCONbits	set	4048
  1153  0000                     _RCREG	set	4014
  1154  0000                     _RCSTA	set	4011
  1155  0000                     _RCSTAbits	set	4011
  1156  0000                     _SPBRG	set	4015
  1157  0000                     _SPBRGH	set	4016
  1158  0000                     _SSP1ADD	set	4040
  1159  0000                     _SSP1CON1	set	4038
  1160  0000                     _SSP1CON1bits	set	4038
  1161  0000                     _SSP1STAT	set	4039
  1162  0000                     _SSP1STATbits	set	4039
  1163  0000                     _SSPBUF	set	4041
  1164  0000                     _T1CON	set	4045
  1165  0000                     _T1CONbits	set	4045
  1166  0000                     _T1GCON	set	4044
  1167  0000                     _T2CON	set	4026
  1168  0000                     _T2CONbits	set	4026
  1169  0000                     _TMR1H	set	4047
  1170  0000                     _TMR1L	set	4046
  1171  0000                     _TMR2	set	4028
  1172  0000                     _TRISAbits	set	3986
  1173  0000                     _TRISBbits	set	3987
  1174  0000                     _TRISCbits	set	3988
  1175  0000                     _TXREG	set	4013
  1176  0000                     _TXSTA	set	4012
  1177  0000                     _TXSTAbits	set	4012
  1178  0000                     _UADDR	set	3939
  1179  0000                     _UCFG	set	3938
  1180  0000                     _UCON	set	3936
  1181  0000                     _UCONbits	set	3936
  1182  0000                     _UEIE	set	3942
  1183  0000                     _UEIR	set	3943
  1184  0000                     _UEP0bits	set	3946
  1185  0000                     _UIE	set	3940
  1186  0000                     _UIEbits	set	3940
  1187  0000                     _UIR	set	3941
  1188  0000                     _UIRbits	set	3941
  1189  0000                     _USTAT	set	3937
  1190  0000                     _VREFCON0	set	3965
  1191  0000                     _UEP0	set	3946
  1192  0000                     _UEP1	set	3947
  1193  0000                     _CKE	set	32318
  1194  0000                     _CKP	set	32308
  1195  0000                     _GIE	set	32663
  1196  0000                     _PEIE	set	32662
  1197  007B80                     STR_38:
  1198  007B80  6D                 	db	109	;'m'
  1199  007B81  61                 	db	97	;'a'
  1200  007B82  63                 	db	99	;'c'
  1201  007B83  20                 	db	32
  1202  007B84  73                 	db	115	;'s'
  1203  007B85  65                 	db	101	;'e'
  1204  007B86  74                 	db	116	;'t'
  1205  007B87  20                 	db	32
  1206  007B88  6E                 	db	110	;'n'
  1207  007B89  77                 	db	119	;'w'
  1208  007B8A  6B                 	db	107	;'k'
  1209  007B8B  73                 	db	115	;'s'
  1210  007B8C  6B                 	db	107	;'k'
  1211  007B8D  65                 	db	101	;'e'
  1212  007B8E  79                 	db	121	;'y'
  1213  007B8F  20                 	db	32
  1214  007B90  32                 	db	50	;'2'
  1215  007B91  42                 	db	66	;'B'
  1216  007B92  37                 	db	55	;'7'
  1217  007B93  45                 	db	69	;'E'
  1218  007B94  31                 	db	49	;'1'
  1219  007B95  35                 	db	53	;'5'
  1220  007B96  31                 	db	49	;'1'
  1221  007B97  36                 	db	54	;'6'
  1222  007B98  32                 	db	50	;'2'
  1223  007B99  38                 	db	56	;'8'
  1224  007B9A  41                 	db	65	;'A'
  1225  007B9B  45                 	db	69	;'E'
  1226  007B9C  44                 	db	68	;'D'
  1227  007B9D  32                 	db	50	;'2'
  1228  007B9E  41                 	db	65	;'A'
  1229  007B9F  36                 	db	54	;'6'
  1230  007BA0  41                 	db	65	;'A'
  1231  007BA1  42                 	db	66	;'B'
  1232  007BA2  46                 	db	70	;'F'
  1233  007BA3  37                 	db	55	;'7'
  1234  007BA4  31                 	db	49	;'1'
  1235  007BA5  35                 	db	53	;'5'
  1236  007BA6  38                 	db	56	;'8'
  1237  007BA7  38                 	db	56	;'8'
  1238  007BA8  30                 	db	48	;'0'
  1239  007BA9  39                 	db	57	;'9'
  1240  007BAA  43                 	db	67	;'C'
  1241  007BAB  46                 	db	70	;'F'
  1242  007BAC  34                 	db	52	;'4'
  1243  007BAD  46                 	db	70	;'F'
  1244  007BAE  33                 	db	51	;'3'
  1245  007BAF  43                 	db	67	;'C'
  1246  007BB0  00                 	db	0
  1247  007BB1                     STR_35:
  1248  007BB1  6D                 	db	109	;'m'
  1249  007BB2  61                 	db	97	;'a'
  1250  007BB3  63                 	db	99	;'c'
  1251  007BB4  20                 	db	32
  1252  007BB5  73                 	db	115	;'s'
  1253  007BB6  65                 	db	101	;'e'
  1254  007BB7  74                 	db	116	;'t'
  1255  007BB8  20                 	db	32
  1256  007BB9  61                 	db	97	;'a'
  1257  007BBA  70                 	db	112	;'p'
  1258  007BBB  70                 	db	112	;'p'
  1259  007BBC  73                 	db	115	;'s'
  1260  007BBD  6B                 	db	107	;'k'
  1261  007BBE  65                 	db	101	;'e'
  1262  007BBF  79                 	db	121	;'y'
  1263  007BC0  20                 	db	32
  1264  007BC1  32                 	db	50	;'2'
  1265  007BC2  42                 	db	66	;'B'
  1266  007BC3  37                 	db	55	;'7'
  1267  007BC4  45                 	db	69	;'E'
  1268  007BC5  31                 	db	49	;'1'
  1269  007BC6  35                 	db	53	;'5'
  1270  007BC7  31                 	db	49	;'1'
  1271  007BC8  36                 	db	54	;'6'
  1272  007BC9  32                 	db	50	;'2'
  1273  007BCA  38                 	db	56	;'8'
  1274  007BCB  41                 	db	65	;'A'
  1275  007BCC  45                 	db	69	;'E'
  1276  007BCD  44                 	db	68	;'D'
  1277  007BCE  32                 	db	50	;'2'
  1278  007BCF  41                 	db	65	;'A'
  1279  007BD0  36                 	db	54	;'6'
  1280  007BD1  41                 	db	65	;'A'
  1281  007BD2  42                 	db	66	;'B'
  1282  007BD3  46                 	db	70	;'F'
  1283  007BD4  37                 	db	55	;'7'
  1284  007BD5  31                 	db	49	;'1'
  1285  007BD6  35                 	db	53	;'5'
  1286  007BD7  38                 	db	56	;'8'
  1287  007BD8  38                 	db	56	;'8'
  1288  007BD9  30                 	db	48	;'0'
  1289  007BDA  39                 	db	57	;'9'
  1290  007BDB  43                 	db	67	;'C'
  1291  007BDC  46                 	db	70	;'F'
  1292  007BDD  34                 	db	52	;'4'
  1293  007BDE  46                 	db	70	;'F'
  1294  007BDF  33                 	db	51	;'3'
  1295  007BE0  43                 	db	67	;'C'
  1296  007BE1  00                 	db	0
  1297  007BE2                     STR_96:
  1298  007BE2  73                 	db	115	;'s'
  1299  007BE3  79                 	db	121	;'y'
  1300  007BE4  73                 	db	115	;'s'
  1301  007BE5  20                 	db	32
  1302  007BE6  73                 	db	115	;'s'
  1303  007BE7  65                 	db	101	;'e'
  1304  007BE8  74                 	db	116	;'t'
  1305  007BE9  20                 	db	32
  1306  007BEA  70                 	db	112	;'p'
  1307  007BEB  69                 	db	105	;'i'
  1308  007BEC  6E                 	db	110	;'n'
  1309  007BED  64                 	db	100	;'d'
  1310  007BEE  69                 	db	105	;'i'
  1311  007BEF  67                 	db	103	;'g'
  1312  007BF0  20                 	db	32
  1313  007BF1  47                 	db	71	;'G'
  1314  007BF2  50                 	db	80	;'P'
  1315  007BF3  49                 	db	73	;'I'
  1316  007BF4  4F                 	db	79	;'O'
  1317  007BF5  31                 	db	49	;'1'
  1318  007BF6  30                 	db	48	;'0'
  1319  007BF7  20                 	db	32
  1320  007BF8  30                 	db	48	;'0'
  1321  007BF9  0D                 	db	13
  1322  007BFA  0A                 	db	10
  1323  007BFB  00                 	db	0
  1324  007BFC  73                 	db	115	;'s'
  1325  007BFD  79                 	db	121	;'y'
  1326  007BFE  73                 	db	115	;'s'
  1327  007BFF  20                 	db	32
  1328  007C00  73                 	db	115	;'s'
  1329  007C01  65                 	db	101	;'e'
  1330  007C02  74                 	db	116	;'t'
  1331  007C03  20                 	db	32
  1332  007C04  70                 	db	112	;'p'
  1333  007C05  69                 	db	105	;'i'
  1334  007C06  6E                 	db	110	;'n'
  1335  007C07  64                 	db	100	;'d'
  1336  007C08  69                 	db	105	;'i'
  1337  007C09  67                 	db	103	;'g'
  1338  007C0A  20                 	db	32
  1339  007C0B  47                 	db	71	;'G'
  1340  007C0C  50                 	db	80	;'P'
  1341  007C0D  49                 	db	73	;'I'
  1342  007C0E  4F                 	db	79	;'O'
  1343  007C0F  31                 	db	49	;'1'
  1344  007C10  31                 	db	49	;'1'
  1345  007C11  20                 	db	32
  1346  007C12  30                 	db	48	;'0'
  1347  007C13  0D                 	db	13
  1348  007C14  0A                 	db	10
  1349  007C15  00                 	db	0
  1350  007C16  73                 	db	115	;'s'
  1351  007C17  79                 	db	121	;'y'
  1352  007C18  73                 	db	115	;'s'
  1353  007C19  20                 	db	32
  1354  007C1A  73                 	db	115	;'s'
  1355  007C1B  65                 	db	101	;'e'
  1356  007C1C  74                 	db	116	;'t'
  1357  007C1D  20                 	db	32
  1358  007C1E  70                 	db	112	;'p'
  1359  007C1F  69                 	db	105	;'i'
  1360  007C20  6E                 	db	110	;'n'
  1361  007C21  64                 	db	100	;'d'
  1362  007C22  69                 	db	105	;'i'
  1363  007C23  67                 	db	103	;'g'
  1364  007C24  20                 	db	32
  1365  007C25  47                 	db	71	;'G'
  1366  007C26  50                 	db	80	;'P'
  1367  007C27  49                 	db	73	;'I'
  1368  007C28  4F                 	db	79	;'O'
  1369  007C29  31                 	db	49	;'1'
  1370  007C2A  30                 	db	48	;'0'
  1371  007C2B  20                 	db	32
  1372  007C2C  31                 	db	49	;'1'
  1373  007C2D  0D                 	db	13
  1374  007C2E  0A                 	db	10
  1375  007C2F  00                 	db	0
  1376  007C30  73                 	db	115	;'s'
  1377  007C31  79                 	db	121	;'y'
  1378  007C32  73                 	db	115	;'s'
  1379  007C33  20                 	db	32
  1380  007C34  73                 	db	115	;'s'
  1381  007C35  65                 	db	101	;'e'
  1382  007C36  74                 	db	116	;'t'
  1383  007C37  20                 	db	32
  1384  007C38  70                 	db	112	;'p'
  1385  007C39  69                 	db	105	;'i'
  1386  007C3A  6E                 	db	110	;'n'
  1387  007C3B  64                 	db	100	;'d'
  1388  007C3C  69                 	db	105	;'i'
  1389  007C3D  67                 	db	103	;'g'
  1390  007C3E  20                 	db	32
  1391  007C3F  47                 	db	71	;'G'
  1392  007C40  50                 	db	80	;'P'
  1393  007C41  49                 	db	73	;'I'
  1394  007C42  4F                 	db	79	;'O'
  1395  007C43  31                 	db	49	;'1'
  1396  007C44  31                 	db	49	;'1'
  1397  007C45  20                 	db	32
  1398  007C46  31                 	db	49	;'1'
  1399  007C47  0D                 	db	13
  1400  007C48  0A                 	db	10
  1401  007C49  00                 	db	0
  1402  007C4A                     STR_32:
  1403  007C4A  6D                 	db	109	;'m'
  1404  007C4B  61                 	db	97	;'a'
  1405  007C4C  63                 	db	99	;'c'
  1406  007C4D  20                 	db	32
  1407  007C4E  73                 	db	115	;'s'
  1408  007C4F  65                 	db	101	;'e'
  1409  007C50  74                 	db	116	;'t'
  1410  007C51  20                 	db	32
  1411  007C52  64                 	db	100	;'d'
  1412  007C53  65                 	db	101	;'e'
  1413  007C54  76                 	db	118	;'v'
  1414  007C55  61                 	db	97	;'a'
  1415  007C56  64                 	db	100	;'d'
  1416  007C57  64                 	db	100	;'d'
  1417  007C58  72                 	db	114	;'r'
  1418  007C59  20                 	db	32
  1419  007C5A  41                 	db	65	;'A'
  1420  007C5B  42                 	db	66	;'B'
  1421  007C5C  43                 	db	67	;'C'
  1422  007C5D  44                 	db	68	;'D'
  1423  007C5E  30                 	db	48	;'0'
  1424  007C5F  30                 	db	48	;'0'
  1425  007C60  30                 	db	48	;'0'
  1426  007C61  31                 	db	49	;'1'
  1427  007C62  00                 	db	0
  1428  007C63                     STR_60:
  1429  007C63  6D                 	db	109	;'m'
  1430  007C64  61                 	db	97	;'a'
  1431  007C65  63                 	db	99	;'c'
  1432  007C66  20                 	db	32
  1433  007C67  74                 	db	116	;'t'
  1434  007C68  78                 	db	120	;'x'
  1435  007C69  20                 	db	32
  1436  007C6A  75                 	db	117	;'u'
  1437  007C6B  6E                 	db	110	;'n'
  1438  007C6C  63                 	db	99	;'c'
  1439  007C6D  6E                 	db	110	;'n'
  1440  007C6E  66                 	db	102	;'f'
  1441  007C6F  20                 	db	32
  1442  007C70  31                 	db	49	;'1'
  1443  007C71  20                 	db	32
  1444  007C72  30                 	db	48	;'0'
  1445  007C73  30                 	db	48	;'0'
  1446  007C74  30                 	db	48	;'0'
  1447  007C75  30                 	db	48	;'0'
  1448  007C76  30                 	db	48	;'0'
  1449  007C77  30                 	db	48	;'0'
  1450  007C78  30                 	db	48	;'0'
  1451  007C79  30                 	db	48	;'0'
  1452  007C7A  00                 	db	0
  1453  007C7B                     STR_47:
  1454  007C7B  6D                 	db	109	;'m'
  1455  007C7C  61                 	db	97	;'a'
  1456  007C7D  63                 	db	99	;'c'
  1457  007C7E  20                 	db	32
  1458  007C7F  73                 	db	115	;'s'
  1459  007C80  65                 	db	101	;'e'
  1460  007C81  74                 	db	116	;'t'
  1461  007C82  20                 	db	32
  1462  007C83  72                 	db	114	;'r'
  1463  007C84  78                 	db	120	;'x'
  1464  007C85  32                 	db	50	;'2'
  1465  007C86  20                 	db	32
  1466  007C87  38                 	db	56	;'8'
  1467  007C88  20                 	db	32
  1468  007C89  39                 	db	57	;'9'
  1469  007C8A  32                 	db	50	;'2'
  1470  007C8B  33                 	db	51	;'3'
  1471  007C8C  33                 	db	51	;'3'
  1472  007C8D  30                 	db	48	;'0'
  1473  007C8E  30                 	db	48	;'0'
  1474  007C8F  30                 	db	48	;'0'
  1475  007C90  30                 	db	48	;'0'
  1476  007C91  30                 	db	48	;'0'
  1477  007C92  00                 	db	0
  1478  007C93                     STR_72:
  1479  007C93  6D                 	db	109	;'m'
  1480  007C94  61                 	db	97	;'a'
  1481  007C95  63                 	db	99	;'c'
  1482  007C96  20                 	db	32
  1483  007C97  74                 	db	116	;'t'
  1484  007C98  78                 	db	120	;'x'
  1485  007C99  20                 	db	32
  1486  007C9A  75                 	db	117	;'u'
  1487  007C9B  6E                 	db	110	;'n'
  1488  007C9C  63                 	db	99	;'c'
  1489  007C9D  6E                 	db	110	;'n'
  1490  007C9E  66                 	db	102	;'f'
  1491  007C9F  20                 	db	32
  1492  007CA0  31                 	db	49	;'1'
  1493  007CA1  20                 	db	32
  1494  007CA2  25                 	db	37
  1495  007CA3  30                 	db	48	;'0'
  1496  007CA4  34                 	db	52	;'4'
  1497  007CA5  58                 	db	88	;'X'
  1498  007CA6  25                 	db	37
  1499  007CA7  30                 	db	48	;'0'
  1500  007CA8  34                 	db	52	;'4'
  1501  007CA9  58                 	db	88	;'X'
  1502  007CAA  00                 	db	0
  1503  007CAB                     STR_50:
  1504  007CAB  6D                 	db	109	;'m'
  1505  007CAC  61                 	db	97	;'a'
  1506  007CAD  63                 	db	99	;'c'
  1507  007CAE  20                 	db	32
  1508  007CAF  73                 	db	115	;'s'
  1509  007CB0  65                 	db	101	;'e'
  1510  007CB1  74                 	db	116	;'t'
  1511  007CB2  20                 	db	32
  1512  007CB3  63                 	db	99	;'c'
  1513  007CB4  68                 	db	104	;'h'
  1514  007CB5  20                 	db	32
  1515  007CB6  73                 	db	115	;'s'
  1516  007CB7  74                 	db	116	;'t'
  1517  007CB8  61                 	db	97	;'a'
  1518  007CB9  74                 	db	116	;'t'
  1519  007CBA  75                 	db	117	;'u'
  1520  007CBB  73                 	db	115	;'s'
  1521  007CBC  20                 	db	32
  1522  007CBD  25                 	db	37
  1523  007CBE  64                 	db	100	;'d'
  1524  007CBF  20                 	db	32
  1525  007CC0  25                 	db	37
  1526  007CC1  73                 	db	115	;'s'
  1527  007CC2  00                 	db	0
  1528  007CC3                     STR_22:
  1529  007CC3  73                 	db	115	;'s'
  1530  007CC4  79                 	db	121	;'y'
  1531  007CC5  73                 	db	115	;'s'
  1532  007CC6  20                 	db	32
  1533  007CC7  73                 	db	115	;'s'
  1534  007CC8  6C                 	db	108	;'l'
  1535  007CC9  65                 	db	101	;'e'
  1536  007CCA  65                 	db	101	;'e'
  1537  007CCB  70                 	db	112	;'p'
  1538  007CCC  20                 	db	32
  1539  007CCD  39                 	db	57	;'9'
  1540  007CCE  39                 	db	57	;'9'
  1541  007CCF  39                 	db	57	;'9'
  1542  007CD0  39                 	db	57	;'9'
  1543  007CD1  39                 	db	57	;'9'
  1544  007CD2  39                 	db	57	;'9'
  1545  007CD3  39                 	db	57	;'9'
  1546  007CD4  39                 	db	57	;'9'
  1547  007CD5  39                 	db	57	;'9'
  1548  007CD6  00                 	db	0
  1549  007CD7                     STR_102:
  1550  007CD7  30                 	db	48	;'0'
  1551  007CD8  31                 	db	49	;'1'
  1552  007CD9  32                 	db	50	;'2'
  1553  007CDA  33                 	db	51	;'3'
  1554  007CDB  34                 	db	52	;'4'
  1555  007CDC  35                 	db	53	;'5'
  1556  007CDD  36                 	db	54	;'6'
  1557  007CDE  37                 	db	55	;'7'
  1558  007CDF  38                 	db	56	;'8'
  1559  007CE0  39                 	db	57	;'9'
  1560  007CE1  41                 	db	65	;'A'
  1561  007CE2  42                 	db	66	;'B'
  1562  007CE3  43                 	db	67	;'C'
  1563  007CE4  44                 	db	68	;'D'
  1564  007CE5  45                 	db	69	;'E'
  1565  007CE6  46                 	db	70	;'F'
  1566  007CE7  00                 	db	0
  1567  007CE8                     STR_28:
  1568  007CE8  20                 	db	32
  1569  007CE9  28                 	db	40
  1570  007CEA  53                 	db	83	;'S'
  1571  007CEB  31                 	db	49	;'1'
  1572  007CEC  29                 	db	41
  1573  007CED  20                 	db	32
  1574  007CEE  20                 	db	32
  1575  007CEF  20                 	db	32
  1576  007CF0  20                 	db	32
  1577  007CF1  20                 	db	32
  1578  007CF2  20                 	db	32
  1579  007CF3  28                 	db	40
  1580  007CF4  53                 	db	83	;'S'
  1581  007CF5  32                 	db	50	;'2'
  1582  007CF6  29                 	db	41
  1583  007CF7  20                 	db	32
  1584  007CF8  00                 	db	0
  1585  007CF9                     STR_58:
  1586  007CF9  57                 	db	87	;'W'
  1587  007CFA  61                 	db	97	;'a'
  1588  007CFB  69                 	db	105	;'i'
  1589  007CFC  74                 	db	116	;'t'
  1590  007CFD  20                 	db	32
  1591  007CFE  61                 	db	97	;'a'
  1592  007CFF  63                 	db	99	;'c'
  1593  007D00  63                 	db	99	;'c'
  1594  007D01  65                 	db	101	;'e'
  1595  007D02  70                 	db	112	;'p'
  1596  007D03  74                 	db	116	;'t'
  1597  007D04  65                 	db	101	;'e'
  1598  007D05  64                 	db	100	;'d'
  1599  007D06  2E                 	db	46
  1600  007D07  2E                 	db	46
  1601  007D08  2E                 	db	46
  1602  007D09  00                 	db	0
  1603  007D0A                     STR_25:
  1604  007D0A  52                 	db	82	;'R'
  1605  007D0B  65                 	db	101	;'e'
  1606  007D0C  52                 	db	82	;'R'
  1607  007D0D  75                 	db	117	;'u'
  1608  007D0E  6E                 	db	110	;'n'
  1609  007D0F  20                 	db	32
  1610  007D10  50                 	db	80	;'P'
  1611  007D11  77                 	db	119	;'w'
  1612  007D12  72                 	db	114	;'r'
  1613  007D13  54                 	db	84	;'T'
  1614  007D14  73                 	db	115	;'s'
  1615  007D15  74                 	db	116	;'t'
  1616  007D16  3C                 	db	60	;'<'
  1617  007D17  53                 	db	83	;'S'
  1618  007D18  32                 	db	50	;'2'
  1619  007D19  3E                 	db	62	;'>'
  1620  007D1A  00                 	db	0
  1621  007D1B                     STR_76:
  1622  007D1B  49                 	db	73	;'I'
  1623  007D1C  73                 	db	115	;'s'
  1624  007D1D  73                 	db	115	;'s'
  1625  007D1E  75                 	db	117	;'u'
  1626  007D1F  65                 	db	101	;'e'
  1627  007D20  20                 	db	32
  1628  007D21  50                 	db	80	;'P'
  1629  007D22  65                 	db	101	;'e'
  1630  007D23  72                 	db	114	;'r'
  1631  007D24  6F                 	db	111	;'o'
  1632  007D25  64                 	db	100	;'d'
  1633  007D26  69                 	db	105	;'i'
  1634  007D27  63                 	db	99	;'c'
  1635  007D28  20                 	db	32
  1636  007D29  54                 	db	84	;'T'
  1637  007D2A  58                 	db	88	;'X'
  1638  007D2B  00                 	db	0
  1639  007D2C                     STR_62:
  1640  007D2C  6D                 	db	109	;'m'
  1641  007D2D  6F                 	db	111	;'o'
  1642  007D2E  74                 	db	116	;'t'
  1643  007D2F  65                 	db	101	;'e'
  1644  007D30  57                 	db	87	;'W'
  1645  007D31  61                 	db	97	;'a'
  1646  007D32  69                 	db	105	;'i'
  1647  007D33  74                 	db	116	;'t'
  1648  007D34  41                 	db	65	;'A'
  1649  007D35  63                 	db	99	;'c'
  1650  007D36  63                 	db	99	;'c'
  1651  007D37  65                 	db	101	;'e'
  1652  007D38  70                 	db	112	;'p'
  1653  007D39  74                 	db	116	;'t'
  1654  007D3A  65                 	db	101	;'e'
  1655  007D3B  64                 	db	100	;'d'
  1656  007D3C  00                 	db	0
  1657  007D3D                     STR_26:
  1658  007D3D  4D                 	db	77	;'M'
  1659  007D3E  6F                 	db	111	;'o'
  1660  007D3F  62                 	db	98	;'b'
  1661  007D40  69                 	db	105	;'i'
  1662  007D41  6C                 	db	108	;'l'
  1663  007D42  65                 	db	101	;'e'
  1664  007D43  20                 	db	32
  1665  007D44  4D                 	db	77	;'M'
  1666  007D45  6F                 	db	111	;'o'
  1667  007D46  74                 	db	116	;'t'
  1668  007D47  65                 	db	101	;'e'
  1669  007D48  20                 	db	32
  1670  007D49  2D                 	db	45
  1671  007D4A  41                 	db	65	;'A'
  1672  007D4B  70                 	db	112	;'p'
  1673  007D4C  70                 	db	112	;'p'
  1674  007D4D  00                 	db	0
  1675  007D4E                     STR_27:
  1676  007D4E  4E                 	db	78	;'N'
  1677  007D4F  61                 	db	97	;'a'
  1678  007D50  76                 	db	118	;'v'
  1679  007D51  69                 	db	105	;'i'
  1680  007D52  67                 	db	103	;'g'
  1681  007D53  61                 	db	97	;'a'
  1682  007D54  74                 	db	116	;'t'
  1683  007D55  65                 	db	101	;'e'
  1684  007D56  20                 	db	32
  1685  007D57  20                 	db	32
  1686  007D58  53                 	db	83	;'S'
  1687  007D59  65                 	db	101	;'e'
  1688  007D5A  6C                 	db	108	;'l'
  1689  007D5B  65                 	db	101	;'e'
  1690  007D5C  63                 	db	99	;'c'
  1691  007D5D  74                 	db	116	;'t'
  1692  007D5E  00                 	db	0
  1693  007D5F                     STR_67:
  1694  007D5F  20                 	db	32
  1695  007D60  20                 	db	32
  1696  007D61  53                 	db	83	;'S'
  1697  007D62  65                 	db	101	;'e'
  1698  007D63  6E                 	db	110	;'n'
  1699  007D64  73                 	db	115	;'s'
  1700  007D65  6F                 	db	111	;'o'
  1701  007D66  72                 	db	114	;'r'
  1702  007D67  20                 	db	32
  1703  007D68  44                 	db	68	;'D'
  1704  007D69  61                 	db	97	;'a'
  1705  007D6A  74                 	db	116	;'t'
  1706  007D6B  61                 	db	97	;'a'
  1707  007D6C  20                 	db	32
  1708  007D6D  20                 	db	32
  1709  007D6E  00                 	db	0
  1710  007D6F                     STR_79:
  1711  007D6F  28                 	db	40
  1712  007D70  4E                 	db	78	;'N'
  1713  007D71  41                 	db	65	;'A'
  1714  007D72  56                 	db	86	;'V'
  1715  007D73  29                 	db	41
  1716  007D74  20                 	db	32
  1717  007D75  20                 	db	32
  1718  007D76  20                 	db	32
  1719  007D77  20                 	db	32
  1720  007D78  28                 	db	40
  1721  007D79  53                 	db	83	;'S'
  1722  007D7A  45                 	db	69	;'E'
  1723  007D7B  4C                 	db	76	;'L'
  1724  007D7C  29                 	db	41
  1725  007D7D  20                 	db	32
  1726  007D7E  00                 	db	0
  1727  007D7F                     STR_44:
  1728  007D7F  6D                 	db	109	;'m'
  1729  007D80  61                 	db	97	;'a'
  1730  007D81  63                 	db	99	;'c'
  1731  007D82  20                 	db	32
  1732  007D83  73                 	db	115	;'s'
  1733  007D84  65                 	db	101	;'e'
  1734  007D85  74                 	db	116	;'t'
  1735  007D86  20                 	db	32
  1736  007D87  73                 	db	115	;'s'
  1737  007D88  79                 	db	121	;'y'
  1738  007D89  6E                 	db	110	;'n'
  1739  007D8A  63                 	db	99	;'c'
  1740  007D8B  20                 	db	32
  1741  007D8C  33                 	db	51	;'3'
  1742  007D8D  34                 	db	52	;'4'
  1743  007D8E  00                 	db	0
  1744  007D8F                     STR_41:
  1745  007D8F  6D                 	db	109	;'m'
  1746  007D90  61                 	db	97	;'a'
  1747  007D91  63                 	db	99	;'c'
  1748  007D92  20                 	db	32
  1749  007D93  73                 	db	115	;'s'
  1750  007D94  65                 	db	101	;'e'
  1751  007D95  74                 	db	116	;'t'
  1752  007D96  20                 	db	32
  1753  007D97  61                 	db	97	;'a'
  1754  007D98  64                 	db	100	;'d'
  1755  007D99  72                 	db	114	;'r'
  1756  007D9A  20                 	db	32
  1757  007D9B  6F                 	db	111	;'o'
  1758  007D9C  66                 	db	102	;'f'
  1759  007D9D  66                 	db	102	;'f'
  1760  007D9E  00                 	db	0
  1761  007D9F  42                 	db	66	;'B'
  1762  007DA0  75                 	db	117	;'u'
  1763  007DA1  69                 	db	105	;'i'
  1764  007DA2  6C                 	db	108	;'l'
  1765  007DA3  64                 	db	100	;'d'
  1766  007DA4  20                 	db	32
  1767  007DA5  44                 	db	68	;'D'
  1768  007DA6  61                 	db	97	;'a'
  1769  007DA7  74                 	db	116	;'t'
  1770  007DA8  65                 	db	101	;'e'
  1771  007DA9  2F                 	db	47
  1772  007DAA  54                 	db	84	;'T'
  1773  007DAB  69                 	db	105	;'i'
  1774  007DAC  6D                 	db	109	;'m'
  1775  007DAD  65                 	db	101	;'e'
  1776  007DAE  00                 	db	0
  1777  007DAF                     STR_3:
  1778  007DAF  20                 	db	32
  1779  007DB0  20                 	db	32
  1780  007DB1  20                 	db	32
  1781  007DB2  62                 	db	98	;'b'
  1782  007DB3  75                 	db	117	;'u'
  1783  007DB4  69                 	db	105	;'i'
  1784  007DB5  6C                 	db	108	;'l'
  1785  007DB6  64                 	db	100	;'d'
  1786  007DB7  20                 	db	32
  1787  007DB8  30                 	db	48	;'0'
  1788  007DB9  30                 	db	48	;'0'
  1789  007DBA  36                 	db	54	;'6'
  1790  007DBB  20                 	db	32
  1791  007DBC  20                 	db	32
  1792  007DBD  20                 	db	32
  1793  007DBE  00                 	db	0
  1794  007DBF                     STR_64:
  1795  007DBF  77                 	db	119	;'w'
  1796  007DC0  61                 	db	97	;'a'
  1797  007DC1  69                 	db	105	;'i'
  1798  007DC2  74                 	db	116	;'t'
  1799  007DC3  20                 	db	32
  1800  007DC4  6D                 	db	109	;'m'
  1801  007DC5  61                 	db	97	;'a'
  1802  007DC6  63                 	db	99	;'c'
  1803  007DC7  5F                 	db	95	;'_'
  1804  007DC8  74                 	db	116	;'t'
  1805  007DC9  78                 	db	120	;'x'
  1806  007DCA  5F                 	db	95	;'_'
  1807  007DCB  6F                 	db	111	;'o'
  1808  007DCC  6B                 	db	107	;'k'
  1809  007DCD  00                 	db	0
  1810  007DCE                     STR_82:
  1811  007DCE  6D                 	db	109	;'m'
  1812  007DCF  61                 	db	97	;'a'
  1813  007DD0  63                 	db	99	;'c'
  1814  007DD1  20                 	db	32
  1815  007DD2  73                 	db	115	;'s'
  1816  007DD3  65                 	db	101	;'e'
  1817  007DD4  74                 	db	116	;'t'
  1818  007DD5  20                 	db	32
  1819  007DD6  61                 	db	97	;'a'
  1820  007DD7  64                 	db	100	;'d'
  1821  007DD8  72                 	db	114	;'r'
  1822  007DD9  20                 	db	32
  1823  007DDA  6F                 	db	111	;'o'
  1824  007DDB  6E                 	db	110	;'n'
  1825  007DDC  00                 	db	0
  1826  007DDD                     STR_1:
  1827  007DDD  53                 	db	83	;'S'
  1828  007DDE  63                 	db	99	;'c'
  1829  007DDF  72                 	db	114	;'r'
  1830  007DE0  69                 	db	105	;'i'
  1831  007DE1  70                 	db	112	;'p'
  1832  007DE2  74                 	db	116	;'t'
  1833  007DE3  72                 	db	114	;'r'
  1834  007DE4  20                 	db	32
  1835  007DE5  49                 	db	73	;'I'
  1836  007DE6  6F                 	db	111	;'o'
  1837  007DE7  54                 	db	84	;'T'
  1838  007DE8  2D                 	db	45
  1839  007DE9  58                 	db	88	;'X'
  1840  007DEA  00                 	db	0
  1841  007DEB                     STR_78:
  1842  007DEB  4C                 	db	76	;'L'
  1843  007DEC  3A                 	db	58	;':'
  1844  007DED  20                 	db	32
  1845  007DEE  20                 	db	32
  1846  007DEF  20                 	db	32
  1847  007DF0  20                 	db	32
  1848  007DF1  20                 	db	32
  1849  007DF2  20                 	db	32
  1850  007DF3  20                 	db	32
  1851  007DF4  54                 	db	84	;'T'
  1852  007DF5  3A                 	db	58	;':'
  1853  007DF6  20                 	db	32
  1854  007DF7  00                 	db	0
  1855  007DF8                     STR_84:
  1856  007DF8  6D                 	db	109	;'m'
  1857  007DF9  61                 	db	97	;'a'
  1858  007DFA  63                 	db	99	;'c'
  1859  007DFB  20                 	db	32
  1860  007DFC  73                 	db	115	;'s'
  1861  007DFD  65                 	db	101	;'e'
  1862  007DFE  74                 	db	116	;'t'
  1863  007DFF  20                 	db	32
  1864  007E00  64                 	db	100	;'d'
  1865  007E01  72                 	db	114	;'r'
  1866  007E02  20                 	db	32
  1867  007E03  30                 	db	48	;'0'
  1868  007E04  00                 	db	0
  1869  007E05                     STR_85:
  1870  007E05  6D                 	db	109	;'m'
  1871  007E06  61                 	db	97	;'a'
  1872  007E07  63                 	db	99	;'c'
  1873  007E08  20                 	db	32
  1874  007E09  73                 	db	115	;'s'
  1875  007E0A  65                 	db	101	;'e'
  1876  007E0B  74                 	db	116	;'t'
  1877  007E0C  20                 	db	32
  1878  007E0D  64                 	db	100	;'d'
  1879  007E0E  72                 	db	114	;'r'
  1880  007E0F  20                 	db	32
  1881  007E10  31                 	db	49	;'1'
  1882  007E11  00                 	db	0
  1883  007E12  6D                 	db	109	;'m'
  1884  007E13  61                 	db	97	;'a'
  1885  007E14  63                 	db	99	;'c'
  1886  007E15  20                 	db	32
  1887  007E16  73                 	db	115	;'s'
  1888  007E17  65                 	db	101	;'e'
  1889  007E18  74                 	db	116	;'t'
  1890  007E19  20                 	db	32
  1891  007E1A  64                 	db	100	;'d'
  1892  007E1B  72                 	db	114	;'r'
  1893  007E1C  20                 	db	32
  1894  007E1D  32                 	db	50	;'2'
  1895  007E1E  00                 	db	0
  1896  007E1F  6D                 	db	109	;'m'
  1897  007E20  61                 	db	97	;'a'
  1898  007E21  63                 	db	99	;'c'
  1899  007E22  20                 	db	32
  1900  007E23  73                 	db	115	;'s'
  1901  007E24  65                 	db	101	;'e'
  1902  007E25  74                 	db	116	;'t'
  1903  007E26  20                 	db	32
  1904  007E27  64                 	db	100	;'d'
  1905  007E28  72                 	db	114	;'r'
  1906  007E29  20                 	db	32
  1907  007E2A  33                 	db	51	;'3'
  1908  007E2B  00                 	db	0
  1909  007E2C  6D                 	db	109	;'m'
  1910  007E2D  61                 	db	97	;'a'
  1911  007E2E  63                 	db	99	;'c'
  1912  007E2F  20                 	db	32
  1913  007E30  73                 	db	115	;'s'
  1914  007E31  65                 	db	101	;'e'
  1915  007E32  74                 	db	116	;'t'
  1916  007E33  20                 	db	32
  1917  007E34  64                 	db	100	;'d'
  1918  007E35  72                 	db	114	;'r'
  1919  007E36  20                 	db	32
  1920  007E37  34                 	db	52	;'4'
  1921  007E38  00                 	db	0
  1922  007E39  6D                 	db	109	;'m'
  1923  007E3A  61                 	db	97	;'a'
  1924  007E3B  63                 	db	99	;'c'
  1925  007E3C  20                 	db	32
  1926  007E3D  73                 	db	115	;'s'
  1927  007E3E  65                 	db	101	;'e'
  1928  007E3F  74                 	db	116	;'t'
  1929  007E40  20                 	db	32
  1930  007E41  64                 	db	100	;'d'
  1931  007E42  72                 	db	114	;'r'
  1932  007E43  20                 	db	32
  1933  007E44  35                 	db	53	;'5'
  1934  007E45  00                 	db	0
  1935  007E46  6D                 	db	109	;'m'
  1936  007E47  61                 	db	97	;'a'
  1937  007E48  63                 	db	99	;'c'
  1938  007E49  20                 	db	32
  1939  007E4A  73                 	db	115	;'s'
  1940  007E4B  65                 	db	101	;'e'
  1941  007E4C  74                 	db	116	;'t'
  1942  007E4D  20                 	db	32
  1943  007E4E  64                 	db	100	;'d'
  1944  007E4F  72                 	db	114	;'r'
  1945  007E50  20                 	db	32
  1946  007E51  36                 	db	54	;'6'
  1947  007E52  00                 	db	0
  1948  007E53  6D                 	db	109	;'m'
  1949  007E54  61                 	db	97	;'a'
  1950  007E55  63                 	db	99	;'c'
  1951  007E56  20                 	db	32
  1952  007E57  73                 	db	115	;'s'
  1953  007E58  65                 	db	101	;'e'
  1954  007E59  74                 	db	116	;'t'
  1955  007E5A  20                 	db	32
  1956  007E5B  64                 	db	100	;'d'
  1957  007E5C  72                 	db	114	;'r'
  1958  007E5D  20                 	db	32
  1959  007E5E  37                 	db	55	;'7'
  1960  007E5F  00                 	db	0
  1961  007E60                     STR_55:
  1962  007E60  6D                 	db	109	;'m'
  1963  007E61  61                 	db	97	;'a'
  1964  007E62  63                 	db	99	;'c'
  1965  007E63  20                 	db	32
  1966  007E64  6A                 	db	106	;'j'
  1967  007E65  6F                 	db	111	;'o'
  1968  007E66  69                 	db	105	;'i'
  1969  007E67  6E                 	db	110	;'n'
  1970  007E68  20                 	db	32
  1971  007E69  61                 	db	97	;'a'
  1972  007E6A  62                 	db	98	;'b'
  1973  007E6B  70                 	db	112	;'p'
  1974  007E6C  00                 	db	0
  1975  007E6D  42                 	db	66	;'B'
  1976  007E6E  75                 	db	117	;'u'
  1977  007E6F  74                 	db	116	;'t'
  1978  007E70  74                 	db	116	;'t'
  1979  007E71  6F                 	db	111	;'o'
  1980  007E72  6E                 	db	110	;'n'
  1981  007E73  20                 	db	32
  1982  007E74  54                 	db	84	;'T'
  1983  007E75  65                 	db	101	;'e'
  1984  007E76  73                 	db	115	;'s'
  1985  007E77  74                 	db	116	;'t'
  1986  007E78  3A                 	db	58	;':'
  1987  007E79  00                 	db	0
  1988  007E7A  42                 	db	66	;'B'
  1989  007E7B  75                 	db	117	;'u'
  1990  007E7C  74                 	db	116	;'t'
  1991  007E7D  74                 	db	116	;'t'
  1992  007E7E  6F                 	db	111	;'o'
  1993  007E7F  6E                 	db	110	;'n'
  1994  007E80  31                 	db	49	;'1'
  1995  007E81  20                 	db	32
  1996  007E82  50                 	db	80	;'P'
  1997  007E83  41                 	db	65	;'A'
  1998  007E84  53                 	db	83	;'S'
  1999  007E85  53                 	db	83	;'S'
  2000  007E86  00                 	db	0
  2001  007E87  42                 	db	66	;'B'
  2002  007E88  75                 	db	117	;'u'
  2003  007E89  74                 	db	116	;'t'
  2004  007E8A  74                 	db	116	;'t'
  2005  007E8B  6F                 	db	111	;'o'
  2006  007E8C  6E                 	db	110	;'n'
  2007  007E8D  32                 	db	50	;'2'
  2008  007E8E  20                 	db	32
  2009  007E8F  50                 	db	80	;'P'
  2010  007E90  41                 	db	65	;'A'
  2011  007E91  53                 	db	83	;'S'
  2012  007E92  53                 	db	83	;'S'
  2013  007E93  00                 	db	0
  2014  007E94  50                 	db	80	;'P'
  2015  007E95  72                 	db	114	;'r'
  2016  007E96  65                 	db	101	;'e'
  2017  007E97  73                 	db	115	;'s'
  2018  007E98  73                 	db	115	;'s'
  2019  007E99  20                 	db	32
  2020  007E9A  42                 	db	66	;'B'
  2021  007E9B  75                 	db	117	;'u'
  2022  007E9C  74                 	db	116	;'t'
  2023  007E9D  74                 	db	116	;'t'
  2024  007E9E  6F                 	db	111	;'o'
  2025  007E9F  6E                 	db	110	;'n'
  2026  007EA0  00                 	db	0
  2027  007EA1                     STR_100:
  2028  007EA1  55                 	db	85	;'U'
  2029  007EA2  53                 	db	83	;'S'
  2030  007EA3  42                 	db	66	;'B'
  2031  007EA4  20                 	db	32
  2032  007EA5  48                 	db	72	;'H'
  2033  007EA6  61                 	db	97	;'a'
  2034  007EA7  6E                 	db	110	;'n'
  2035  007EA8  64                 	db	100	;'d'
  2036  007EA9  6C                 	db	108	;'l'
  2037  007EAA  65                 	db	101	;'e'
  2038  007EAB  72                 	db	114	;'r'
  2039  007EAC  00                 	db	0
  2040  007EAD                     STR_77:
  2041  007EAD  4F                 	db	79	;'O'
  2042  007EAE  6E                 	db	110	;'n'
  2043  007EAF  20                 	db	32
  2044  007EB0  50                 	db	80	;'P'
  2045  007EB1  6F                 	db	111	;'o'
  2046  007EB2  72                 	db	114	;'r'
  2047  007EB3  74                 	db	116	;'t'
  2048  007EB4  20                 	db	32
  2049  007EB5  23                 	db	35
  2050  007EB6  3A                 	db	58	;':'
  2051  007EB7  20                 	db	32
  2052  007EB8  00                 	db	0
  2053  007EB9                     STR_33:
  2054  007EB9  73                 	db	115	;'s'
  2055  007EBA  65                 	db	101	;'e'
  2056  007EBB  74                 	db	116	;'t'
  2057  007EBC  20                 	db	32
  2058  007EBD  64                 	db	100	;'d'
  2059  007EBE  65                 	db	101	;'e'
  2060  007EBF  76                 	db	118	;'v'
  2061  007EC0  61                 	db	97	;'a'
  2062  007EC1  64                 	db	100	;'d'
  2063  007EC2  64                 	db	100	;'d'
  2064  007EC3  72                 	db	114	;'r'
  2065  007EC4  00                 	db	0
  2066  007EC5                     STR_29:
  2067  007EC5  73                 	db	115	;'s'
  2068  007EC6  79                 	db	121	;'y'
  2069  007EC7  73                 	db	115	;'s'
  2070  007EC8  20                 	db	32
  2071  007EC9  67                 	db	103	;'g'
  2072  007ECA  65                 	db	101	;'e'
  2073  007ECB  74                 	db	116	;'t'
  2074  007ECC  20                 	db	32
  2075  007ECD  76                 	db	118	;'v'
  2076  007ECE  65                 	db	101	;'e'
  2077  007ECF  72                 	db	114	;'r'
  2078  007ED0  00                 	db	0
  2079  007ED1                     STR_39:
  2080  007ED1  73                 	db	115	;'s'
  2081  007ED2  65                 	db	101	;'e'
  2082  007ED3  74                 	db	116	;'t'
  2083  007ED4  20                 	db	32
  2084  007ED5  6E                 	db	110	;'n'
  2085  007ED6  77                 	db	119	;'w'
  2086  007ED7  6B                 	db	107	;'k'
  2087  007ED8  73                 	db	115	;'s'
  2088  007ED9  6B                 	db	107	;'k'
  2089  007EDA  65                 	db	101	;'e'
  2090  007EDB  79                 	db	121	;'y'
  2091  007EDC  00                 	db	0
  2092  007EDD                     STR_36:
  2093  007EDD  73                 	db	115	;'s'
  2094  007EDE  65                 	db	101	;'e'
  2095  007EDF  74                 	db	116	;'t'
  2096  007EE0  20                 	db	32
  2097  007EE1  61                 	db	97	;'a'
  2098  007EE2  70                 	db	112	;'p'
  2099  007EE3  70                 	db	112	;'p'
  2100  007EE4  73                 	db	115	;'s'
  2101  007EE5  6B                 	db	107	;'k'
  2102  007EE6  65                 	db	101	;'e'
  2103  007EE7  79                 	db	121	;'y'
  2104  007EE8  00                 	db	0
  2105  007EE9  4D                 	db	77	;'M'
  2106  007EEA  61                 	db	97	;'a'
  2107  007EEB  79                 	db	121	;'y'
  2108  007EEC  20                 	db	32
  2109  007EED  20                 	db	32
  2110  007EEE  35                 	db	53	;'5'
  2111  007EEF  20                 	db	32
  2112  007EF0  32                 	db	50	;'2'
  2113  007EF1  30                 	db	48	;'0'
  2114  007EF2  31                 	db	49	;'1'
  2115  007EF3  36                 	db	54	;'6'
  2116  007EF4  00                 	db	0
  2117  007EF5  42                 	db	66	;'B'
  2118  007EF6  75                 	db	117	;'u'
  2119  007EF7  74                 	db	116	;'t'
  2120  007EF8  74                 	db	116	;'t'
  2121  007EF9  6F                 	db	111	;'o'
  2122  007EFA  6E                 	db	110	;'n'
  2123  007EFB  20                 	db	32
  2124  007EFC  46                 	db	70	;'F'
  2125  007EFD  41                 	db	65	;'A'
  2126  007EFE  49                 	db	73	;'I'
  2127  007EFF  4C                 	db	76	;'L'
  2128  007F00  00                 	db	0
  2129  007F01  43                 	db	67	;'C'
  2130  007F02  6F                 	db	111	;'o'
  2131  007F03  6D                 	db	109	;'m'
  2132  007F04  6D                 	db	109	;'m'
  2133  007F05  20                 	db	32
  2134  007F06  54                 	db	84	;'T'
  2135  007F07  65                 	db	101	;'e'
  2136  007F08  73                 	db	115	;'s'
  2137  007F09  74                 	db	116	;'t'
  2138  007F0A  3A                 	db	58	;':'
  2139  007F0B  00                 	db	0
  2140  007F0C                     STR_81:
  2141  007F0C  72                 	db	114	;'r'
  2142  007F0D  61                 	db	97	;'a'
  2143  007F0E  64                 	db	100	;'d'
  2144  007F0F  69                 	db	105	;'i'
  2145  007F10  6F                 	db	111	;'o'
  2146  007F11  20                 	db	32
  2147  007F12  74                 	db	116	;'t'
  2148  007F13  78                 	db	120	;'x'
  2149  007F14  20                 	db	32
  2150  007F15  00                 	db	0
  2151  007F16                     STR_23:
  2152  007F16  4D                 	db	77	;'M'
  2153  007F17  4F                 	db	79	;'O'
  2154  007F18  54                 	db	84	;'T'
  2155  007F19  45                 	db	69	;'E'
  2156  007F1A  20                 	db	32
  2157  007F1B  4D                 	db	77	;'M'
  2158  007F1C  6F                 	db	111	;'o'
  2159  007F1D  64                 	db	100	;'d'
  2160  007F1E  65                 	db	101	;'e'
  2161  007F1F  00                 	db	0
  2162  007F20                     STR_65:
  2163  007F20  6D                 	db	109	;'m'
  2164  007F21  6F                 	db	111	;'o'
  2165  007F22  74                 	db	116	;'t'
  2166  007F23  65                 	db	101	;'e'
  2167  007F24  49                 	db	73	;'I'
  2168  007F25  6E                 	db	110	;'n'
  2169  007F26  69                 	db	105	;'i'
  2170  007F27  54                 	db	84	;'T'
  2171  007F28  78                 	db	120	;'x'
  2172  007F29  00                 	db	0
  2173  007F2A  4C                 	db	76	;'L'
  2174  007F2B  45                 	db	69	;'E'
  2175  007F2C  44                 	db	68	;'D'
  2176  007F2D  20                 	db	32
  2177  007F2E  54                 	db	84	;'T'
  2178  007F2F  65                 	db	101	;'e'
  2179  007F30  73                 	db	115	;'s'
  2180  007F31  74                 	db	116	;'t'
  2181  007F32  3A                 	db	58	;':'
  2182  007F33  00                 	db	0
  2183  007F34                     STR_2:
  2184  007F34  20                 	db	32
  2185  007F35  44                 	db	68	;'D'
  2186  007F36  65                 	db	101	;'e'
  2187  007F37  76                 	db	118	;'v'
  2188  007F38  3A                 	db	58	;':'
  2189  007F39  20                 	db	32
  2190  007F3A  53                 	db	83	;'S'
  2191  007F3B  31                 	db	49	;'1'
  2192  007F3C  20                 	db	32
  2193  007F3D  00                 	db	0
  2194  007F3E                     STR_98:
  2195  007F3E  43                 	db	67	;'C'
  2196  007F3F  44                 	db	68	;'D'
  2197  007F40  43                 	db	67	;'C'
  2198  007F41  20                 	db	32
  2199  007F42  4D                 	db	77	;'M'
  2200  007F43  6F                 	db	111	;'o'
  2201  007F44  64                 	db	100	;'d'
  2202  007F45  65                 	db	101	;'e'
  2203  007F46  00                 	db	0
  2204  007F47                     STR_45:
  2205  007F47  73                 	db	115	;'s'
  2206  007F48  65                 	db	101	;'e'
  2207  007F49  74                 	db	116	;'t'
  2208  007F4A  20                 	db	32
  2209  007F4B  73                 	db	115	;'s'
  2210  007F4C  79                 	db	121	;'y'
  2211  007F4D  6E                 	db	110	;'n'
  2212  007F4E  63                 	db	99	;'c'
  2213  007F4F  00                 	db	0
  2214  007F50                     STR_59:
  2215  007F50  61                 	db	97	;'a'
  2216  007F51  63                 	db	99	;'c'
  2217  007F52  63                 	db	99	;'c'
  2218  007F53  65                 	db	101	;'e'
  2219  007F54  70                 	db	112	;'p'
  2220  007F55  74                 	db	116	;'t'
  2221  007F56  65                 	db	101	;'e'
  2222  007F57  64                 	db	100	;'d'
  2223  007F58  00                 	db	0
  2224  007F59  6D                 	db	109	;'m'
  2225  007F5A  61                 	db	97	;'a'
  2226  007F5B  63                 	db	99	;'c'
  2227  007F5C  20                 	db	32
  2228  007F5D  73                 	db	115	;'s'
  2229  007F5E  61                 	db	97	;'a'
  2230  007F5F  76                 	db	118	;'v'
  2231  007F60  65                 	db	101	;'e'
  2232  007F61  00                 	db	0
  2233  007F62                     STR_24:
  2234  007F62  53                 	db	83	;'S'
  2235  007F63  74                 	db	116	;'t'
  2236  007F64  61                 	db	97	;'a'
  2237  007F65  72                 	db	114	;'r'
  2238  007F66  74                 	db	116	;'t'
  2239  007F67  69                 	db	105	;'i'
  2240  007F68  6E                 	db	110	;'n'
  2241  007F69  67                 	db	103	;'g'
  2242  007F6A  00                 	db	0
  2243  007F6B  4D                 	db	77	;'M'
  2244  007F6C  6F                 	db	111	;'o'
  2245  007F6D  54                 	db	84	;'T'
  2246  007F6E  65                 	db	101	;'e'
  2247  007F6F  20                 	db	32
  2248  007F70  76                 	db	118	;'v'
  2249  007F71  20                 	db	32
  2250  007F72  2E                 	db	46
  2251  007F73  00                 	db	0
  2252  007F74  31                 	db	49	;'1'
  2253  007F75  36                 	db	54	;'6'
  2254  007F76  3A                 	db	58	;':'
  2255  007F77  30                 	db	48	;'0'
  2256  007F78  33                 	db	51	;'3'
  2257  007F79  3A                 	db	58	;':'
  2258  007F7A  31                 	db	49	;'1'
  2259  007F7B  36                 	db	54	;'6'
  2260  007F7C  00                 	db	0
  2261  007F7D  52                 	db	82	;'R'
  2262  007F7E  46                 	db	70	;'F'
  2263  007F7F  20                 	db	32
  2264  007F80  54                 	db	84	;'T'
  2265  007F81  65                 	db	101	;'e'
  2266  007F82  73                 	db	115	;'s'
  2267  007F83  74                 	db	116	;'t'
  2268  007F84  3A                 	db	58	;':'
  2269  007F85  00                 	db	0
  2270  007F86  41                 	db	65	;'A'
  2271  007F87  44                 	db	68	;'D'
  2272  007F88  43                 	db	67	;'C'
  2273  007F89  20                 	db	32
  2274  007F8A  54                 	db	84	;'T'
  2275  007F8B  65                 	db	101	;'e'
  2276  007F8C  73                 	db	115	;'s'
  2277  007F8D  74                 	db	116	;'t'
  2278  007F8E  00                 	db	0
  2279  007F8F                     STR_99:
  2280  007F8F  43                 	db	67	;'C'
  2281  007F90  6F                 	db	111	;'o'
  2282  007F91  6D                 	db	109	;'m'
  2283  007F92  6D                 	db	109	;'m'
  2284  007F93  61                 	db	97	;'a'
  2285  007F94  6E                 	db	110	;'n'
  2286  007F95  64                 	db	100	;'d'
  2287  007F96  00                 	db	0
  2288  007F97                     STR_48:
  2289  007F97  73                 	db	115	;'s'
  2290  007F98  65                 	db	101	;'e'
  2291  007F99  74                 	db	116	;'t'
  2292  007F9A  20                 	db	32
  2293  007F9B  72                 	db	114	;'r'
  2294  007F9C  78                 	db	120	;'x'
  2295  007F9D  32                 	db	50	;'2'
  2296  007F9E  00                 	db	0
  2297  007F9F                     STR_66:
  2298  007F9F  72                 	db	114	;'r'
  2299  007FA0  65                 	db	101	;'e'
  2300  007FA1  73                 	db	115	;'s'
  2301  007FA2  74                 	db	116	;'t'
  2302  007FA3  69                 	db	105	;'i'
  2303  007FA4  6E                 	db	110	;'n'
  2304  007FA5  67                 	db	103	;'g'
  2305  007FA6  00                 	db	0
  2306  007FA7                     STR_42:
  2307  007FA7  73                 	db	115	;'s'
  2308  007FA8  65                 	db	101	;'e'
  2309  007FA9  74                 	db	116	;'t'
  2310  007FAA  20                 	db	32
  2311  007FAB  61                 	db	97	;'a'
  2312  007FAC  64                 	db	100	;'d'
  2313  007FAD  72                 	db	114	;'r'
  2314  007FAE  00                 	db	0
  2315  007FAF  54                 	db	84	;'T'
  2316  007FB0  65                 	db	101	;'e'
  2317  007FB1  6D                 	db	109	;'m'
  2318  007FB2  70                 	db	112	;'p'
  2319  007FB3  20                 	db	32
  2320  007FB4  20                 	db	32
  2321  007FB5  3D                 	db	61	;'='
  2322  007FB6  00                 	db	0
  2323  007FB7  4C                 	db	76	;'L'
  2324  007FB8  69                 	db	105	;'i'
  2325  007FB9  67                 	db	103	;'g'
  2326  007FBA  68                 	db	104	;'h'
  2327  007FBB  74                 	db	116	;'t'
  2328  007FBC  20                 	db	32
  2329  007FBD  3D                 	db	61	;'='
  2330  007FBE  00                 	db	0
  2331  007FBF                     STR_101:
  2332  007FBF  28                 	db	40
  2333  007FC0  6E                 	db	110	;'n'
  2334  007FC1  75                 	db	117	;'u'
  2335  007FC2  6C                 	db	108	;'l'
  2336  007FC3  6C                 	db	108	;'l'
  2337  007FC4  29                 	db	41
  2338  007FC5  00                 	db	0
  2339  007FC6                     STR_69:
  2340  007FC6  54                 	db	84	;'T'
  2341  007FC7  65                 	db	101	;'e'
  2342  007FC8  6D                 	db	109	;'m'
  2343  007FC9  70                 	db	112	;'p'
  2344  007FCA  20                 	db	32
  2345  007FCB  3A                 	db	58	;':'
  2346  007FCC  00                 	db	0
  2347  007FCD                     STR_75:
  2348  007FCD  50                 	db	80	;'P'
  2349  007FCE  6B                 	db	107	;'k'
  2350  007FCF  74                 	db	116	;'t'
  2351  007FD0  73                 	db	115	;'s'
  2352  007FD1  2D                 	db	45
  2353  007FD2  3A                 	db	58	;':'
  2354  007FD3  00                 	db	0
  2355  007FD4                     STR_73:
  2356  007FD4  50                 	db	80	;'P'
  2357  007FD5  6B                 	db	107	;'k'
  2358  007FD6  74                 	db	116	;'t'
  2359  007FD7  73                 	db	115	;'s'
  2360  007FD8  2F                 	db	47
  2361  007FD9  3A                 	db	58	;':'
  2362  007FDA  00                 	db	0
  2363  007FDB                     STR_68:
  2364  007FDB  4C                 	db	76	;'L'
  2365  007FDC  69                 	db	105	;'i'
  2366  007FDD  67                 	db	103	;'g'
  2367  007FDE  68                 	db	104	;'h'
  2368  007FDF  74                 	db	116	;'t'
  2369  007FE0  3A                 	db	58	;':'
  2370  007FE1  00                 	db	0
  2371  007FE2                     STR_71:
  2372  007FE2  50                 	db	80	;'P'
  2373  007FE3  6B                 	db	107	;'k'
  2374  007FE4  74                 	db	116	;'t'
  2375  007FE5  73                 	db	115	;'s'
  2376  007FE6  7C                 	db	124
  2377  007FE7  3A                 	db	58	;':'
  2378  007FE8  00                 	db	0
  2379  007FE9                     STR_53:
  2380  007FE9  73                 	db	115	;'s'
  2381  007FEA  65                 	db	101	;'e'
  2382  007FEB  74                 	db	116	;'t'
  2383  007FEC  20                 	db	32
  2384  007FED  63                 	db	99	;'c'
  2385  007FEE  68                 	db	104	;'h'
  2386  007FEF  00                 	db	0
  2387  007FF0                     STR_61:
  2388  007FF0  69                 	db	105	;'i'
  2389  007FF1  6E                 	db	110	;'n'
  2390  007FF2  69                 	db	105	;'i'
  2391  007FF3  20                 	db	32
  2392  007FF4  74                 	db	116	;'t'
  2393  007FF5  78                 	db	120	;'x'
  2394  007FF6  00                 	db	0
  2395  007FF7                     STR_31:
  2396  007FF7  32                 	db	50	;'2'
  2397  007FF8  39                 	db	57	;'9'
  2398  007FF9  30                 	db	48	;'0'
  2399  007FFA  33                 	db	51	;'3'
  2400  007FFB  00                 	db	0
  2401  007FFC                     STR_21:
  2402  007FFC  7A                 	db	122	;'z'
  2403  007FFD  00                 	db	0
  2404  0000                     
  2405                           ; #config settings
  2406  007FFE  00                 	db	0	; dummy byte at the end
  2407  0000                     
  2408                           	psect	cinit
  2409  004E12                     __pcinit:
  2410                           	opt stack 0
  2411  004E12                     start_initialization:
  2412                           	opt stack 0
  2413  004E12                     __initialization:
  2414                           	opt stack 0
  2415                           
  2416                           ; Clear objects allocated to BANK2 (128 bytes)
  2417  004E12  EE02  F000         	lfsr	0,__pbssBANK2
  2418  004E16  0E80               	movlw	128
  2419  004E18                     clear_0:
  2420  004E18  6AEE               	clrf	postinc0,c
  2421  004E1A  06E8               	decf	wreg,f,c
  2422  004E1C  E1FD               	bnz	clear_0
  2423                           
  2424                           ; Clear objects allocated to BANK1 (224 bytes)
  2425  004E1E  EE01  F000         	lfsr	0,__pbssBANK1
  2426  004E22  0EE0               	movlw	224
  2427  004E24                     clear_1:
  2428  004E24  6AEE               	clrf	postinc0,c
  2429  004E26  06E8               	decf	wreg,f,c
  2430  004E28  E1FD               	bnz	clear_1
  2431                           
  2432                           ; Clear objects allocated to BANK0 (96 bytes)
  2433  004E2A  EE00  F060         	lfsr	0,__pbssBANK0
  2434  004E2E  0E60               	movlw	96
  2435  004E30                     clear_2:
  2436  004E30  6AEE               	clrf	postinc0,c
  2437  004E32  06E8               	decf	wreg,f,c
  2438  004E34  E1FD               	bnz	clear_2
  2439                           
  2440                           ; Clear objects allocated to COMRAM (45 bytes)
  2441  004E36  EE00  F001         	lfsr	0,__pbssCOMRAM
  2442  004E3A  0E2D               	movlw	45
  2443  004E3C                     clear_3:
  2444  004E3C  6AEE               	clrf	postinc0,c
  2445  004E3E  06E8               	decf	wreg,f,c
  2446  004E40  E1FD               	bnz	clear_3
  2447                           
  2448                           ; Initialize objects allocated to BANK0 (3 bytes)
  2449                           ; load TBLPTR registers with __pidataBANK0
  2450  004E42  0E07               	movlw	low __pidataBANK0
  2451  004E44  6EF6               	movwf	tblptrl,c
  2452  004E46  0E44               	movlw	high __pidataBANK0
  2453  004E48  6EF7               	movwf	tblptrh,c
  2454  004E4A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2455  004E4C  6EF8               	movwf	tblptru,c
  2456  004E4E  0009               	tblrd		*+	;fetch initializer
  2457  004E50  CFF5 F0FB          	movff	tablat,__pdataBANK0
  2458  004E54  0009               	tblrd		*+	;fetch initializer
  2459  004E56  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
  2460  004E5A  0009               	tblrd		*+	;fetch initializer
  2461  004E5C  CFF5 F0FD          	movff	tablat,__pdataBANK0+2
  2462  004E60                     end_of_initialization:
  2463                           	opt stack 0
  2464  004E60                     __end_of__initialization:
  2465                           	opt stack 0
  2466  004E60  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2467  004E62  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2468  004E64  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2469  004E66  6EF8               	movwf	tblptru,c
  2470  004E68  0100               	movlb	0
  2471  004E6A  EFEE  F02C         	goto	_main	;jump to C main() function
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           
  2479                           	psect	bssCOMRAM
  2480  000001                     __pbssCOMRAM:
  2481                           	opt stack 0
  2482  000001                     _outPipes:
  2483                           	opt stack 0
  2484  000001                     	ds	8
  2485  000009                     _inPipes:
  2486                           	opt stack 0
  2487  000009                     	ds	6
  2488  00000F                     _pBDTEntryIn:
  2489                           	opt stack 0
  2490  00000F                     	ds	6
  2491  000015                     _pBDTEntryEP0OutCurrent:
  2492                           	opt stack 0
  2493  000015                     	ds	2
  2494  000017                     _pBDTEntryEP0OutNext:
  2495                           	opt stack 0
  2496  000017                     	ds	2
  2497  000019                     _LastRS232Out:
  2498                           	opt stack 0
  2499  000019                     	ds	1
  2500  00001A                     _NextUSBOut:
  2501                           	opt stack 0
  2502  00001A                     	ds	1
  2503  00001B                     _RS232_Out_Data_Rdy:
  2504                           	opt stack 0
  2505  00001B                     	ds	1
  2506  00001C                     _RS232cp:
  2507                           	opt stack 0
  2508  00001C                     	ds	1
  2509  00001D                     _RemoteWakeup:
  2510                           	opt stack 0
  2511  00001D                     	ds	1
  2512  00001E                     _USBDeferStatusStagePacket:
  2513                           	opt stack 0
  2514  00001E                     	ds	1
  2515  00001F                     _USBStatusStageTimeoutCounter:
  2516                           	opt stack 0
  2517  00001F                     	ds	1
  2518  000020                     _cdc_trf_state:
  2519                           	opt stack 0
  2520  000020                     	ds	1
  2521  000021                     _controlTransferState:
  2522                           	opt stack 0
  2523  000021                     	ds	1
  2524  000022                     _endpoint_number:
  2525                           	opt stack 0
  2526  000022                     	ds	1
  2527  000023                     _eusartRxCount:
  2528                           	opt stack 0
  2529  000023                     	ds	1
  2530  000024                     _eusartRxHead:
  2531                           	opt stack 0
  2532  000024                     	ds	1
  2533  000025                     _eusartRxTail:
  2534                           	opt stack 0
  2535  000025                     	ds	1
  2536  000026                     _eusartTxBufferRemaining:
  2537                           	opt stack 0
  2538  000026                     	ds	1
  2539  000027                     _eusartTxHead:
  2540                           	opt stack 0
  2541  000027                     	ds	1
  2542  000028                     _eusartTxTail:
  2543                           	opt stack 0
  2544  000028                     	ds	1
  2545  000029                     _modemBufferIndex:
  2546                           	opt stack 0
  2547  000029                     	ds	1
  2548  00002A                     _rxByteFlag:
  2549                           	opt stack 0
  2550  00002A                     	ds	1
  2551  00002B                     _shortPacketStatus:
  2552                           	opt stack 0
  2553  00002B                     	ds	1
  2554  00002C                     _USBActiveConfiguration:
  2555                           	opt stack 0
  2556  00002C                     	ds	1
  2557  00002D                     _USTATcopy:
  2558                           	opt stack 0
  2559  00002D                     	ds	1
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           postinc0	equ	0xFEE
  2565                           wreg	equ	0xFE8
  2566                           
  2567                           	psect	bssBANK0
  2568  000060                     __pbssBANK0:
  2569                           	opt stack 0
  2570  000060                     _pBDTEntryOut:
  2571                           	opt stack 0
  2572  000060                     	ds	6
  2573  000066                     service_pushbutton@PB_Timer:
  2574                           	opt stack 0
  2575  000066                     	ds	4
  2576  00006A                     _ep_data_in:
  2577                           	opt stack 0
  2578  00006A                     	ds	3
  2579  00006D                     _ep_data_out:
  2580                           	opt stack 0
  2581  00006D                     	ds	3
  2582  000070                     _pCDCDst:
  2583                           	opt stack 0
  2584  000070                     	ds	3
  2585  000073                     _pCDCSrc:
  2586                           	opt stack 0
  2587  000073                     	ds	3
  2588  000076                     _responsePortNum:
  2589                           	opt stack 0
  2590  000076                     	ds	3
  2591  000079                     _CDCDataInHandle:
  2592                           	opt stack 0
  2593  000079                     	ds	2
  2594  00007B                     _CDCDataOutHandle:
  2595                           	opt stack 0
  2596  00007B                     	ds	2
  2597  00007D                     _light:
  2598                           	opt stack 0
  2599  00007D                     	ds	2
  2600  00007F                     _pDst:
  2601                           	opt stack 0
  2602  00007F                     	ds	2
  2603  000081                     _pkts:
  2604                           	opt stack 0
  2605  000081                     	ds	2
  2606  000083                     _temperature:
  2607                           	opt stack 0
  2608  000083                     	ds	2
  2609  000085                     _timer1ReloadVal:
  2610                           	opt stack 0
  2611  000085                     	ds	2
  2612  000087                     _timerMinTickCount:
  2613                           	opt stack 0
  2614  000087                     	ds	2
  2615  000089                     _timerMsTickCount:
  2616                           	opt stack 0
  2617  000089                     	ds	2
  2618  00008B                     moteJoiningProcess@ch:
  2619                           	opt stack 0
  2620  00008B                     	ds	2
  2621  00008D                     _BothEP0OutUOWNsSet:
  2622                           	opt stack 0
  2623  00008D                     	ds	1
  2624  00008E                     _USBBusIsSuspended:
  2625                           	opt stack 0
  2626  00008E                     	ds	1
  2627  00008F                     _USBDeferINDataStagePackets:
  2628                           	opt stack 0
  2629  00008F                     	ds	1
  2630  000090                     _USBDeferOUTDataStagePackets:
  2631                           	opt stack 0
  2632  000090                     	ds	1
  2633  000091                     _USBDeviceState:
  2634                           	opt stack 0
  2635  000091                     	ds	1
  2636  000092                     _USBStatusStageEnabledFlag1:
  2637                           	opt stack 0
  2638  000092                     	ds	1
  2639  000093                     _USBStatusStageEnabledFlag2:
  2640                           	opt stack 0
  2641  000093                     	ds	1
  2642  000094                     _activeState:
  2643                           	opt stack 0
  2644  000094                     	ds	1
  2645  000095                     _appTimer:
  2646                           	opt stack 0
  2647  000095                     	ds	1
  2648  000096                     _cdc_mem_type:
  2649                           	opt stack 0
  2650  000096                     	ds	1
  2651  000097                     _cdc_rx_len:
  2652                           	opt stack 0
  2653  000097                     	ds	1
  2654  000098                     _cdc_tx_len:
  2655                           	opt stack 0
  2656  000098                     	ds	1
  2657  000099                     _m10SecTicker:
  2658                           	opt stack 0
  2659  000099                     	ds	1
  2660  00009A                     _operationType:
  2661                           	opt stack 0
  2662  00009A                     	ds	1
  2663  00009B                     _randomPortNum:
  2664                           	opt stack 0
  2665  00009B                     	ds	1
  2666  00009C                     _runningState:
  2667                           	opt stack 0
  2668  00009C                     	ds	1
  2669  00009D                     _secTicker:
  2670                           	opt stack 0
  2671  00009D                     	ds	1
  2672  00009E                     _sleepTicker:
  2673                           	opt stack 0
  2674  00009E                     	ds	1
  2675  00009F                     _usbState:
  2676                           	opt stack 0
  2677  00009F                     	ds	1
  2678  0000A0                     service_pushbutton@Release_Timer:
  2679                           	opt stack 0
  2680  0000A0                     	ds	1
  2681  0000A1                     _dataBuffer:
  2682                           	opt stack 0
  2683  0000A1                     	ds	12
  2684  0000AD                     _cdc_notice:
  2685                           	opt stack 0
  2686  0000AD                     	ds	10
  2687  0000B7                     _line_coding:
  2688                           	opt stack 0
  2689  0000B7                     	ds	7
  2690  0000BE                     _USBAlternateInterface:
  2691                           	opt stack 0
  2692  0000BE                     	ds	2
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           postinc0	equ	0xFEE
  2698                           wreg	equ	0xFE8
  2699                           
  2700                           	psect	dataBANK0
  2701  0000FB                     __pdataBANK0:
  2702                           	opt stack 0
  2703  0000FB                     _selectedFont:
  2704                           	opt stack 0
  2705  0000FB                     	ds	2
  2706  0000FD                     _moteState:
  2707                           	opt stack 0
  2708  0000FD                     	ds	1
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           postinc0	equ	0xFEE
  2714                           wreg	equ	0xFE8
  2715                           
  2716                           	psect	bssBANK1
  2717  000100                     __pbssBANK1:
  2718                           	opt stack 0
  2719  000100                     _responseId:
  2720                           	opt stack 0
  2721  000100                     	ds	16
  2722  000110                     _responseData:
  2723                           	opt stack 0
  2724  000110                     	ds	8
  2725  000118                     _USB_Buffer:
  2726                           	opt stack 0
  2727  000118                     	ds	64
  2728  000158                     _cmd:
  2729                           	opt stack 0
  2730  000158                     	ds	64
  2731  000198                     _modemResonseBuffer:
  2732                           	opt stack 0
  2733  000198                     	ds	64
  2734  0001D8                     _dummy_encapsulated_cmd_response:
  2735                           	opt stack 0
  2736  0001D8                     	ds	8
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           
  2744                           	psect	bssBANK2
  2745  000200                     __pbssBANK2:
  2746                           	opt stack 0
  2747  000200                     _eusartRxBuffer:
  2748                           	opt stack 0
  2749  000200                     	ds	64
  2750  000240                     _eusartTxBuffer:
  2751                           	opt stack 0
  2752  000240                     	ds	64
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           
  2760                           	psect	cstackBANK0
  2761  0000C0                     __pcstackBANK0:
  2762                           	opt stack 0
  2763  0000C0                     ??_TMR1_Initialize:
  2764  0000C0                     ??_isdigit:
  2765  0000C0                     ?_ADC_GetConversion:
  2766                           	opt stack 0
  2767  0000C0                     ?_strncmp:
  2768                           	opt stack 0
  2769  0000C0                     ?_strcmp:
  2770                           	opt stack 0
  2771  0000C0                     ?_USBTransferOnePacket:
  2772                           	opt stack 0
  2773  0000C0                     ?___wmul:
  2774                           	opt stack 0
  2775  0000C0                     ?___lwdiv:
  2776                           	opt stack 0
  2777  0000C0                     MOTEapp_handlerState@state:
  2778                           	opt stack 0
  2779  0000C0                     MOTEapp_TimerBasedTask@timerTask:
  2780                           	opt stack 0
  2781  0000C0                     hexToStr@character:
  2782                           	opt stack 0
  2783  0000C0                     moteApp_clearBuffers@counter:
  2784                           	opt stack 0
  2785  0000C0                     USBapp_handlerState@state:
  2786                           	opt stack 0
  2787  0000C0                     service_pushbutton@bs:
  2788                           	opt stack 0
  2789  0000C0                     EUSART_Read@readValue:
  2790                           	opt stack 0
  2791  0000C0                     EUSART_Write@txData:
  2792                           	opt stack 0
  2793  0000C0                     EUSART_FlushBuffer@index:
  2794                           	opt stack 0
  2795  0000C0                     SPI_Exchange8bit@data:
  2796                           	opt stack 0
  2797  0000C0                     DATAEE_WriteByte@bData:
  2798                           	opt stack 0
  2799  0000C0                     DATAEE_ReadByte@bAdd:
  2800                           	opt stack 0
  2801  0000C0                     TMR2_ReadTimer@readVal:
  2802                           	opt stack 0
  2803  0000C0                     USBTransferOnePacket@dir:
  2804                           	opt stack 0
  2805  0000C0                     ___lbdiv@divisor:
  2806                           	opt stack 0
  2807  0000C0                     ___lbmod@divisor:
  2808                           	opt stack 0
  2809  0000C0                     moteApp_delayms@length:
  2810                           	opt stack 0
  2811  0000C0                     oled_setFont@font:
  2812                           	opt stack 0
  2813  0000C0                     putUSBUSART@data:
  2814                           	opt stack 0
  2815  0000C0                     ___wmul@multiplier:
  2816                           	opt stack 0
  2817  0000C0                     ___lwdiv@dividend:
  2818                           	opt stack 0
  2819  0000C0                     memset@p1:
  2820                           	opt stack 0
  2821  0000C0                     strcmp@s1:
  2822                           	opt stack 0
  2823  0000C0                     strncmp@s1:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x0
  2827  0000C0                     	ds	1
  2828  0000C1                     MOTEapp_getModemResponse@terminatorReceived:
  2829                           	opt stack 0
  2830  0000C1                     moteApp_clearBuffers@counter_1500:
  2831                           	opt stack 0
  2832  0000C1                     oled_writeCommand@command:
  2833                           	opt stack 0
  2834  0000C1                     oled_writeData@data:
  2835                           	opt stack 0
  2836  0000C1                     DATAEE_WriteByte@bAdd:
  2837                           	opt stack 0
  2838  0000C1                     _isdigit$5885:
  2839                           	opt stack 0
  2840  0000C1                     ___lbdiv@dividend:
  2841                           	opt stack 0
  2842  0000C1                     ___lbmod@dividend:
  2843                           	opt stack 0
  2844  0000C1                     sendCommand@string:
  2845                           	opt stack 0
  2846  0000C1                     sendDataCommand@string:
  2847                           	opt stack 0
  2848  0000C1                     USBTransferOnePacket@data:
  2849                           	opt stack 0
  2850                           
  2851                           ; 2 bytes @ 0x1
  2852  0000C1                     	ds	1
  2853  0000C2                     ??_moteApp_delayms:
  2854  0000C2                     ??_ADC_GetConversion:
  2855  0000C2                     ??_oled_devInit:
  2856  0000C2                     MOTEapp_getModemResponse@bufferByte:
  2857                           	opt stack 0
  2858  0000C2                     moteApp_clearBuffers@counter_1501:
  2859                           	opt stack 0
  2860  0000C2                     Set_Page_Address@address:
  2861                           	opt stack 0
  2862  0000C2                     Set_Column_Address@address:
  2863                           	opt stack 0
  2864  0000C2                     oled_setDisplay@displayType:
  2865                           	opt stack 0
  2866  0000C2                     oled_displayOff@state:
  2867                           	opt stack 0
  2868  0000C2                     DATAEE_WriteByte@GIEBitValue:
  2869                           	opt stack 0
  2870  0000C2                     putUSBUSART@length:
  2871                           	opt stack 0
  2872  0000C2                     isdigit@c:
  2873                           	opt stack 0
  2874  0000C2                     ___lbdiv@counter:
  2875                           	opt stack 0
  2876  0000C2                     ___lbmod@counter:
  2877                           	opt stack 0
  2878  0000C2                     ___wmul@multiplicand:
  2879                           	opt stack 0
  2880  0000C2                     ___lwdiv@divisor:
  2881                           	opt stack 0
  2882  0000C2                     memset@c:
  2883                           	opt stack 0
  2884  0000C2                     strcmp@s2:
  2885                           	opt stack 0
  2886  0000C2                     strncmp@s2:
  2887                           	opt stack 0
  2888                           
  2889                           ; 2 bytes @ 0x2
  2890  0000C2                     	ds	1
  2891  0000C3                     sendDataCommand@appData:
  2892                           	opt stack 0
  2893  0000C3                     oled_putChar@station_dot:
  2894                           	opt stack 0
  2895  0000C3                     USBTransferOnePacket@len:
  2896                           	opt stack 0
  2897  0000C3                     ___lbdiv@quotient:
  2898                           	opt stack 0
  2899  0000C3                     ___lbmod@rem:
  2900                           	opt stack 0
  2901  0000C3                     moteApp_delayms@counter:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x3
  2905  0000C3                     	ds	1
  2906  0000C4                     ??_strcmp:
  2907  0000C4                     sendDataCommand@dataLength:
  2908                           	opt stack 0
  2909  0000C4                     moteApp_add8bToDataBuffer@bufferLocation:
  2910                           	opt stack 0
  2911  0000C4                     oled_putChar@start_page:
  2912                           	opt stack 0
  2913  0000C4                     ADC_GetConversion@channel:
  2914                           	opt stack 0
  2915  0000C4                     USBTransferOnePacket@ep:
  2916                           	opt stack 0
  2917  0000C4                     ___lwdiv@counter:
  2918                           	opt stack 0
  2919  0000C4                     ___wmul@product:
  2920                           	opt stack 0
  2921  0000C4                     memset@n:
  2922                           	opt stack 0
  2923  0000C4                     strncmp@len:
  2924                           	opt stack 0
  2925                           
  2926                           ; 2 bytes @ 0x4
  2927  0000C4                     	ds	1
  2928  0000C5                     ??_oled_putChar:
  2929  0000C5                     ??_sendDataCommand:
  2930  0000C5                     moteApp_add8bToDataBuffer@number:
  2931                           	opt stack 0
  2932  0000C5                     modemResync@escapeCounter:
  2933                           	opt stack 0
  2934  0000C5                     USBTransferOnePacket@handle:
  2935                           	opt stack 0
  2936  0000C5                     ___lwdiv@quotient:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x5
  2940  0000C5                     	ds	1
  2941  0000C6                     ??_strncmp:
  2942  0000C6                     sendDataCommand@byteCount:
  2943                           	opt stack 0
  2944  0000C6                     strcmp@t0:
  2945                           	opt stack 0
  2946  0000C6                     memset@p:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x6
  2950  0000C6                     	ds	1
  2951  0000C7                     ?___lwmod:
  2952                           	opt stack 0
  2953  0000C7                     modemResync@escapeEvent:
  2954                           	opt stack 0
  2955  0000C7                     sendDataCommand@byteCount_1433:
  2956                           	opt stack 0
  2957  0000C7                     ADC_TempConversion@tempRaw:
  2958                           	opt stack 0
  2959  0000C7                     strcmp@t2:
  2960                           	opt stack 0
  2961  0000C7                     getsUSBUSART@buffer:
  2962                           	opt stack 0
  2963  0000C7                     _CDCTxService$5555:
  2964                           	opt stack 0
  2965  0000C7                     ___lwmod@dividend:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x7
  2969  0000C7                     	ds	1
  2970  0000C8                     ADC_TempConversion@temp:
  2971                           	opt stack 0
  2972  0000C8                     USBDeviceInit@i:
  2973                           	opt stack 0
  2974  0000C8                     strcmp@t1:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x8
  2978  0000C8                     	ds	1
  2979  0000C9                     getsUSBUSART@len:
  2980                           	opt stack 0
  2981  0000C9                     CDCTxService@i:
  2982                           	opt stack 0
  2983  0000C9                     ___lwmod@divisor:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x9
  2987  0000C9                     	ds	1
  2988  0000CA                     CDCTxService@byte_to_send:
  2989                           	opt stack 0
  2990                           
  2991                           ; 1 bytes @ 0xA
  2992  0000CA                     	ds	1
  2993  0000CB                     oled_putChar@k:
  2994                           	opt stack 0
  2995  0000CB                     ___lwmod@counter:
  2996                           	opt stack 0
  2997  0000CB                     _getsUSBUSART$5507:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0xB
  3001  0000CB                     	ds	1
  3002  0000CC                     ?_sprintf:
  3003                           	opt stack 0
  3004  0000CC                     oled_putChar@index:
  3005                           	opt stack 0
  3006  0000CC                     moteApp_add16bToDataBuffer@number:
  3007                           	opt stack 0
  3008  0000CC                     sprintf@sp:
  3009                           	opt stack 0
  3010                           
  3011                           ; 2 bytes @ 0xC
  3012  0000CC                     	ds	1
  3013  0000CD                     ??_USBapp_DeviceCdcEmulatorHandler:
  3014  0000CD                     oled_clearRow@page:
  3015                           	opt stack 0
  3016  0000CD                     oled_putString@string:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0xD
  3020  0000CD                     	ds	1
  3021  0000CE                     moteApp_add16bToDataBuffer@bufferLocation:
  3022                           	opt stack 0
  3023  0000CE                     oled_clearRow@index:
  3024                           	opt stack 0
  3025  0000CE                     sprintf@f:
  3026                           	opt stack 0
  3027                           
  3028                           ; 2 bytes @ 0xE
  3029  0000CE                     	ds	1
  3030  0000CF                     oled_putString@station_dot:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0xF
  3034  0000CF                     	ds	1
  3035  0000D0                     oled_putString@start_page:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x10
  3039  0000D0                     	ds	1
  3040  0000D1                     oled_putString@index:
  3041                           	opt stack 0
  3042                           
  3043                           ; 1 bytes @ 0x11
  3044  0000D1                     	ds	1
  3045  0000D2                     oled_putUint8@station_dot:
  3046                           	opt stack 0
  3047  0000D2                     oled_putUint16@number:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x12
  3051  0000D2                     	ds	1
  3052  0000D3                     oled_putUint8@start_page:
  3053                           	opt stack 0
  3054                           
  3055                           ; 1 bytes @ 0x13
  3056  0000D3                     	ds	1
  3057  0000D4                     ??_sprintf:
  3058  0000D4                     oled_putUint8@number:
  3059                           	opt stack 0
  3060  0000D4                     oled_putUint16@station_dot:
  3061                           	opt stack 0
  3062                           
  3063                           ; 1 bytes @ 0x14
  3064  0000D4                     	ds	1
  3065  0000D5                     oled_putUint16@start_page:
  3066                           	opt stack 0
  3067  0000D5                     oled_putUint8@numData:
  3068                           	opt stack 0
  3069                           
  3070                           ; 6 bytes @ 0x15
  3071  0000D5                     	ds	1
  3072  0000D6                     oled_putUint16@numData:
  3073                           	opt stack 0
  3074                           
  3075                           ; 6 bytes @ 0x16
  3076  0000D6                     	ds	2
  3077  0000D8                     sprintf@idx:
  3078                           	opt stack 0
  3079                           
  3080                           ; 1 bytes @ 0x18
  3081  0000D8                     	ds	1
  3082  0000D9                     sprintf@prec:
  3083                           	opt stack 0
  3084                           
  3085                           ; 1 bytes @ 0x19
  3086  0000D9                     	ds	1
  3087  0000DA                     sprintf@cp:
  3088                           	opt stack 0
  3089                           
  3090                           ; 2 bytes @ 0x1A
  3091  0000DA                     	ds	2
  3092  0000DC                     moteRunningProcess@selectButton:
  3093                           	opt stack 0
  3094  0000DC                     sprintf@ap:
  3095                           	opt stack 0
  3096                           
  3097                           ; 1 bytes @ 0x1C
  3098  0000DC                     	ds	1
  3099  0000DD                     moteRunningProcess@messageReady:
  3100                           	opt stack 0
  3101  0000DD                     sprintf@len:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x1D
  3105  0000DD                     	ds	1
  3106  0000DE                     moteRunningProcess@sleepEvent:
  3107                           	opt stack 0
  3108                           
  3109                           ; 1 bytes @ 0x1E
  3110  0000DE                     	ds	1
  3111  0000DF                     ??_moteRunningProcess:
  3112  0000DF                     sprintf@val:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x1F
  3116  0000DF                     	ds	2
  3117  0000E1                     sprintf@flag:
  3118                           	opt stack 0
  3119  0000E1                     moteRunningProcess@Traw:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x21
  3123  0000E1                     	ds	1
  3124  0000E2                     sprintf@width:
  3125                           	opt stack 0
  3126                           
  3127                           ; 2 bytes @ 0x22
  3128  0000E2                     	ds	1
  3129  0000E3                     moteRunningProcess@i:
  3130                           	opt stack 0
  3131                           
  3132                           ; 1 bytes @ 0x23
  3133  0000E3                     	ds	1
  3134  0000E4                     moteRunningProcess@i_1375:
  3135                           	opt stack 0
  3136  0000E4                     sprintf@c:
  3137                           	opt stack 0
  3138                           
  3139                           ; 1 bytes @ 0x24
  3140  0000E4                     	ds	1
  3141  0000E5                     moteJoiningProcess@switchEvent:
  3142                           	opt stack 0
  3143                           
  3144                           ; 1 bytes @ 0x25
  3145  0000E5                     	ds	1
  3146  0000E6                     ??_moteJoiningProcess:
  3147                           
  3148                           ; 1 bytes @ 0x26
  3149  0000E6                     	ds	2
  3150  0000E8                     _moteJoiningProcess$1333:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x28
  3154  0000E8                     	ds	2
  3155  0000EA                     moteJoiningProcess@joiningComplete:
  3156                           	opt stack 0
  3157                           
  3158                           ; 1 bytes @ 0x2A
  3159  0000EA                     	ds	1
  3160  0000EB                     moteJoiningProcess@Traw:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x2B
  3164  0000EB                     	ds	2
  3165  0000ED                     moteJoiningProcess@i:
  3166                           	opt stack 0
  3167                           
  3168                           ; 1 bytes @ 0x2D
  3169  0000ED                     	ds	1
  3170  0000EE                     moteJoiningProcess@i_1350:
  3171                           	opt stack 0
  3172                           
  3173                           ; 1 bytes @ 0x2E
  3174  0000EE                     	ds	1
  3175  0000EF                     moteJoiningProcess@messageReady:
  3176                           	opt stack 0
  3177                           
  3178                           ; 1 bytes @ 0x2F
  3179  0000EF                     	ds	1
  3180  0000F0                     ??_moteHandler:
  3181                           
  3182                           ; 1 bytes @ 0x30
  3183  0000F0                     	ds	2
  3184  0000F2                     moteHandler@gotoSleep:
  3185                           	opt stack 0
  3186                           
  3187                           ; 1 bytes @ 0x32
  3188  0000F2                     	ds	1
  3189  0000F3                     moteHandler@gotoNextState:
  3190                           	opt stack 0
  3191                           
  3192                           ; 1 bytes @ 0x33
  3193  0000F3                     	ds	1
  3194  0000F4                     moteHandler@Traw:
  3195                           	opt stack 0
  3196                           
  3197                           ; 2 bytes @ 0x34
  3198  0000F4                     	ds	2
  3199  0000F6                     moteHandler@s2Button:
  3200                           	opt stack 0
  3201                           
  3202                           ; 1 bytes @ 0x36
  3203  0000F6                     	ds	1
  3204  0000F7                     moteHandler@buttonPress:
  3205                           	opt stack 0
  3206                           
  3207                           ; 1 bytes @ 0x37
  3208  0000F7                     	ds	1
  3209  0000F8                     moteHandler@i:
  3210                           	opt stack 0
  3211                           
  3212                           ; 1 bytes @ 0x38
  3213  0000F8                     	ds	1
  3214  0000F9                     moteHandler@i_1290:
  3215                           	opt stack 0
  3216                           
  3217                           ; 1 bytes @ 0x39
  3218  0000F9                     	ds	1
  3219  0000FA                     moteHandler@readMessage:
  3220                           	opt stack 0
  3221                           
  3222                           ; 1 bytes @ 0x3A
  3223  0000FA                     	ds	1
  3224  0000FB                     tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           
  3231                           ; 1 bytes @ 0x3B
  3232                           
  3233                           	psect	cstackCOMRAM
  3234  00002E                     __pcstackCOMRAM:
  3235                           	opt stack 0
  3236  00002E                     ??_USBStdGetDscHandler:
  3237  00002E                     ?i2_USBTransferOnePacket:
  3238                           	opt stack 0
  3239  00002E                     ?___lldiv:
  3240                           	opt stack 0
  3241  00002E                     USBConfigureEndpoint@direction:
  3242                           	opt stack 0
  3243  00002E                     USBCtrlTrfTxService@byteToSend:
  3244                           	opt stack 0
  3245  00002E                     i2USBTransferOnePacket@dir:
  3246                           	opt stack 0
  3247  00002E                     USBStdGetStatusHandler@p:
  3248                           	opt stack 0
  3249  00002E                     i2memset@p1:
  3250                           	opt stack 0
  3251  00002E                     ___lldiv@dividend:
  3252                           	opt stack 0
  3253                           
  3254                           ; 4 bytes @ 0x0
  3255  00002E                     	ds	1
  3256  00002F                     ??_USBConfigureEndpoint:
  3257  00002F                     i2USBTransferOnePacket@data:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x1
  3261  00002F                     	ds	1
  3262  000030                     i2memset@c:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x2
  3266  000030                     	ds	1
  3267  000031                     i2USBTransferOnePacket@len:
  3268                           	opt stack 0
  3269                           
  3270                           ; 1 bytes @ 0x3
  3271  000031                     	ds	1
  3272  000032                     i2USBTransferOnePacket@ep:
  3273                           	opt stack 0
  3274  000032                     i2memset@n:
  3275                           	opt stack 0
  3276  000032                     ___lldiv@divisor:
  3277                           	opt stack 0
  3278                           
  3279                           ; 4 bytes @ 0x4
  3280  000032                     	ds	1
  3281  000033                     USBConfigureEndpoint@EPNum:
  3282                           	opt stack 0
  3283  000033                     i2USBTransferOnePacket@handle:
  3284                           	opt stack 0
  3285                           
  3286                           ; 2 bytes @ 0x5
  3287  000033                     	ds	1
  3288  000034                     USBConfigureEndpoint@handle:
  3289                           	opt stack 0
  3290  000034                     i2memset@p:
  3291                           	opt stack 0
  3292                           
  3293                           ; 2 bytes @ 0x6
  3294  000034                     	ds	2
  3295  000036                     USBEnableEndpoint@options:
  3296                           	opt stack 0
  3297  000036                     i2USBDeviceInit@i:
  3298                           	opt stack 0
  3299  000036                     ___lldiv@quotient:
  3300                           	opt stack 0
  3301                           
  3302                           ; 4 bytes @ 0x8
  3303  000036                     	ds	1
  3304  000037                     USBEnableEndpoint@p:
  3305                           	opt stack 0
  3306                           
  3307                           ; 2 bytes @ 0x9
  3308  000037                     	ds	2
  3309  000039                     USBEnableEndpoint@ep:
  3310                           	opt stack 0
  3311                           
  3312                           ; 1 bytes @ 0xB
  3313  000039                     	ds	1
  3314  00003A                     USBapp_CdcEmulatorInitialize@i:
  3315                           	opt stack 0
  3316  00003A                     ___lldiv@counter:
  3317                           	opt stack 0
  3318                           
  3319                           ; 1 bytes @ 0xC
  3320  00003A                     	ds	1
  3321  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3322                           	opt stack 0
  3323  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3324                           	opt stack 0
  3325                           
  3326                           ; 4 bytes @ 0xD
  3327  00003B                     	ds	2
  3328  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3329                           	opt stack 0
  3330                           
  3331                           ; 2 bytes @ 0xF
  3332  00003D                     	ds	2
  3333  00003F                     USBCtrlTrfRxService@i:
  3334                           	opt stack 0
  3335  00003F                     USBCtrlTrfInHandler@lastDTS:
  3336                           	opt stack 0
  3337  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3338                           	opt stack 0
  3339                           
  3340                           ; 2 bytes @ 0x11
  3341  00003F                     	ds	1
  3342  000040                     USBCtrlTrfRxService@byteToRead:
  3343                           	opt stack 0
  3344                           
  3345                           ; 1 bytes @ 0x12
  3346  000040                     	ds	1
  3347  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3348                           
  3349                           ; 1 bytes @ 0x13
  3350  000041                     	ds	2
  3351  000043                     ??_USBStdFeatureReqHandler:
  3352  000043                     USBStdSetCfgHandler@i:
  3353                           	opt stack 0
  3354                           
  3355                           ; 1 bytes @ 0x15
  3356  000043                     	ds	2
  3357  000045                     USBStdFeatureReqHandler@pUEP:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x17
  3361  000045                     	ds	2
  3362  000047                     USBStdFeatureReqHandler@current_ep_data:
  3363                           	opt stack 0
  3364                           
  3365                           ; 1 bytes @ 0x19
  3366  000047                     	ds	1
  3367  000048                     USBStdFeatureReqHandler@p:
  3368                           	opt stack 0
  3369                           
  3370                           ; 2 bytes @ 0x1A
  3371  000048                     	ds	2
  3372  00004A                     ??_USBCheckStdRequest:
  3373                           
  3374                           ; 1 bytes @ 0x1C
  3375  00004A                     	ds	1
  3376  00004B                     ??_USBCtrlEPService:
  3377  00004B                     
  3378                           ; 1 bytes @ 0x1D
  3379  00004B                     	ds	2
  3380  00004D                     USBCtrlEPService@setup_cnt:
  3381                           	opt stack 0
  3382                           
  3383                           ; 1 bytes @ 0x1F
  3384  00004D                     	ds	1
  3385  00004E                     USBDeviceTasks@i:
  3386                           	opt stack 0
  3387                           
  3388                           ; 1 bytes @ 0x20
  3389  00004E                     	ds	1
  3390  00004F                     ??_INTERRUPT_InterruptManager:
  3391                           
  3392                           ; 1 bytes @ 0x21
  3393  00004F                     	ds	12
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           
  3401 ;;
  3402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3403 ;;
  3404 ;; *************** function _main *****************
  3405 ;; Defined at:
  3406 ;;		line 41 in file "main.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : F/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3424 ;;Total ram usage:        0 bytes
  3425 ;; Hardware stack levels required when called:   21
  3426 ;; This function calls:
  3427 ;;		_DATAEE_ReadByte
  3428 ;;		_MOTEapp_handlerState
  3429 ;;		_SYSTEM_Initialize
  3430 ;;		_USBDeviceAttach
  3431 ;;		_USBDeviceInit
  3432 ;;		_USBapp_Handler
  3433 ;;		_USBapp_handlerState
  3434 ;;		_modemResync
  3435 ;;		_moteApp_delayms
  3436 ;;		_moteHandler
  3437 ;;		_oled_clear
  3438 ;;		_oled_init
  3439 ;;		_oled_putString
  3440 ;; This function is called by:
  3441 ;;		Startup code after reset
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text0
  3446  0059DC                     __ptext0:
  3447                           	opt stack 0
  3448  0059DC                     _main:
  3449                           	opt stack 10
  3450                           
  3451                           ;main.c: 44: SYSTEM_Initialize();
  3452                           
  3453                           ;incstack = 0
  3454  0059DC  EC0A  F023         	call	_SYSTEM_Initialize	;wreg free
  3455                           
  3456                           ;main.c: 59: oled_init();
  3457  0059E0  EC3C  F023         	call	_oled_init	;wreg free
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;main.c: 60: USBDeviceInit();
  3461  0059E4  EC71  F02E         	call	_USBDeviceInit	;wreg free
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;main.c: 66: USBDeviceAttach();
  3465  0059E8  EC2F  F024         	call	_USBDeviceAttach	;wreg free
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 68: PEIE = 1;
  3469  0059EC  8CF2               	bsf	intcon,6,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 69: GIE = 1;
  3473  0059EE  8EF2               	bsf	intcon,7,c	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 72: moteApp_delayms(300);
  3477  0059F0  0E01               	movlw	1
  3478  0059F2  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3479  0059F4  0E2C               	movlw	44
  3480  0059F6  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  3481  0059F8  EC9B  F023         	call	_moteApp_delayms	;wreg free
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;main.c: 73: modemResync();
  3485  0059FC  EC96  F027         	call	_modemResync	;wreg free
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;main.c: 74: moteApp_delayms(300);
  3489  005A00  0E01               	movlw	1
  3490  005A02  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3491  005A04  0E2C               	movlw	44
  3492  005A06  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  3493  005A08  EC9B  F023         	call	_moteApp_delayms	;wreg free
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;main.c: 78: powerOnStatus = DATAEE_ReadByte(0x00);
  3497  005A0C  0E00               	movlw	0
  3498  005A0E  EC72  F022         	call	_DATAEE_ReadByte
  3499                           
  3500                           ;main.c: 88: operationType = USB;
  3501  005A12  0100               	movlb	0	; () banked
  3502  005A14  6B9A               	clrf	_operationType& (0+255),b
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;main.c: 89: USBapp_handlerState(USB_STARTUP);
  3506  005A16  0E00               	movlw	0
  3507  005A18  EC19  F022         	call	_USBapp_handlerState
  3508                           
  3509                           ;main.c: 94: oled_clear();
  3510  005A1C  ECA6  F022         	call	_oled_clear	;wreg free
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;main.c: 95: oled_putString("Scriptr IoT-X",0,0);
  3514  005A20  0EDD               	movlw	low STR_1
  3515  005A22  6FCD               	movwf	oled_putString@string& (0+255),b
  3516  005A24  0E7D               	movlw	high STR_1
  3517  005A26  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3518  005A28  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3519  005A2A  6BD0               	clrf	oled_putString@start_page& (0+255),b
  3520  005A2C  ECC8  F027         	call	_oled_putString	;wreg free
  3521                           
  3522                           ;main.c: 96: oled_putString(" Dev: S1 ",0,1);
  3523  005A30  0E34               	movlw	low STR_2
  3524  005A32  0100               	movlb	0	; () banked
  3525  005A34  6FCD               	movwf	oled_putString@string& (0+255),b
  3526  005A36  0E7F               	movlw	high STR_2
  3527  005A38  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3528  005A3A  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3529  005A3C  0E01               	movlw	1
  3530  005A3E  6FD0               	movwf	oled_putString@start_page& (0+255),b
  3531  005A40  ECC8  F027         	call	_oled_putString	;wreg free
  3532                           
  3533                           ;main.c: 97: oled_putString("   build 006   ",0,3);
  3534  005A44  0EAF               	movlw	low STR_3
  3535  005A46  0100               	movlb	0	; () banked
  3536  005A48  6FCD               	movwf	oled_putString@string& (0+255),b
  3537  005A4A  0E7D               	movlw	high STR_3
  3538  005A4C  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3539  005A4E  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3540  005A50  0E03               	movlw	3
  3541  005A52  6FD0               	movwf	oled_putString@start_page& (0+255),b
  3542  005A54  ECC8  F027         	call	_oled_putString	;wreg free
  3543                           
  3544                           ;main.c: 98: moteApp_delayms(700);
  3545  005A58  0E02               	movlw	2
  3546  005A5A  0100               	movlb	0	; () banked
  3547  005A5C  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3548  005A5E  0EBC               	movlw	188
  3549  005A60  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  3550  005A62  EC9B  F023         	call	_moteApp_delayms	;wreg free
  3551  005A66  D011               	goto	l10449
  3552  005A68                     l50:
  3553  005A68  D7FF               	goto	l50
  3554  005A6A                     l10435:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;main.c: 110: USBapp_Handler();
  3558  005A6A  ECDB  F028         	call	_USBapp_Handler	;wreg free
  3559                           
  3560                           ;main.c: 112: operationType = MOTE;
  3561  005A6E  0E01               	movlw	1
  3562  005A70  0100               	movlb	0	; () banked
  3563  005A72  6F9A               	movwf	_operationType& (0+255),b
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;main.c: 113: MOTEapp_handlerState(MOTE_STARTUP);
  3567  005A74  EC15  F022         	call	_MOTEapp_handlerState
  3568                           
  3569                           ;main.c: 114: break;
  3570  005A78  D008               	goto	l10449
  3571  005A7A                     l10441:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;main.c: 116: if (moteHandler() == MOTE_SWAP)
  3575  005A7A  EC67  F034         	call	_moteHandler	;wreg free
  3576  005A7E  0A04               	xorlw	4
  3577  005A80  E104               	bnz	l10449
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;main.c: 117: {
  3581                           ;main.c: 119: operationType = USB;
  3582  005A82  6B9A               	clrf	_operationType& (0+255),b
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;main.c: 120: USBapp_handlerState(USB_STARTUP);
  3586  005A84  0E00               	movlw	0
  3587  005A86  EC19  F022         	call	_USBapp_handlerState
  3588  005A8A                     l10449:
  3589  005A8A  0100               	movlb	0	; () banked
  3590  005A8C  519A               	movf	_operationType& (0+255),w,b
  3591                           
  3592                           ; Switch size 1, requested type "speed"
  3593                           ; Number of cases is 2, Range of values is 0 to 1
  3594                           ; switch strategies available:
  3595                           ; Name         Instructions Cycles
  3596                           ; simple_byte            7     4 (average)
  3597                           ;	Chosen strategy is simple_byte
  3598  005A8E  E0ED               	bz	l10435
  3599  005A90  0A01               	xorlw	1	; case 1
  3600  005A92  E0F3               	bz	l10441
  3601  005A94  D7E9               	goto	l50
  3602  005A96                     __end_of_main:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           intcon	equ	0xFF2
  3609                           postinc0	equ	0xFEE
  3610                           wreg	equ	0xFE8
  3611                           
  3612 ;; *************** function _moteHandler *****************
  3613 ;; Defined at:
  3614 ;;		line 176 in file "../Includes/Board/MOTEapp.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  i               1   57[BANK0 ] unsigned char 
  3619 ;;  i               1   56[BANK0 ] unsigned char 
  3620 ;;  Traw            2   52[BANK0 ] unsigned int 
  3621 ;;  readMessage     1   58[BANK0 ] unsigned char 
  3622 ;;  buttonPress     1   55[BANK0 ] enum E6327
  3623 ;;  s2Button        1   54[BANK0 ] unsigned char 
  3624 ;;  gotoNextStat    1   51[BANK0 ] unsigned char 
  3625 ;;  gotoSleep       1   50[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      enum E7241
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : F/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0
  3636 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3637 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3638 ;;      Totals:         0      11       0       0       0       0       0       0       0
  3639 ;;Total ram usage:       11 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:   20
  3642 ;; This function calls:
  3643 ;;		_ADC_GetConversion
  3644 ;;		_ADC_TempConversion
  3645 ;;		_MOTEapp_TimerBasedTask
  3646 ;;		_MOTEapp_getModemResponse
  3647 ;;		_TMRapp_ClearBitFlags
  3648 ;;		_TMRapp_Handler
  3649 ;;		_moteApp_delayms
  3650 ;;		_moteJoiningProcess
  3651 ;;		_moteRunningProcess
  3652 ;;		_oled_clear
  3653 ;;		_oled_putString
  3654 ;;		_service_pushbutton
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text1
  3661  0068CE                     __ptext1:
  3662                           	opt stack 0
  3663  0068CE                     _moteHandler:
  3664                           	opt stack 10
  3665                           
  3666                           ;MOTEapp.c: 178: bool gotoSleep = 0;
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;incstack = 0
  3670  0068CE  0100               	movlb	0	; () banked
  3671  0068D0  6BF2               	clrf	moteHandler@gotoSleep& (0+255),b
  3672                           
  3673                           ;MOTEapp.c: 179: bool gotoNextState = 0;
  3674  0068D2  6BF3               	clrf	moteHandler@gotoNextState& (0+255),b
  3675                           
  3676                           ;MOTEapp.c: 180: bool s2Button = 0;
  3677  0068D4  6BF6               	clrf	moteHandler@s2Button& (0+255),b
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;MOTEapp.c: 188: if (PORTAbits.RA0)
  3681                           
  3682                           ; BSR set to: 0
  3683  0068D6  A080               	btfss	3968,0,c	;volatile
  3684  0068D8  D002               	goto	l10293
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;MOTEapp.c: 189: moteState = MOTE_SWAP;
  3688  0068DA  0E04               	movlw	4
  3689  0068DC  6FFD               	movwf	_moteState& (0+255),b
  3690  0068DE                     l10293:
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;MOTEapp.c: 192: if ( appTimer.mSecTick )
  3694  0068DE  A195               	btfss	_appTimer& (0+255),0,b
  3695  0068E0  D007               	goto	l10301
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;MOTEapp.c: 193: {
  3699                           ;MOTEapp.c: 195: TMRapp_ClearBitFlags();
  3700  0068E2  EC0D  F022         	call	_TMRapp_ClearBitFlags	;wreg free
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;MOTEapp.c: 197: TMRapp_Handler();
  3704  0068E6  ECB4  F02F         	call	_TMRapp_Handler	;wreg free
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;MOTEapp.c: 198: MOTEapp_TimerBasedTask(appTimer);
  3708  0068EA  5195               	movf	_appTimer& (0+255),w,b
  3709  0068EC  EC40  F022         	call	_MOTEapp_TimerBasedTask
  3710  0068F0                     l10301:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;MOTEapp.c: 199: }
  3714                           ;MOTEapp.c: 202: buttonPress = service_pushbutton();
  3715  0068F0  ECE9  F025         	call	_service_pushbutton	;wreg free
  3716  0068F4  6FF7               	movwf	moteHandler@buttonPress& (0+255),b
  3717                           
  3718                           ;MOTEapp.c: 203: if (buttonPress == ShortPress1)
  3719  0068F6  05F7               	decf	moteHandler@buttonPress& (0+255),w,b
  3720  0068F8  E104               	bnz	l10307
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;MOTEapp.c: 204: {
  3724                           ;MOTEapp.c: 205: secTicker = 0;
  3725  0068FA  6B9D               	clrf	_secTicker& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;MOTEapp.c: 206: gotoNextState = 1;
  3729  0068FC  0E01               	movlw	1
  3730  0068FE  6FF3               	movwf	moteHandler@gotoNextState& (0+255),b
  3731                           
  3732                           ;MOTEapp.c: 207: }
  3733  006900  D006               	goto	l10313
  3734  006902                     l10307:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;MOTEapp.c: 208: else if (buttonPress == ShortPress2)
  3738  006902  0E02               	movlw	2
  3739  006904  19F7               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3740  006906  E103               	bnz	l10313
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;MOTEapp.c: 209: {
  3744                           ;MOTEapp.c: 210: secTicker = 0;
  3745  006908  6B9D               	clrf	_secTicker& (0+255),b
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;MOTEapp.c: 211: s2Button = 1;
  3749  00690A  0E01               	movlw	1
  3750  00690C  6FF6               	movwf	moteHandler@s2Button& (0+255),b
  3751  00690E                     l10313:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;MOTEapp.c: 212: }
  3755                           ;MOTEapp.c: 215: if ( MOTEapp_getModemResponse() )
  3756  00690E  ECC4  F025         	call	_MOTEapp_getModemResponse	;wreg free
  3757  006912  0900               	iorlw	0
  3758  006914  E003               	bz	l324
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;MOTEapp.c: 216: readMessage = 1;
  3762  006916  0E01               	movlw	1
  3763  006918  6FFA               	movwf	moteHandler@readMessage& (0+255),b
  3764  00691A  D001               	goto	l10317
  3765  00691C                     l324:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;MOTEapp.c: 217: else
  3769                           ;MOTEapp.c: 218: readMessage = 0;
  3770  00691C  6BFA               	clrf	moteHandler@readMessage& (0+255),b
  3771  00691E                     l10317:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;MOTEapp.c: 221: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3775  00691E  0E06               	movlw	6
  3776  006920  199C               	xorwf	_runningState& (0+255),w,b
  3777  006922  E003               	bz	l10321
  3778                           
  3779                           ; BSR set to: 0
  3780  006924  0E02               	movlw	2
  3781  006926  199C               	xorwf	_runningState& (0+255),w,b
  3782  006928  E13B               	bnz	l10357
  3783  00692A                     l10321:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;MOTEapp.c: 222: {
  3787                           ;MOTEapp.c: 224: if (m10SecTicker >= 5)
  3788  00692A  0E04               	movlw	4
  3789  00692C  6599               	cpfsgt	_m10SecTicker& (0+255),b
  3790  00692E  D038               	goto	l10357
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;MOTEapp.c: 225: {
  3794                           ;MOTEapp.c: 226: uint16_t Traw = 0;
  3795  006930  6BF4               	clrf	moteHandler@Traw& (0+255),b
  3796  006932  6BF5               	clrf	(moteHandler@Traw+1)& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;MOTEapp.c: 227: moteApp_delayms(10);
  3800  006934  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3801  006936  0E0A               	movlw	10
  3802  006938  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  3803  00693A  EC9B  F023         	call	_moteApp_delayms	;wreg free
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;MOTEapp.c: 228: for(uint8_t i = 32; i>0; i--)
  3807  00693E  0E20               	movlw	32
  3808  006940  6FF8               	movwf	moteHandler@i& (0+255),b
  3809  006942                     l10333:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;MOTEapp.c: 229: {
  3813                           ;MOTEapp.c: 230: light = (light + ADC_GetConversion(Light_channel)) / 2;
  3814  006942  0E03               	movlw	3
  3815  006944  ECDE  F024         	call	_ADC_GetConversion
  3816  006948  517D               	movf	_light& (0+255),w,b
  3817  00694A  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  3818  00694C  517E               	movf	(_light+1)& (0+255),w,b
  3819  00694E  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3820  006950  90D8               	bcf	status,0,c
  3821  006952  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3822  006954  6FF0               	movwf	??_moteHandler& (0+255),b
  3823  006956  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3824  006958  6F7D               	movwf	_light& (0+255),b
  3825  00695A  C0F0  F07E         	movff	??_moteHandler,_light+1
  3826                           
  3827                           ; BSR set to: 0
  3828  00695E  07F8               	decf	moteHandler@i& (0+255),f,b
  3829                           
  3830                           ; BSR set to: 0
  3831  006960  51F8               	movf	moteHandler@i& (0+255),w,b
  3832  006962  E1EF               	bnz	l10333
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;MOTEapp.c: 231: }
  3836                           ;MOTEapp.c: 232: moteApp_delayms(10);
  3837  006964  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3838  006966  0E0A               	movlw	10
  3839  006968  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  3840  00696A  EC9B  F023         	call	_moteApp_delayms	;wreg free
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;MOTEapp.c: 233: for(uint8_t i = 32; i>0; i--)
  3844  00696E  0E20               	movlw	32
  3845  006970  6FF9               	movwf	moteHandler@i_1290& (0+255),b
  3846  006972                     l10347:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;MOTEapp.c: 234: {
  3850                           ;MOTEapp.c: 235: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  3851  006972  0E02               	movlw	2
  3852  006974  ECDE  F024         	call	_ADC_GetConversion
  3853  006978  51F4               	movf	moteHandler@Traw& (0+255),w,b
  3854  00697A  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  3855  00697C  51F5               	movf	(moteHandler@Traw+1)& (0+255),w,b
  3856  00697E  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3857  006980  90D8               	bcf	status,0,c
  3858  006982  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3859  006984  6FF0               	movwf	??_moteHandler& (0+255),b
  3860  006986  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3861  006988  6FF4               	movwf	moteHandler@Traw& (0+255),b
  3862  00698A  C0F0  F0F5         	movff	??_moteHandler,moteHandler@Traw+1
  3863                           
  3864                           ; BSR set to: 0
  3865  00698E  07F9               	decf	moteHandler@i_1290& (0+255),f,b
  3866                           
  3867                           ; BSR set to: 0
  3868  006990  51F9               	movf	moteHandler@i_1290& (0+255),w,b
  3869  006992  E1EF               	bnz	l10347
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;MOTEapp.c: 236: }
  3873                           ;MOTEapp.c: 237: temperature = ADC_TempConversion(Traw);
  3874  006994  51F4               	movf	moteHandler@Traw& (0+255),w,b
  3875  006996  EC2B  F023         	call	_ADC_TempConversion
  3876  00699A  6F83               	movwf	_temperature& (0+255),b
  3877  00699C  6B84               	clrf	(_temperature+1)& (0+255),b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;MOTEapp.c: 238: m10SecTicker = 0;
  3881  00699E  6B99               	clrf	_m10SecTicker& (0+255),b
  3882  0069A0                     l10357:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;MOTEapp.c: 239: }
  3886                           ;MOTEapp.c: 240: }
  3887                           ;MOTEapp.c: 242: if(secTicker)
  3888  0069A0  519D               	movf	_secTicker& (0+255),w,b
  3889  0069A2  E060               	bz	l10395
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;MOTEapp.c: 243: {
  3893                           ;MOTEapp.c: 244: if (secTicker >= 10)
  3894  0069A4  0E09               	movlw	9
  3895  0069A6  659D               	cpfsgt	_secTicker& (0+255),b
  3896  0069A8  D05D               	goto	l10395
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;MOTEapp.c: 245: {
  3900                           ;MOTEapp.c: 246: gotoSleep = 1;
  3901  0069AA  0E01               	movlw	1
  3902  0069AC  6FF2               	movwf	moteHandler@gotoSleep& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;MOTEapp.c: 247: secTicker = 0;
  3906  0069AE  6B9D               	clrf	_secTicker& (0+255),b
  3907  0069B0  D059               	goto	l10395
  3908  0069B2                     l338:
  3909                           
  3910                           ; BSR set to: 0
  3911  0069B2  D7FF               	goto	l338
  3912  0069B4                     l10365:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;MOTEapp.c: 257: oled_clear();
  3916  0069B4  ECA6  F022         	call	_oled_clear	;wreg free
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;MOTEapp.c: 258: oled_putString("MOTE Mode",1,0);
  3920  0069B8  0E16               	movlw	low STR_23
  3921  0069BA  6FCD               	movwf	oled_putString@string& (0+255),b
  3922  0069BC  0E7F               	movlw	high STR_23
  3923  0069BE  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3924  0069C0  0E01               	movlw	1
  3925  0069C2  6FCF               	movwf	oled_putString@station_dot& (0+255),b
  3926  0069C4  6BD0               	clrf	oled_putString@start_page& (0+255),b
  3927  0069C6  ECC8  F027         	call	_oled_putString	;wreg free
  3928                           
  3929                           ;MOTEapp.c: 259: oled_putString("Starting",2,1);
  3930  0069CA  0E62               	movlw	low STR_24
  3931  0069CC  0100               	movlb	0	; () banked
  3932  0069CE  6FCD               	movwf	oled_putString@string& (0+255),b
  3933  0069D0  0E7F               	movlw	high STR_24
  3934  0069D2  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3935  0069D4  0E02               	movlw	2
  3936  0069D6  6FCF               	movwf	oled_putString@station_dot& (0+255),b
  3937  0069D8  0E01               	movlw	1
  3938  0069DA  6FD0               	movwf	oled_putString@start_page& (0+255),b
  3939  0069DC  ECC8  F027         	call	_oled_putString	;wreg free
  3940                           
  3941                           ;MOTEapp.c: 260: oled_putString("ReRun PwrTst<S2>",0,3);
  3942  0069E0  0E0A               	movlw	low STR_25
  3943  0069E2  0100               	movlb	0	; () banked
  3944  0069E4  6FCD               	movwf	oled_putString@string& (0+255),b
  3945  0069E6  0E7D               	movlw	high STR_25
  3946  0069E8  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3947  0069EA  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3948  0069EC  0E03               	movlw	3
  3949  0069EE  6FD0               	movwf	oled_putString@start_page& (0+255),b
  3950  0069F0  ECC8  F027         	call	_oled_putString	;wreg free
  3951                           
  3952                           ;MOTEapp.c: 261: activeState = moteStartup;
  3953  0069F4  0100               	movlb	0	; () banked
  3954  0069F6  6B94               	clrf	_activeState& (0+255),b
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;MOTEapp.c: 262: moteState = MOTE_JOINING;
  3958  0069F8  0E02               	movlw	2
  3959  0069FA  D028               	goto	L1
  3960  0069FC                     l10377:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;MOTEapp.c: 265: if ( moteJoiningProcess(readMessage, s2Button) )
  3964  0069FC  C0F6  F0E5         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  3965  006A00  51FA               	movf	moteHandler@readMessage& (0+255),w,b
  3966  006A02  EC0D  F038         	call	_moteJoiningProcess
  3967  006A06  0900               	iorlw	0
  3968  006A08  E036               	bz	l10397
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;MOTEapp.c: 266: {
  3972                           ;MOTEapp.c: 267: oled_clear();
  3973  006A0A  ECA6  F022         	call	_oled_clear	;wreg free
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;MOTEapp.c: 268: oled_putString("Mobile Mote -App",0,0);
  3977  006A0E  0E3D               	movlw	low STR_26
  3978  006A10  6FCD               	movwf	oled_putString@string& (0+255),b
  3979  006A12  0E7D               	movlw	high STR_26
  3980  006A14  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3981  006A16  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3982  006A18  6BD0               	clrf	oled_putString@start_page& (0+255),b
  3983  006A1A  ECC8  F027         	call	_oled_putString	;wreg free
  3984                           
  3985                           ;MOTEapp.c: 269: oled_putString("Navigate  Select", 0,2);
  3986  006A1E  0E4E               	movlw	low STR_27
  3987  006A20  0100               	movlb	0	; () banked
  3988  006A22  6FCD               	movwf	oled_putString@string& (0+255),b
  3989  006A24  0E7D               	movlw	high STR_27
  3990  006A26  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  3991  006A28  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  3992  006A2A  0E02               	movlw	2
  3993  006A2C  6FD0               	movwf	oled_putString@start_page& (0+255),b
  3994  006A2E  ECC8  F027         	call	_oled_putString	;wreg free
  3995                           
  3996                           ;MOTEapp.c: 270: oled_putString(" (S1)      (S2) ", 0,3);
  3997  006A32  0EE8               	movlw	low STR_28
  3998  006A34  0100               	movlb	0	; () banked
  3999  006A36  6FCD               	movwf	oled_putString@string& (0+255),b
  4000  006A38  0E7C               	movlw	high STR_28
  4001  006A3A  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4002  006A3C  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  4003  006A3E  0E03               	movlw	3
  4004  006A40  6FD0               	movwf	oled_putString@start_page& (0+255),b
  4005  006A42  ECC8  F027         	call	_oled_putString	;wreg free
  4006                           
  4007                           ;MOTEapp.c: 271: runningState = runningEnter;
  4008  006A46  0100               	movlb	0	; () banked
  4009  006A48  6B9C               	clrf	_runningState& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;MOTEapp.c: 272: moteState = MOTE_RUNNING;
  4013  006A4A  0E03               	movlw	3
  4014  006A4C                     L1:
  4015  006A4C  6FFD               	movwf	_moteState& (0+255),b
  4016  006A4E  D013               	goto	l10397
  4017  006A50                     l10391:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;MOTEapp.c: 276: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  4021  006A50  C0F6  F0DC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  4022  006A54  C0FA  F0DD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  4023  006A58  C0F2  F0DE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  4024  006A5C  51F3               	movf	moteHandler@gotoNextState& (0+255),w,b
  4025  006A5E  ECA2  F033         	call	_moteRunningProcess
  4026                           
  4027                           ;MOTEapp.c: 277: break;
  4028  006A62  D009               	goto	l10397
  4029  006A64                     l10395:
  4030                           
  4031                           ; BSR set to: 0
  4032  006A64  51FD               	movf	_moteState& (0+255),w,b
  4033                           
  4034                           ; Switch size 1, requested type "speed"
  4035                           ; Number of cases is 4, Range of values is 1 to 4
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           13     7 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  006A66  0A01               	xorlw	1	; case 1
  4041  006A68  E0A5               	bz	l10365
  4042  006A6A  0A03               	xorlw	3	; case 2
  4043  006A6C  E0C7               	bz	l10377
  4044  006A6E  0A01               	xorlw	1	; case 3
  4045  006A70  E0EF               	bz	l10391
  4046  006A72  0A07               	xorlw	7	; case 4
  4047  006A74  E19E               	bnz	l338
  4048  006A76                     l10397:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;MOTEapp.c: 282: return moteState;
  4052  006A76  51FD               	movf	_moteState& (0+255),w,b
  4053                           
  4054                           ; BSR set to: 0
  4055  006A78  0012               	return		;funcret
  4056  006A7A                     __end_of_moteHandler:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           intcon	equ	0xFF2
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           status	equ	0xFD8
  4066                           
  4067 ;; *************** function _service_pushbutton *****************
  4068 ;; Defined at:
  4069 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  bs              1    0[BANK0 ] enum E6178
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      enum E6327
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : F/0
  4080 ;;		On exit  : F/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0
  4084 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4086 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        1 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:   11
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_moteHandler
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text2
  4098  004BD2                     __ptext2:
  4099                           	opt stack 0
  4100  004BD2                     _service_pushbutton:
  4101                           	opt stack 18
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;incstack = 0
  4108  004BD2  A082               	btfss	3970,0,c	;volatile
  4109  004BD4  D002               	goto	l9581
  4110                           
  4111                           ; BSR set to: 0
  4112  004BD6  B282               	btfsc	3970,1,c	;volatile
  4113  004BD8  D014               	goto	l9589
  4114  004BDA                     l9581:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;buttons.c: 21: {
  4118                           ;buttons.c: 22: ++PB_Timer;
  4119  004BDA  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  4120  004BDC  0E00               	movlw	0
  4121  004BDE  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  4122  004BE0  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  4123  004BE2  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  4124                           
  4125                           ;buttons.c: 26: if (PB_Timer == 55)
  4126  004BE4  0E37               	movlw	55
  4127  004BE6  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  4128  004BE8  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  4129  004BEA  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  4130  004BEC  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  4131  004BEE  E107               	bnz	l761
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;buttons.c: 27: {
  4135                           ;buttons.c: 28: Release_Timer = 0;
  4136  004BF0  6BA0               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4137                           
  4138                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  4139  004BF2  B082               	btfsc	3970,0,c	;volatile
  4140  004BF4  D002               	goto	l9587
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;buttons.c: 31: {
  4144                           ;buttons.c: 32: bs = ShortPress1;
  4145  004BF6  0E01               	movlw	1
  4146  004BF8  D00F               	goto	L2
  4147  004BFA                     l9587:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;buttons.c: 34: else
  4151                           ;buttons.c: 35: {
  4152                           ;buttons.c: 36: bs = ShortPress2;
  4153  004BFA  0E02               	movlw	2
  4154  004BFC  D00D               	goto	L2
  4155  004BFE                     l761:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;buttons.c: 39: else
  4159                           ;buttons.c: 40: {
  4160                           ;buttons.c: 41: bs = NoButton;
  4161  004BFE  6BC0               	clrf	service_pushbutton@bs& (0+255),b
  4162  004C00  D00C               	goto	l9597
  4163  004C02                     l9589:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;buttons.c: 44: else
  4167                           ;buttons.c: 45: {
  4168                           ;buttons.c: 46: if (Release_Timer == 20)
  4169  004C02  0E14               	movlw	20
  4170  004C04  19A0               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  4171  004C06  E106               	bnz	l9593
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;buttons.c: 47: {
  4175                           ;buttons.c: 48: PB_Timer = 0;
  4176  004C08  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  4177  004C0A  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  4178  004C0C  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  4179  004C0E  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  4180                           
  4181                           ;buttons.c: 49: Release_Timer = 0;
  4182  004C10  6BA0               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4183                           
  4184                           ;buttons.c: 50: }
  4185  004C12  D001               	goto	l9595
  4186  004C14                     l9593:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;buttons.c: 51: else
  4190                           ;buttons.c: 52: {
  4191                           ;buttons.c: 53: Release_Timer++;
  4192  004C14  2BA0               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4193  004C16                     l9595:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;buttons.c: 54: }
  4197                           ;buttons.c: 55: bs = Released;
  4198  004C16  0E03               	movlw	3
  4199  004C18                     L2:
  4200  004C18  6FC0               	movwf	service_pushbutton@bs& (0+255),b
  4201  004C1A                     l9597:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;buttons.c: 56: }
  4205                           ;buttons.c: 58: return bs;
  4206  004C1A  51C0               	movf	service_pushbutton@bs& (0+255),w,b
  4207                           
  4208                           ; BSR set to: 0
  4209  004C1C  0012               	return		;funcret
  4210  004C1E                     __end_of_service_pushbutton:
  4211                           	opt stack 0
  4212                           tblptru	equ	0xFF8
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           intcon	equ	0xFF2
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _moteRunningProcess *****************
  4222 ;; Defined at:
  4223 ;;		line 690 in file "../Includes/Board/MOTEapp.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  changeStates    1    wreg     unsigned char 
  4226 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4227 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4228 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  changeStates    1    0[COMRAM] unsigned char 
  4231 ;;  i               1   36[BANK0 ] unsigned char 
  4232 ;;  i               1   35[BANK0 ] unsigned char 
  4233 ;;  Traw            2   33[BANK0 ] unsigned int 
  4234 ;;  readByte        1    0        unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      enum E6571
  4237 ;; Registers used:
  4238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : F/0
  4241 ;;		On exit  : F/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4244 ;;      Params:         0       3       0       0       0       0       0       0       0
  4245 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4246 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4247 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4248 ;;Total ram usage:        9 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:   19
  4251 ;; This function calls:
  4252 ;;		_ADC_GetConversion
  4253 ;;		_ADC_TempConversion
  4254 ;;		_TMR2_ReadTimer
  4255 ;;		_moteApp_GoToSleep
  4256 ;;		_moteApp_add16bToDataBuffer
  4257 ;;		_moteApp_add8bToDataBuffer
  4258 ;;		_moteApp_clearBuffers
  4259 ;;		_moteApp_delayms
  4260 ;;		_oled_clear
  4261 ;;		_oled_putString
  4262 ;;		_oled_putUint16
  4263 ;;		_oled_putUint8
  4264 ;;		_sendDataCommand
  4265 ;; This function is called by:
  4266 ;;		_moteHandler
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text3
  4271  006744                     __ptext3:
  4272                           	opt stack 0
  4273  006744                     _moteRunningProcess:
  4274                           	opt stack 10
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;MOTEapp.c: 694: if ((sleepEvent) && (periodicState))
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;incstack = 0
  4281  006744  51DE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4282  006746  E101 D0BF          	bz	l10021
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;MOTEapp.c: 695: {
  4286                           ;MOTEapp.c: 696: if (sleepTicker >= 33)
  4287  00674A  0E20               	movlw	32
  4288  00674C  659E               	cpfsgt	_sleepTicker& (0+255),b
  4289  00674E  D0B9               	goto	l10015
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;MOTEapp.c: 697: {
  4293                           ;MOTEapp.c: 699: uint16_t Traw = 0;
  4294  006750  6BE1               	clrf	moteRunningProcess@Traw& (0+255),b
  4295  006752  6BE2               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;MOTEapp.c: 700: moteApp_delayms(10);
  4299  006754  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4300  006756  0E0A               	movlw	10
  4301  006758  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  4302  00675A  EC9B  F023         	call	_moteApp_delayms	;wreg free
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;MOTEapp.c: 701: for(uint8_t i = 32; i>0; i--)
  4306  00675E  0E20               	movlw	32
  4307  006760  6FE3               	movwf	moteRunningProcess@i& (0+255),b
  4308  006762                     l9945:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;MOTEapp.c: 702: {
  4312                           ;MOTEapp.c: 703: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4313  006762  0E03               	movlw	3
  4314  006764  ECDE  F024         	call	_ADC_GetConversion
  4315  006768  517D               	movf	_light& (0+255),w,b
  4316  00676A  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  4317  00676C  517E               	movf	(_light+1)& (0+255),w,b
  4318  00676E  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4319  006770  90D8               	bcf	status,0,c
  4320  006772  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4321  006774  6FDF               	movwf	??_moteRunningProcess& (0+255),b
  4322  006776  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4323  006778  6F7D               	movwf	_light& (0+255),b
  4324  00677A  C0DF  F07E         	movff	??_moteRunningProcess,_light+1
  4325                           
  4326                           ; BSR set to: 0
  4327  00677E  07E3               	decf	moteRunningProcess@i& (0+255),f,b
  4328                           
  4329                           ; BSR set to: 0
  4330  006780  51E3               	movf	moteRunningProcess@i& (0+255),w,b
  4331  006782  E1EF               	bnz	l9945
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;MOTEapp.c: 704: }
  4335                           ;MOTEapp.c: 705: moteApp_delayms(10);
  4336  006784  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4337  006786  0E0A               	movlw	10
  4338  006788  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  4339  00678A  EC9B  F023         	call	_moteApp_delayms	;wreg free
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;MOTEapp.c: 706: for(uint8_t i = 32; i>0; i--)
  4343  00678E  0E20               	movlw	32
  4344  006790  6FE4               	movwf	moteRunningProcess@i_1375& (0+255),b
  4345  006792                     l9959:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;MOTEapp.c: 707: {
  4349                           ;MOTEapp.c: 708: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4350  006792  0E02               	movlw	2
  4351  006794  ECDE  F024         	call	_ADC_GetConversion
  4352  006798  51E1               	movf	moteRunningProcess@Traw& (0+255),w,b
  4353  00679A  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  4354  00679C  51E2               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4355  00679E  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4356  0067A0  90D8               	bcf	status,0,c
  4357  0067A2  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4358  0067A4  6FDF               	movwf	??_moteRunningProcess& (0+255),b
  4359  0067A6  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4360  0067A8  6FE1               	movwf	moteRunningProcess@Traw& (0+255),b
  4361  0067AA  C0DF  F0E2         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4362                           
  4363                           ; BSR set to: 0
  4364  0067AE  07E4               	decf	moteRunningProcess@i_1375& (0+255),f,b
  4365                           
  4366                           ; BSR set to: 0
  4367  0067B0  51E4               	movf	moteRunningProcess@i_1375& (0+255),w,b
  4368  0067B2  E1EF               	bnz	l9959
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;MOTEapp.c: 709: }
  4372                           ;MOTEapp.c: 710: temperature = ADC_TempConversion(Traw);
  4373  0067B4  51E1               	movf	moteRunningProcess@Traw& (0+255),w,b
  4374  0067B6  EC2B  F023         	call	_ADC_TempConversion
  4375  0067BA  6F83               	movwf	_temperature& (0+255),b
  4376  0067BC  6B84               	clrf	(_temperature+1)& (0+255),b
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;MOTEapp.c: 712: sleepTicker = 0;
  4380  0067BE  6B9E               	clrf	_sleepTicker& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;MOTEapp.c: 713: oled_clear();
  4384  0067C0  ECA6  F022         	call	_oled_clear	;wreg free
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;MOTEapp.c: 714: oled_putString("Issue Perodic TX",0,0);
  4388  0067C4  0E1B               	movlw	low STR_76
  4389  0067C6  6FCD               	movwf	oled_putString@string& (0+255),b
  4390  0067C8  0E7D               	movlw	high STR_76
  4391  0067CA  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4392  0067CC  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  4393  0067CE  6BD0               	clrf	oled_putString@start_page& (0+255),b
  4394  0067D0  ECC8  F027         	call	_oled_putString	;wreg free
  4395                           
  4396                           ;MOTEapp.c: 715: oled_putString("On Port #: ",0,1);
  4397  0067D4  0EAD               	movlw	low STR_77
  4398  0067D6  0100               	movlb	0	; () banked
  4399  0067D8  6FCD               	movwf	oled_putString@string& (0+255),b
  4400  0067DA  0E7E               	movlw	high STR_77
  4401  0067DC  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4402  0067DE  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  4403  0067E0  0E01               	movlw	1
  4404  0067E2  6FD0               	movwf	oled_putString@start_page& (0+255),b
  4405  0067E4  ECC8  F027         	call	_oled_putString	;wreg free
  4406                           
  4407                           ;MOTEapp.c: 716: oled_putUint8(randomPortNum,10,1);
  4408  0067E8  0E0A               	movlw	10
  4409  0067EA  0100               	movlb	0	; () banked
  4410  0067EC  6FD2               	movwf	oled_putUint8@station_dot& (0+255),b
  4411  0067EE  0E01               	movlw	1
  4412  0067F0  6FD3               	movwf	oled_putUint8@start_page& (0+255),b
  4413  0067F2  519B               	movf	_randomPortNum& (0+255),w,b
  4414  0067F4  ECDC  F026         	call	_oled_putUint8
  4415                           
  4416                           ;MOTEapp.c: 717: oled_putString("L:       T: ",0,2);
  4417  0067F8  0EEB               	movlw	low STR_78
  4418  0067FA  0100               	movlb	0	; () banked
  4419  0067FC  6FCD               	movwf	oled_putString@string& (0+255),b
  4420  0067FE  0E7D               	movlw	high STR_78
  4421  006800  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4422  006802  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  4423  006804  0E02               	movlw	2
  4424  006806  6FD0               	movwf	oled_putString@start_page& (0+255),b
  4425  006808  ECC8  F027         	call	_oled_putString	;wreg free
  4426                           
  4427                           ;MOTEapp.c: 718: oled_putUint16(light,3,2);
  4428  00680C  C07D  F0D2         	movff	_light,oled_putUint16@number
  4429  006810  C07E  F0D3         	movff	_light+1,oled_putUint16@number+1
  4430  006814  0E03               	movlw	3
  4431  006816  0100               	movlb	0	; () banked
  4432  006818  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  4433  00681A  0E02               	movlw	2
  4434  00681C  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  4435  00681E  EC95  F030         	call	_oled_putUint16	;wreg free
  4436                           
  4437                           ;MOTEapp.c: 719: oled_putUint8(temperature,12,2);
  4438  006822  0E0C               	movlw	12
  4439  006824  0100               	movlb	0	; () banked
  4440  006826  6FD2               	movwf	oled_putUint8@station_dot& (0+255),b
  4441  006828  0E02               	movlw	2
  4442  00682A  6FD3               	movwf	oled_putUint8@start_page& (0+255),b
  4443  00682C  5183               	movf	_temperature& (0+255),w,b
  4444  00682E  ECDC  F026         	call	_oled_putUint8
  4445                           
  4446                           ;MOTEapp.c: 720: oled_putString("(NAV)    (SEL) ",0,3);
  4447  006832  0E6F               	movlw	low STR_79
  4448  006834  0100               	movlb	0	; () banked
  4449  006836  6FCD               	movwf	oled_putString@string& (0+255),b
  4450  006838  0E7D               	movlw	high STR_79
  4451  00683A  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4452  00683C  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  4453  00683E  0E03               	movlw	3
  4454  006840  6FD0               	movwf	oled_putString@start_page& (0+255),b
  4455  006842  ECC8  F027         	call	_oled_putString	;wreg free
  4456                           
  4457                           ;MOTEapp.c: 722: moteApp_clearBuffers();
  4458  006846  EC56  F025         	call	_moteApp_clearBuffers	;wreg free
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;MOTEapp.c: 723: randomPortNum = TMR2_ReadTimer();
  4462  00684A  EC1D  F022         	call	_TMR2_ReadTimer	;wreg free
  4463  00684E  6F9B               	movwf	_randomPortNum& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;MOTEapp.c: 725: if (!randomPortNum)
  4467  006850  519B               	movf	_randomPortNum& (0+255),w,b
  4468  006852  E103               	bnz	l9993
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;MOTEapp.c: 726: randomPortNum = 5;
  4472  006854  0E05               	movlw	5
  4473  006856  6F9B               	movwf	_randomPortNum& (0+255),b
  4474  006858  D005               	goto	l9997
  4475  00685A                     l9993:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;MOTEapp.c: 727: else if (randomPortNum > 223)
  4479  00685A  0EDF               	movlw	223
  4480  00685C  659B               	cpfsgt	_randomPortNum& (0+255),b
  4481  00685E  D002               	goto	l9997
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;MOTEapp.c: 728: randomPortNum = randomPortNum - 50;
  4485  006860  0ECE               	movlw	206
  4486  006862  279B               	addwf	_randomPortNum& (0+255),f,b
  4487  006864                     l9997:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;MOTEapp.c: 730: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4491  006864  6BC4               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4492  006866  519B               	movf	_randomPortNum& (0+255),w,b
  4493  006868  EC66  F027         	call	_moteApp_add8bToDataBuffer
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;MOTEapp.c: 731: dataBuffer[3] = 0x20;
  4497  00686C  0E20               	movlw	32
  4498  00686E  6FA4               	movwf	(_dataBuffer+3)& (0+255),b
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;MOTEapp.c: 732: moteApp_add16bToDataBuffer(light, 4);
  4502  006870  C07D  F0CC         	movff	_light,moteApp_add16bToDataBuffer@number
  4503  006874  C07E  F0CD         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4504  006878  0E04               	movlw	4
  4505  00687A  6FCE               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4506  00687C  EC8F  F032         	call	_moteApp_add16bToDataBuffer	;wreg free
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;MOTEapp.c: 733: moteApp_add8bToDataBuffer(temperature, 9);
  4510  006880  0E09               	movlw	9
  4511  006882  6FC4               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4512  006884  5183               	movf	_temperature& (0+255),w,b
  4513  006886  EC66  F027         	call	_moteApp_add8bToDataBuffer
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;MOTEapp.c: 735: sleepTxOccurances = 0;
  4517  00688A  F000               	nop	
  4518                           
  4519                           ;MOTEapp.c: 736: oled_putString("C",15,1);
  4520  00688C  0EAF               	movlw	low (STR_38+47)
  4521  00688E  0100               	movlb	0	; () banked
  4522  006890  6FCD               	movwf	oled_putString@string& (0+255),b
  4523  006892  0E7B               	movlw	high (STR_38+47)
  4524  006894  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  4525  006896  0E0F               	movlw	15
  4526  006898  6FCF               	movwf	oled_putString@station_dot& (0+255),b
  4527  00689A  0E01               	movlw	1
  4528  00689C  6FD0               	movwf	oled_putString@start_page& (0+255),b
  4529  00689E  ECC8  F027         	call	_oled_putString	;wreg free
  4530                           
  4531                           ;MOTEapp.c: 737: sendDataCommand("radio tx ", dataBuffer, 12);
  4532  0068A2  0E0C               	movlw	low STR_81
  4533  0068A4  0100               	movlb	0	; () banked
  4534  0068A6  6FC1               	movwf	sendDataCommand@string& (0+255),b
  4535  0068A8  0E7F               	movlw	high STR_81
  4536  0068AA  6FC2               	movwf	(sendDataCommand@string+1)& (0+255),b
  4537  0068AC  0EA1               	movlw	low _dataBuffer
  4538  0068AE  6FC3               	movwf	sendDataCommand@appData& (0+255),b
  4539  0068B0  0E0C               	movlw	12
  4540  0068B2  6FC4               	movwf	sendDataCommand@dataLength& (0+255),b
  4541  0068B4  ECAE  F02A         	call	_sendDataCommand	;wreg free
  4542                           
  4543                           ;MOTEapp.c: 738: secTicker = 10 - (10 / 3);
  4544  0068B8  0E07               	movlw	7
  4545  0068BA  0100               	movlb	0	; () banked
  4546  0068BC  6F9D               	movwf	_secTicker& (0+255),b
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;MOTEapp.c: 739: runningState = runningUplinkTransmit;
  4550  0068BE  0E08               	movlw	8
  4551  0068C0  D002               	goto	L32
  4552  0068C2                     l10015:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;MOTEapp.c: 741: else
  4556                           ;MOTEapp.c: 742: {
  4557                           ;MOTEapp.c: 743: sleepTicker++;
  4558  0068C2  2B9E               	incf	_sleepTicker& (0+255),f,b
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;MOTEapp.c: 744: runningState = runningSleep;
  4562  0068C4  0E0E               	movlw	14
  4563  0068C6                     L32:
  4564  0068C6  6F9C               	movwf	_runningState& (0+255),b
  4565  0068C8                     l10021:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;MOTEapp.c: 746: }
  4569                           ;MOTEapp.c: 747: }
  4570                           ;MOTEapp.c: 749: moteApp_GoToSleep();
  4571  0068C8  EC2F  F028         	call	_moteApp_GoToSleep	;wreg free
  4572  0068CC                     l475:
  4573                           
  4574                           ; BSR set to: 0
  4575  0068CC  D7FF               	goto	l475
  4576  0068CE                     __end_of_moteRunningProcess:
  4577                           	opt stack 0
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           intcon	equ	0xFF2
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function _sendDataCommand *****************
  4588 ;; Defined at:
  4589 ;;		line 919 in file "../Includes/Board/MOTEapp.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4592 ;;		 -> STR_81(10), 
  4593 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  4594 ;;		 -> dataBuffer(12), 
  4595 ;;  dataLength      1    4[BANK0 ] unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4598 ;;  byteCount       1    6[BANK0 ] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : F/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         0       4       0       0       0       0       0       0       0
  4609 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4611 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        7 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:   13
  4615 ;; This function calls:
  4616 ;;		_EUSART_Write
  4617 ;;		_EndLine
  4618 ;;		_hexToStr
  4619 ;; This function is called by:
  4620 ;;		_moteRunningProcess
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text4
  4625  00555C                     __ptext4:
  4626                           	opt stack 0
  4627  00555C                     _sendDataCommand:
  4628                           	opt stack 15
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;MOTEapp.c: 922: while (*string)
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;incstack = 0
  4635  00555C  D00B               	goto	l9305
  4636  00555E                     l9301:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;MOTEapp.c: 923: {
  4640                           ;MOTEapp.c: 924: EUSART_Write(*string++);
  4641  00555E  C0C1  FFF6         	movff	sendDataCommand@string,tblptrl
  4642  005562  C0C2  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4643  005566                     	if	0	;tblptru may be non-zero
  4644  005566                     	endif
  4645  005566                     	if	0	;tblptru may be non-zero
  4646  005566                     	endif
  4647  005566  0008               	tblrd		*
  4648  005568  50F5               	movf	tablat,w,c
  4649  00556A  EC72  F024         	call	_EUSART_Write
  4650  00556E  0100               	movlb	0	; () banked
  4651  005570  4BC1               	infsnz	sendDataCommand@string& (0+255),f,b
  4652  005572  2BC2               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4653  005574                     l9305:
  4654                           
  4655                           ; BSR set to: 0
  4656  005574  C0C1  FFF6         	movff	sendDataCommand@string,tblptrl
  4657  005578  C0C2  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4658  00557C                     	if	0	;tblptru may be non-zero
  4659  00557C                     	endif
  4660  00557C                     	if	0	;tblptru may be non-zero
  4661  00557C                     	endif
  4662  00557C  0008               	tblrd		*
  4663  00557E  50F5               	movf	tablat,w,c
  4664  005580  E1EE               	bnz	l9301
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;MOTEapp.c: 925: }
  4668                           ;MOTEapp.c: 927: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4669  005582  6BC6               	clrf	sendDataCommand@byteCount& (0+255),b
  4670  005584                     l9311:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;MOTEapp.c: 928: {
  4674                           ;MOTEapp.c: 929: EUSART_Write(appData[byteCount]);
  4675  005584  51C3               	movf	sendDataCommand@appData& (0+255),w,b
  4676  005586  25C6               	addwf	sendDataCommand@byteCount& (0+255),w,b
  4677  005588  6ED9               	movwf	fsr2l,c
  4678  00558A  6ADA               	clrf	fsr2h,c
  4679  00558C  50DF               	movf	indf2,w,c
  4680  00558E  EC72  F024         	call	_EUSART_Write
  4681  005592  0100               	movlb	0	; () banked
  4682  005594  2BC6               	incf	sendDataCommand@byteCount& (0+255),f,b
  4683                           
  4684                           ; BSR set to: 0
  4685  005596  0E02               	movlw	2
  4686  005598  65C6               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4687  00559A  D7F4               	goto	l9311
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;MOTEapp.c: 930: }
  4691                           ;MOTEapp.c: 932: EUSART_Write(appData[3]);
  4692  00559C  51C3               	movf	sendDataCommand@appData& (0+255),w,b
  4693  00559E  6ED9               	movwf	fsr2l,c
  4694  0055A0  6ADA               	clrf	fsr2h,c
  4695  0055A2  0E03               	movlw	3
  4696  0055A4  26D9               	addwf	fsr2l,f,c
  4697  0055A6  50DF               	movf	indf2,w,c
  4698  0055A8  EC72  F024         	call	_EUSART_Write
  4699                           
  4700                           ;MOTEapp.c: 934: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4701  0055AC  0E04               	movlw	4
  4702  0055AE  0100               	movlb	0	; () banked
  4703  0055B0  6FC7               	movwf	sendDataCommand@byteCount_1433& (0+255),b
  4704  0055B2  D019               	goto	l9325
  4705  0055B4                     l9321:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;MOTEapp.c: 935: {
  4709                           ;MOTEapp.c: 936: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4710  0055B4  51C3               	movf	sendDataCommand@appData& (0+255),w,b
  4711  0055B6  25C7               	addwf	sendDataCommand@byteCount_1433& (0+255),w,b
  4712  0055B8  6ED9               	movwf	fsr2l,c
  4713  0055BA  6ADA               	clrf	fsr2h,c
  4714  0055BC  50DF               	movf	indf2,w,c
  4715  0055BE  6FC5               	movwf	??_sendDataCommand& (0+255),b
  4716  0055C0  39C5               	swapf	??_sendDataCommand& (0+255),w,b
  4717  0055C2  0B0F               	andlw	15
  4718  0055C4  EC60  F023         	call	_hexToStr
  4719  0055C8  EC72  F024         	call	_EUSART_Write
  4720                           
  4721                           ;MOTEapp.c: 937: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4722  0055CC  0100               	movlb	0	; () banked
  4723  0055CE  51C3               	movf	sendDataCommand@appData& (0+255),w,b
  4724  0055D0  25C7               	addwf	sendDataCommand@byteCount_1433& (0+255),w,b
  4725  0055D2  6ED9               	movwf	fsr2l,c
  4726  0055D4  6ADA               	clrf	fsr2h,c
  4727  0055D6  50DF               	movf	indf2,w,c
  4728  0055D8  0B0F               	andlw	15
  4729  0055DA  EC60  F023         	call	_hexToStr
  4730  0055DE  EC72  F024         	call	_EUSART_Write
  4731  0055E2  0100               	movlb	0	; () banked
  4732  0055E4  2BC7               	incf	sendDataCommand@byteCount_1433& (0+255),f,b
  4733  0055E6                     l9325:
  4734                           
  4735                           ; BSR set to: 0
  4736  0055E6  51C4               	movf	sendDataCommand@dataLength& (0+255),w,b
  4737  0055E8  5DC7               	subwf	sendDataCommand@byteCount_1433& (0+255),w,b
  4738  0055EA  E3E4               	bnc	l9321
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;MOTEapp.c: 938: }
  4742                           ;MOTEapp.c: 939: EndLine();
  4743  0055EC  EF33  F022         	goto	_EndLine	;wreg free
  4744  0055F0                     __end_of_sendDataCommand:
  4745                           	opt stack 0
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           intcon	equ	0xFF2
  4751                           postinc0	equ	0xFEE
  4752                           wreg	equ	0xFE8
  4753                           indf2	equ	0xFDF
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _hexToStr *****************
  4759 ;; Defined at:
  4760 ;;		line 951 in file "../Includes/Board/MOTEapp.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  character       1    wreg     unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  character       1    0[BANK0 ] unsigned char 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      unsigned char 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0
  4769 ;; Tracked objects:
  4770 ;;		On entry : F/0
  4771 ;;		On exit  : F/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0
  4775 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4777 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4778 ;;Total ram usage:        1 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:   11
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_sendDataCommand
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text5
  4789  0046C0                     __ptext5:
  4790                           	opt stack 0
  4791  0046C0                     _hexToStr:
  4792                           	opt stack 16
  4793                           
  4794                           ;incstack = 0
  4795                           ;hexToStr@character stored from wreg
  4796  0046C0  6FC0               	movwf	hexToStr@character& (0+255),b
  4797                           
  4798                           ;MOTEapp.c: 954: character = character & 0x0F;
  4799  0046C2  0E0F               	movlw	15
  4800  0046C4  0100               	movlb	0	; () banked
  4801  0046C6  17C0               	andwf	hexToStr@character& (0+255),f,b
  4802                           
  4803                           ;MOTEapp.c: 956: if (character < 0x0A)
  4804  0046C8  0E0A               	movlw	10
  4805  0046CA  61C0               	cpfslt	hexToStr@character& (0+255),b
  4806  0046CC  D003               	goto	l8787
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;MOTEapp.c: 957: {
  4810                           ;MOTEapp.c: 958: return character + '0';
  4811  0046CE  51C0               	movf	hexToStr@character& (0+255),w,b
  4812  0046D0  0F30               	addlw	48
  4813  0046D2  0012               	return	
  4814  0046D4                     l8787:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;MOTEapp.c: 960: else if ( (character >= 0x0A) && (character <= 0x0F) )
  4818  0046D4  0E09               	movlw	9
  4819  0046D6  65C0               	cpfsgt	hexToStr@character& (0+255),b
  4820  0046D8  0C00               	retlw	0
  4821                           
  4822                           ; BSR set to: 0
  4823  0046DA  0E10               	movlw	16
  4824  0046DC  61C0               	cpfslt	hexToStr@character& (0+255),b
  4825  0046DE  0C00               	retlw	0
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;MOTEapp.c: 961: {
  4829                           ;MOTEapp.c: 962: return character + '0' + 7;
  4830  0046E0  51C0               	movf	hexToStr@character& (0+255),w,b
  4831  0046E2  0F37               	addlw	55
  4832  0046E4  0012               	return	
  4833  0046E6                     __end_of_hexToStr:
  4834                           	opt stack 0
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           intcon	equ	0xFF2
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           indf2	equ	0xFDF
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _oled_putUint8 *****************
  4848 ;; Defined at:
  4849 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  number          1    wreg     unsigned char 
  4852 ;;  station_dot     1   18[BANK0 ] unsigned char 
  4853 ;;  start_page      1   19[BANK0 ] unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  number          1   20[BANK0 ] unsigned char 
  4856 ;;  numData         6   21[BANK0 ] struct .
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : F/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4866 ;;      Params:         0       2       0       0       0       0       0       0       0
  4867 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4869 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4870 ;;Total ram usage:        9 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:   16
  4873 ;; This function calls:
  4874 ;;		___lbdiv
  4875 ;;		___lbmod
  4876 ;;		_oled_putString
  4877 ;; This function is called by:
  4878 ;;		_moteRunningProcess
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text6
  4883  004DB8                     __ptext6:
  4884                           	opt stack 0
  4885  004DB8                     _oled_putUint8:
  4886                           	opt stack 12
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;incstack = 0
  4890                           ;oled_putUint8@number stored from wreg
  4891  004DB8  6FD4               	movwf	oled_putUint8@number& (0+255),b
  4892                           
  4893                           ;SSD1306oLED.c: 228: display_data_t numData;
  4894                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  4895  004DBA  0E0A               	movlw	10
  4896  004DBC  0100               	movlb	0	; () banked
  4897  004DBE  6FC0               	movwf	___lbmod@divisor& (0+255),b
  4898  004DC0  51D4               	movf	oled_putUint8@number& (0+255),w,b
  4899  004DC2  ECAF  F023         	call	___lbmod
  4900  004DC6  0F30               	addlw	48
  4901  004DC8  6FD7               	movwf	(oled_putUint8@numData+2)& (0+255),b
  4902                           
  4903                           ;SSD1306oLED.c: 230: number /= 10;
  4904  004DCA  0E0A               	movlw	10
  4905  004DCC  6FC0               	movwf	___lbdiv@divisor& (0+255),b
  4906  004DCE  51D4               	movf	oled_putUint8@number& (0+255),w,b
  4907  004DD0  ECA7  F024         	call	___lbdiv
  4908  004DD4  6FD4               	movwf	oled_putUint8@number& (0+255),b
  4909                           
  4910                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  4911  004DD6  0E0A               	movlw	10
  4912  004DD8  6FC0               	movwf	___lbmod@divisor& (0+255),b
  4913  004DDA  51D4               	movf	oled_putUint8@number& (0+255),w,b
  4914  004DDC  ECAF  F023         	call	___lbmod
  4915  004DE0  0F30               	addlw	48
  4916  004DE2  6FD6               	movwf	(oled_putUint8@numData+1)& (0+255),b
  4917                           
  4918                           ;SSD1306oLED.c: 232: number /= 10;
  4919  004DE4  0E0A               	movlw	10
  4920  004DE6  6FC0               	movwf	___lbdiv@divisor& (0+255),b
  4921  004DE8  51D4               	movf	oled_putUint8@number& (0+255),w,b
  4922  004DEA  ECA7  F024         	call	___lbdiv
  4923  004DEE  6FD4               	movwf	oled_putUint8@number& (0+255),b
  4924                           
  4925                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  4926  004DF0  0E0A               	movlw	10
  4927  004DF2  6FC0               	movwf	___lbmod@divisor& (0+255),b
  4928  004DF4  51D4               	movf	oled_putUint8@number& (0+255),w,b
  4929  004DF6  ECAF  F023         	call	___lbmod
  4930  004DFA  0F30               	addlw	48
  4931  004DFC  6FD5               	movwf	oled_putUint8@numData& (0+255),b
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  4935  004DFE  6BD8               	clrf	(oled_putUint8@numData+3)& (0+255),b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  4939  004E00  0ED5               	movlw	low oled_putUint8@numData
  4940  004E02  6FCD               	movwf	oled_putString@string& (0+255),b
  4941  004E04  6BCE               	clrf	(oled_putString@string+1)& (0+255),b
  4942  004E06  C0D2  F0CF         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  4943  004E0A  C0D3  F0D0         	movff	oled_putUint8@start_page,oled_putString@start_page
  4944  004E0E  EFC8  F027         	goto	_oled_putString	;wreg free
  4945  004E12                     __end_of_oled_putUint8:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           intcon	equ	0xFF2
  4952                           postinc0	equ	0xFEE
  4953                           wreg	equ	0xFE8
  4954                           indf2	equ	0xFDF
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8
  4958                           
  4959 ;; *************** function _moteApp_clearBuffers *****************
  4960 ;; Defined at:
  4961 ;;		line 1061 in file "../Includes/Board/MOTEapp.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  counter         1    2[BANK0 ] unsigned char 
  4966 ;;  counter         1    1[BANK0 ] unsigned char 
  4967 ;;  counter         1    0[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : F/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0
  4978 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4980 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:   11
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_moteRunningProcess
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text7
  4992  004AAC                     __ptext7:
  4993                           	opt stack 0
  4994  004AAC                     _moteApp_clearBuffers:
  4995                           	opt stack 17
  4996                           
  4997                           ;MOTEapp.c: 1063: for (uint8_t counter = 0; counter < 3; counter++)
  4998                           
  4999                           ;incstack = 0
  5000  004AAC  0100               	movlb	0	; () banked
  5001  004AAE  6BC0               	clrf	moteApp_clearBuffers@counter& (0+255),b
  5002  004AB0                     l9245:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;MOTEapp.c: 1064: {
  5006                           ;MOTEapp.c: 1065: responsePortNum[counter] = 0;
  5007  004AB0  51C0               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  5008  004AB2  0F76               	addlw	low _responsePortNum
  5009  004AB4  6ED9               	movwf	fsr2l,c
  5010  004AB6  6ADA               	clrf	fsr2h,c
  5011  004AB8  6ADF               	clrf	indf2,c
  5012                           
  5013                           ; BSR set to: 0
  5014  004ABA  2BC0               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  5015                           
  5016                           ; BSR set to: 0
  5017  004ABC  0E02               	movlw	2
  5018  004ABE  65C0               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  5019  004AC0  D7F7               	goto	l9245
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;MOTEapp.c: 1066: }
  5023                           ;MOTEapp.c: 1067: for (uint8_t counter = 0; counter < 34; counter++)
  5024  004AC2  6BC1               	clrf	moteApp_clearBuffers@counter_1500& (0+255),b
  5025  004AC4                     l9255:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;MOTEapp.c: 1068: {
  5029                           ;MOTEapp.c: 1069: responseId[counter] = 0;
  5030  004AC4  0E00               	movlw	low _responseId
  5031  004AC6  25C1               	addwf	moteApp_clearBuffers@counter_1500& (0+255),w,b
  5032  004AC8  6ED9               	movwf	fsr2l,c
  5033  004ACA  6ADA               	clrf	fsr2h,c
  5034  004ACC  0E01               	movlw	high _responseId
  5035  004ACE  22DA               	addwfc	fsr2h,f,c
  5036  004AD0  6ADF               	clrf	indf2,c
  5037                           
  5038                           ; BSR set to: 0
  5039  004AD2  2BC1               	incf	moteApp_clearBuffers@counter_1500& (0+255),f,b
  5040                           
  5041                           ; BSR set to: 0
  5042  004AD4  0E21               	movlw	33
  5043  004AD6  65C1               	cpfsgt	moteApp_clearBuffers@counter_1500& (0+255),b
  5044  004AD8  D7F5               	goto	l9255
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;MOTEapp.c: 1070: }
  5048                           ;MOTEapp.c: 1071: for (uint8_t counter = 0; counter < 10; counter++)
  5049  004ADA  6BC2               	clrf	moteApp_clearBuffers@counter_1501& (0+255),b
  5050  004ADC                     l9265:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;MOTEapp.c: 1072: {
  5054                           ;MOTEapp.c: 1073: responseData[counter] = 0;
  5055  004ADC  0E10               	movlw	low _responseData
  5056  004ADE  25C2               	addwf	moteApp_clearBuffers@counter_1501& (0+255),w,b
  5057  004AE0  6ED9               	movwf	fsr2l,c
  5058  004AE2  6ADA               	clrf	fsr2h,c
  5059  004AE4  0E01               	movlw	high _responseData
  5060  004AE6  22DA               	addwfc	fsr2h,f,c
  5061  004AE8  6ADF               	clrf	indf2,c
  5062                           
  5063                           ; BSR set to: 0
  5064  004AEA  2BC2               	incf	moteApp_clearBuffers@counter_1501& (0+255),f,b
  5065                           
  5066                           ; BSR set to: 0
  5067  004AEC  0E09               	movlw	9
  5068  004AEE  65C2               	cpfsgt	moteApp_clearBuffers@counter_1501& (0+255),b
  5069  004AF0  D7F5               	goto	l9265
  5070  004AF2  0C09               	retlw	9
  5071  004AF4                     __end_of_moteApp_clearBuffers:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           intcon	equ	0xFF2
  5078                           postinc0	equ	0xFEE
  5079                           wreg	equ	0xFE8
  5080                           indf2	equ	0xFDF
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5086 ;; Defined at:
  5087 ;;		line 1077 in file "../Includes/Board/MOTEapp.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  number          1    wreg     unsigned char 
  5090 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  number          1    5[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : F/0
  5099 ;;		On exit  : F/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5102 ;;      Params:         0       1       0       0       0       0       0       0       0
  5103 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5105 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5106 ;;Total ram usage:        2 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:   12
  5109 ;; This function calls:
  5110 ;;		___lbdiv
  5111 ;;		___lbmod
  5112 ;; This function is called by:
  5113 ;;		_moteRunningProcess
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text8
  5118  004ECC                     __ptext8:
  5119                           	opt stack 0
  5120  004ECC                     _moteApp_add8bToDataBuffer:
  5121                           	opt stack 16
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;incstack = 0
  5125                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5126  004ECC  6FC5               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5127                           
  5128                           ;MOTEapp.c: 1079: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5129  004ECE  0100               	movlb	0	; () banked
  5130  004ED0  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5131  004ED2  0FA3               	addlw	low (_dataBuffer+2)
  5132  004ED4  6ED9               	movwf	fsr2l,c
  5133  004ED6  6ADA               	clrf	fsr2h,c
  5134  004ED8  0E0A               	movlw	10
  5135  004EDA  6FC0               	movwf	___lbmod@divisor& (0+255),b
  5136  004EDC  51C5               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5137  004EDE  ECAF  F023         	call	___lbmod
  5138  004EE2  0F30               	addlw	48
  5139  004EE4  6EDF               	movwf	indf2,c
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;MOTEapp.c: 1080: number /= 10;
  5143  004EE6  0E0A               	movlw	10
  5144  004EE8  6FC0               	movwf	___lbdiv@divisor& (0+255),b
  5145  004EEA  51C5               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5146  004EEC  ECA7  F024         	call	___lbdiv
  5147  004EF0  6FC5               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;MOTEapp.c: 1081: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5151  004EF2  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5152  004EF4  0FA2               	addlw	low (_dataBuffer+1)
  5153  004EF6  6ED9               	movwf	fsr2l,c
  5154  004EF8  6ADA               	clrf	fsr2h,c
  5155  004EFA  0E0A               	movlw	10
  5156  004EFC  6FC0               	movwf	___lbmod@divisor& (0+255),b
  5157  004EFE  51C5               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5158  004F00  ECAF  F023         	call	___lbmod
  5159  004F04  0F30               	addlw	48
  5160  004F06  6EDF               	movwf	indf2,c
  5161                           
  5162                           ;MOTEapp.c: 1082: number /= 10;
  5163  004F08  0E0A               	movlw	10
  5164  004F0A  6FC0               	movwf	___lbdiv@divisor& (0+255),b
  5165  004F0C  51C5               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5166  004F0E  ECA7  F024         	call	___lbdiv
  5167  004F12  6FC5               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;MOTEapp.c: 1083: dataBuffer[bufferLocation] = '0' + (number % 10);
  5171  004F14  51C4               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5172  004F16  0FA1               	addlw	low _dataBuffer
  5173  004F18  6ED9               	movwf	fsr2l,c
  5174  004F1A  6ADA               	clrf	fsr2h,c
  5175  004F1C  0E0A               	movlw	10
  5176  004F1E  6FC0               	movwf	___lbmod@divisor& (0+255),b
  5177  004F20  51C5               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5178  004F22  ECAF  F023         	call	___lbmod
  5179  004F26  0F30               	addlw	48
  5180  004F28  6EDF               	movwf	indf2,c
  5181                           
  5182                           ; BSR set to: 0
  5183  004F2A  0012               	return		;funcret
  5184  004F2C                     __end_of_moteApp_add8bToDataBuffer:
  5185                           	opt stack 0
  5186                           tblptru	equ	0xFF8
  5187                           tblptrh	equ	0xFF7
  5188                           tblptrl	equ	0xFF6
  5189                           tablat	equ	0xFF5
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           indf2	equ	0xFDF
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function ___lbmod *****************
  5199 ;; Defined at:
  5200 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  dividend        1    wreg     unsigned char 
  5203 ;;  divisor         1    0[BANK0 ] unsigned char 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  dividend        1    1[BANK0 ] unsigned char 
  5206 ;;  rem             1    3[BANK0 ] unsigned char 
  5207 ;;  counter         1    2[BANK0 ] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : F/0
  5214 ;;		On exit  : F/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         0       1       0       0       0       0       0       0       0
  5218 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        4 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:   11
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_moteApp_add8bToDataBuffer
  5228 ;;		_oled_putUint8
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text9
  5233  00475E                     __ptext9:
  5234                           	opt stack 0
  5235  00475E                     ___lbmod:
  5236                           	opt stack 16
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;incstack = 0
  5240                           ;___lbmod@dividend stored from wreg
  5241  00475E  6FC1               	movwf	___lbmod@dividend& (0+255),b
  5242  004760  0E08               	movlw	8
  5243  004762  0100               	movlb	0	; () banked
  5244  004764  6FC2               	movwf	___lbmod@counter& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247  004766  6BC3               	clrf	___lbmod@rem& (0+255),b
  5248  004768                     l8917:
  5249                           
  5250                           ; BSR set to: 0
  5251  004768  90D8               	bcf	status,0,c
  5252  00476A  35C1               	rlcf	___lbmod@dividend& (0+255),w,b
  5253  00476C  35C3               	rlcf	___lbmod@rem& (0+255),w,b
  5254  00476E  6FC3               	movwf	___lbmod@rem& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257  004770  90D8               	bcf	status,0,c
  5258  004772  37C1               	rlcf	___lbmod@dividend& (0+255),f,b
  5259                           
  5260                           ; BSR set to: 0
  5261  004774  51C0               	movf	___lbmod@divisor& (0+255),w,b
  5262  004776  5DC3               	subwf	___lbmod@rem& (0+255),w,b
  5263  004778  E302               	bnc	l8925
  5264                           
  5265                           ; BSR set to: 0
  5266  00477A  51C0               	movf	___lbmod@divisor& (0+255),w,b
  5267  00477C  5FC3               	subwf	___lbmod@rem& (0+255),f,b
  5268  00477E                     l8925:
  5269                           
  5270                           ; BSR set to: 0
  5271  00477E  2FC2               	decfsz	___lbmod@counter& (0+255),f,b
  5272  004780  D7F3               	goto	l8917
  5273                           
  5274                           ; BSR set to: 0
  5275  004782  51C3               	movf	___lbmod@rem& (0+255),w,b
  5276                           
  5277                           ; BSR set to: 0
  5278  004784  0012               	return		;funcret
  5279  004786                     __end_of___lbmod:
  5280                           	opt stack 0
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           intcon	equ	0xFF2
  5286                           postinc0	equ	0xFEE
  5287                           wreg	equ	0xFE8
  5288                           indf2	equ	0xFDF
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function ___lbdiv *****************
  5294 ;; Defined at:
  5295 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  dividend        1    wreg     unsigned char 
  5298 ;;  divisor         1    0[BANK0 ] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  dividend        1    1[BANK0 ] unsigned char 
  5301 ;;  quotient        1    3[BANK0 ] unsigned char 
  5302 ;;  counter         1    2[BANK0 ] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      unsigned char 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : F/0
  5309 ;;		On exit  : F/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5312 ;;      Params:         0       1       0       0       0       0       0       0       0
  5313 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5315 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5316 ;;Total ram usage:        4 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:   11
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_moteApp_add8bToDataBuffer
  5323 ;;		_oled_putUint8
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text10
  5328  00494E                     __ptext10:
  5329                           	opt stack 0
  5330  00494E                     ___lbdiv:
  5331                           	opt stack 16
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;incstack = 0
  5335                           ;___lbdiv@dividend stored from wreg
  5336  00494E  6FC1               	movwf	___lbdiv@dividend& (0+255),b
  5337  004950  0100               	movlb	0	; () banked
  5338  004952  6BC3               	clrf	___lbdiv@quotient& (0+255),b
  5339                           
  5340                           ; BSR set to: 0
  5341  004954  51C0               	movf	___lbdiv@divisor& (0+255),w,b
  5342  004956  E014               	bz	l8909
  5343                           
  5344                           ; BSR set to: 0
  5345  004958  0E01               	movlw	1
  5346  00495A  6FC2               	movwf	___lbdiv@counter& (0+255),b
  5347  00495C  D003               	goto	l8897
  5348  00495E                     l8893:
  5349                           
  5350                           ; BSR set to: 0
  5351  00495E  90D8               	bcf	status,0,c
  5352  004960  37C0               	rlcf	___lbdiv@divisor& (0+255),f,b
  5353                           
  5354                           ; BSR set to: 0
  5355  004962  2BC2               	incf	___lbdiv@counter& (0+255),f,b
  5356  004964                     l8897:
  5357                           
  5358                           ; BSR set to: 0
  5359  004964  AFC0               	btfss	___lbdiv@divisor& (0+255),7,b
  5360  004966  D7FB               	goto	l8893
  5361  004968                     l8899:
  5362                           
  5363                           ; BSR set to: 0
  5364  004968  90D8               	bcf	status,0,c
  5365  00496A  37C3               	rlcf	___lbdiv@quotient& (0+255),f,b
  5366  00496C  51C0               	movf	___lbdiv@divisor& (0+255),w,b
  5367  00496E  5DC1               	subwf	___lbdiv@dividend& (0+255),w,b
  5368  004970  E303               	bnc	l8905
  5369                           
  5370                           ; BSR set to: 0
  5371  004972  51C0               	movf	___lbdiv@divisor& (0+255),w,b
  5372  004974  5FC1               	subwf	___lbdiv@dividend& (0+255),f,b
  5373                           
  5374                           ; BSR set to: 0
  5375  004976  81C3               	bsf	___lbdiv@quotient& (0+255),0,b
  5376  004978                     l8905:
  5377                           
  5378                           ; BSR set to: 0
  5379  004978  90D8               	bcf	status,0,c
  5380  00497A  33C0               	rrcf	___lbdiv@divisor& (0+255),f,b
  5381                           
  5382                           ; BSR set to: 0
  5383  00497C  2FC2               	decfsz	___lbdiv@counter& (0+255),f,b
  5384  00497E  D7F4               	goto	l8899
  5385  004980                     l8909:
  5386                           
  5387                           ; BSR set to: 0
  5388  004980  51C3               	movf	___lbdiv@quotient& (0+255),w,b
  5389                           
  5390                           ; BSR set to: 0
  5391  004982  0012               	return		;funcret
  5392  004984                     __end_of___lbdiv:
  5393                           	opt stack 0
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           indf2	equ	0xFDF
  5402                           fsr2h	equ	0xFDA
  5403                           fsr2l	equ	0xFD9
  5404                           status	equ	0xFD8
  5405                           
  5406 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5407 ;; Defined at:
  5408 ;;		line 1086 in file "../Includes/Board/MOTEapp.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  number          2   12[BANK0 ] unsigned int 
  5411 ;;  bufferLocati    1   14[BANK0 ] unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : F/0
  5420 ;;		On exit  : F/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5423 ;;      Params:         0       3       0       0       0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5426 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5427 ;;Total ram usage:        3 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:   12
  5430 ;; This function calls:
  5431 ;;		___lwdiv
  5432 ;;		___lwmod
  5433 ;; This function is called by:
  5434 ;;		_moteRunningProcess
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text11
  5439  00651E                     __ptext11:
  5440                           	opt stack 0
  5441  00651E                     _moteApp_add16bToDataBuffer:
  5442                           	opt stack 16
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;MOTEapp.c: 1088: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;incstack = 0
  5449  00651E  51CE               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5450  006520  0FA5               	addlw	low (_dataBuffer+4)
  5451  006522  6ED9               	movwf	fsr2l,c
  5452  006524  6ADA               	clrf	fsr2h,c
  5453  006526  C0CC  F0C7         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5454  00652A  C0CD  F0C8         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5455  00652E  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  5456  006530  0E0A               	movlw	10
  5457  006532  6FC9               	movwf	___lwmod@divisor& (0+255),b
  5458  006534  EC37  F025         	call	___lwmod	;wreg free
  5459  006538  51C7               	movf	?___lwmod& (0+255),w,b
  5460  00653A  0F30               	addlw	48
  5461  00653C  6EDF               	movwf	indf2,c
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;MOTEapp.c: 1089: number /= 10;
  5465  00653E  C0CC  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5466  006542  C0CD  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5467  006546  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5468  006548  0E0A               	movlw	10
  5469  00654A  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5470  00654C  EC9F  F025         	call	___lwdiv	;wreg free
  5471  006550  C0C0  F0CC         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5472  006554  C0C1  F0CD         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;MOTEapp.c: 1090: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5476  006558  51CE               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5477  00655A  0FA4               	addlw	low (_dataBuffer+3)
  5478  00655C  6ED9               	movwf	fsr2l,c
  5479  00655E  6ADA               	clrf	fsr2h,c
  5480  006560  C0CC  F0C7         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5481  006564  C0CD  F0C8         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5482  006568  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  5483  00656A  0E0A               	movlw	10
  5484  00656C  6FC9               	movwf	___lwmod@divisor& (0+255),b
  5485  00656E  EC37  F025         	call	___lwmod	;wreg free
  5486  006572  51C7               	movf	?___lwmod& (0+255),w,b
  5487  006574  0F30               	addlw	48
  5488  006576  6EDF               	movwf	indf2,c
  5489                           
  5490                           ;MOTEapp.c: 1091: number /= 10;
  5491  006578  C0CC  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5492  00657C  C0CD  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5493  006580  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5494  006582  0E0A               	movlw	10
  5495  006584  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5496  006586  EC9F  F025         	call	___lwdiv	;wreg free
  5497  00658A  C0C0  F0CC         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5498  00658E  C0C1  F0CD         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;MOTEapp.c: 1092: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5502  006592  51CE               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5503  006594  0FA3               	addlw	low (_dataBuffer+2)
  5504  006596  6ED9               	movwf	fsr2l,c
  5505  006598  6ADA               	clrf	fsr2h,c
  5506  00659A  C0CC  F0C7         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5507  00659E  C0CD  F0C8         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5508  0065A2  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  5509  0065A4  0E0A               	movlw	10
  5510  0065A6  6FC9               	movwf	___lwmod@divisor& (0+255),b
  5511  0065A8  EC37  F025         	call	___lwmod	;wreg free
  5512  0065AC  51C7               	movf	?___lwmod& (0+255),w,b
  5513  0065AE  0F30               	addlw	48
  5514  0065B0  6EDF               	movwf	indf2,c
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;MOTEapp.c: 1093: number /= 10;
  5518  0065B2  C0CC  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5519  0065B6  C0CD  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5520  0065BA  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5521  0065BC  0E0A               	movlw	10
  5522  0065BE  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5523  0065C0  EC9F  F025         	call	___lwdiv	;wreg free
  5524  0065C4  C0C0  F0CC         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5525  0065C8  C0C1  F0CD         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5526                           
  5527                           ;MOTEapp.c: 1094: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5528  0065CC  51CE               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5529  0065CE  0FA2               	addlw	low (_dataBuffer+1)
  5530  0065D0  6ED9               	movwf	fsr2l,c
  5531  0065D2  6ADA               	clrf	fsr2h,c
  5532  0065D4  C0CC  F0C7         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5533  0065D8  C0CD  F0C8         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5534  0065DC  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  5535  0065DE  0E0A               	movlw	10
  5536  0065E0  6FC9               	movwf	___lwmod@divisor& (0+255),b
  5537  0065E2  EC37  F025         	call	___lwmod	;wreg free
  5538  0065E6  51C7               	movf	?___lwmod& (0+255),w,b
  5539  0065E8  0F30               	addlw	48
  5540  0065EA  6EDF               	movwf	indf2,c
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;MOTEapp.c: 1095: number /= 10;
  5544  0065EC  C0CC  F0C0         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5545  0065F0  C0CD  F0C1         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5546  0065F4  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5547  0065F6  0E0A               	movlw	10
  5548  0065F8  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  5549  0065FA  EC9F  F025         	call	___lwdiv	;wreg free
  5550  0065FE  C0C0  F0CC         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5551  006602  C0C1  F0CD         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;MOTEapp.c: 1096: dataBuffer[bufferLocation] = '0' + (number % 10);
  5555  006606  51CE               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5556  006608  0FA1               	addlw	low _dataBuffer
  5557  00660A  6ED9               	movwf	fsr2l,c
  5558  00660C  6ADA               	clrf	fsr2h,c
  5559  00660E  C0CC  F0C7         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5560  006612  C0CD  F0C8         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5561  006616  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  5562  006618  0E0A               	movlw	10
  5563  00661A  6FC9               	movwf	___lwmod@divisor& (0+255),b
  5564  00661C  EC37  F025         	call	___lwmod	;wreg free
  5565  006620  51C7               	movf	?___lwmod& (0+255),w,b
  5566  006622  0F30               	addlw	48
  5567  006624  6EDF               	movwf	indf2,c
  5568                           
  5569                           ; BSR set to: 0
  5570  006626  0012               	return		;funcret
  5571  006628                     __end_of_moteApp_add16bToDataBuffer:
  5572                           	opt stack 0
  5573                           tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           indf2	equ	0xFDF
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _moteApp_GoToSleep *****************
  5586 ;; Defined at:
  5587 ;;		line 970 in file "../Includes/Board/MOTEapp.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  status          1    0        unsigned char 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      unsigned char 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : F/0
  5598 ;;		On exit  : F/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0
  5602 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5604 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   18
  5608 ;; This function calls:
  5609 ;;		_EUSART_FlushBuffer
  5610 ;;		_EUSART_Initialize
  5611 ;;		_PIN_MANAGER_Initialize
  5612 ;;		_modemResync
  5613 ;;		_modemSleep
  5614 ;;		_oled_displayOff
  5615 ;;		_oled_init
  5616 ;; This function is called by:
  5617 ;;		_moteRunningProcess
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text12
  5622  00505E                     __ptext12:
  5623                           	opt stack 0
  5624  00505E                     _moteApp_GoToSleep:
  5625                           	opt stack 10
  5626  00505E                     l561:
  5627                           
  5628                           ; BSR set to: 0
  5629  00505E  A282               	btfss	3970,1,c	;volatile
  5630  005060  D7FE               	goto	l561
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;MOTEapp.c: 974: modemSleep();
  5634  005062  ECC0  F022         	call	_modemSleep	;wreg free
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;MOTEapp.c: 975: oled_displayOff(1);
  5638  005066  0E01               	movlw	1
  5639  005068  EC60  F022         	call	_oled_displayOff
  5640                           
  5641                           ;MOTEapp.c: 976: ADCON0bits.ADON = 0;
  5642  00506C  90C2               	bcf	4034,0,c	;volatile
  5643                           
  5644                           ;MOTEapp.c: 977: INTCONbits.GIE = 0;
  5645  00506E  9EF2               	bcf	intcon,7,c	;volatile
  5646                           
  5647                           ;MOTEapp.c: 978: GIE = 0;
  5648  005070  9EF2               	bcf	intcon,7,c	;volatile
  5649                           
  5650                           ;MOTEapp.c: 979: PEIE = 0;
  5651  005072  9CF2               	bcf	intcon,6,c	;volatile
  5652                           
  5653                           ;MOTEapp.c: 981: ANSELAbits.ANSA0 = 1;
  5654  005074  010F               	movlb	15	; () banked
  5655  005076  815B               	bsf	91,0,b	;volatile
  5656                           
  5657                           ; BSR set to: 15
  5658                           ;MOTEapp.c: 983: PIE2bits.C1IE = 1;
  5659  005078  8CA0               	bsf	4000,6,c	;volatile
  5660                           
  5661                           ; BSR set to: 15
  5662                           ;MOTEapp.c: 984: IOCCbits.IOCC0 = 1;
  5663  00507A  8087               	bsf	3975,0,c	;volatile
  5664                           
  5665                           ; BSR set to: 15
  5666                           ;MOTEapp.c: 985: IOCCbits.IOCC1 = 1;
  5667  00507C  8287               	bsf	3975,1,c	;volatile
  5668                           
  5669                           ; BSR set to: 15
  5670                           ;MOTEapp.c: 986: IOCCbits.IOCC2 = 1;
  5671  00507E  8487               	bsf	3975,2,c	;volatile
  5672                           
  5673                           ; BSR set to: 15
  5674                           ;MOTEapp.c: 987: INTCONbits.IOCIE = 1;
  5675  005080  86F2               	bsf	intcon,3,c	;volatile
  5676                           
  5677                           ; BSR set to: 15
  5678  005082  5082               	movf	3970,w,c	;volatile
  5679                           
  5680                           ; BSR set to: 15
  5681  005084  5082               	movf	3970,w,c	;volatile
  5682                           
  5683                           ; BSR set to: 15
  5684  005086  5082               	movf	3970,w,c	;volatile
  5685                           
  5686                           ; BSR set to: 15
  5687                           ;MOTEapp.c: 995: }
  5688                           ;MOTEapp.c: 996: INTCONbits.IOCIF = 0;
  5689  005088  90F2               	bcf	intcon,0,c	;volatile
  5690                           
  5691                           ; BSR set to: 15
  5692                           ;MOTEapp.c: 997: PIR2bits.C1IF = 0;
  5693  00508A  9CA1               	bcf	4001,6,c	;volatile
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;MOTEapp.c: 998: __nop();
  5697  00508C  F000               	nop	
  5698  00508E  0003               	sleep		;# 
  5699                           
  5700                           ;MOTEapp.c: 1000: __nop();
  5701  005090  F000               	nop	
  5702                           
  5703                           ;MOTEapp.c: 1003: EUSART_FlushBuffer();
  5704  005092  EC45  F024         	call	_EUSART_FlushBuffer	;wreg free
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;MOTEapp.c: 1005: INTCONbits.IOCIE = 0;
  5708  005096  96F2               	bcf	intcon,3,c	;volatile
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;MOTEapp.c: 1006: IOCCbits.IOCC0 = 0;
  5712  005098  9087               	bcf	3975,0,c	;volatile
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;MOTEapp.c: 1007: IOCCbits.IOCC1 = 0;
  5716  00509A  9287               	bcf	3975,1,c	;volatile
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;MOTEapp.c: 1008: IOCCbits.IOCC2 = 0;
  5720  00509C  9487               	bcf	3975,2,c	;volatile
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;MOTEapp.c: 1009: PIE2bits.C1IE = 0;
  5724  00509E  9CA0               	bcf	4000,6,c	;volatile
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;MOTEapp.c: 1010: GIE = 1;
  5728  0050A0  8EF2               	bsf	intcon,7,c	;volatile
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;MOTEapp.c: 1012: PIN_MANAGER_Initialize();
  5732  0050A2  EC0F  F026         	call	_PIN_MANAGER_Initialize	;wreg free
  5733                           
  5734                           ; BSR set to: 15
  5735                           ;MOTEapp.c: 1013: EUSART_Initialize();
  5736  0050A6  EC03  F024         	call	_EUSART_Initialize	;wreg free
  5737                           
  5738                           ;MOTEapp.c: 1015: if (INTCONbits.IOCIF)
  5739  0050AA  A0F2               	btfss	intcon,0,c	;volatile
  5740  0050AC  D002               	goto	l9393
  5741                           
  5742                           ;MOTEapp.c: 1016: {
  5743                           ;MOTEapp.c: 1017: INTCONbits.IOCIF = 0;
  5744  0050AE  90F2               	bcf	intcon,0,c	;volatile
  5745                           
  5746                           ;MOTEapp.c: 1019: }
  5747  0050B0  D003               	goto	l9397
  5748  0050B2                     l9393:
  5749                           
  5750                           ;MOTEapp.c: 1025: else
  5751                           ;MOTEapp.c: 1026: {
  5752                           ;MOTEapp.c: 1027: secTicker = 10;
  5753  0050B2  0E0A               	movlw	10
  5754  0050B4  0100               	movlb	0	; () banked
  5755  0050B6  6F9D               	movwf	_secTicker& (0+255),b
  5756  0050B8                     l9397:
  5757                           
  5758                           ;MOTEapp.c: 1029: }
  5759                           ;MOTEapp.c: 1030: ANSELAbits.ANSA0 = 0;
  5760  0050B8  010F               	movlb	15	; () banked
  5761  0050BA  915B               	bcf	91,0,b	;volatile
  5762                           
  5763                           ; BSR set to: 15
  5764                           ;MOTEapp.c: 1031: oled_displayOff(0);
  5765  0050BC  0E00               	movlw	0
  5766  0050BE  EC60  F022         	call	_oled_displayOff
  5767                           
  5768                           ;MOTEapp.c: 1032: oled_init();
  5769  0050C2  EC3C  F023         	call	_oled_init	;wreg free
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;MOTEapp.c: 1034: modemResync();
  5773  0050C6  EF96  F027         	goto	_modemResync	;wreg free
  5774  0050CA                     __end_of_moteApp_GoToSleep:
  5775                           	opt stack 0
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           intcon	equ	0xFF2
  5781                           postinc0	equ	0xFEE
  5782                           wreg	equ	0xFE8
  5783                           indf2	equ	0xFDF
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function _oled_init *****************
  5789 ;; Defined at:
  5790 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : F/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:   17
  5811 ;; This function calls:
  5812 ;;		_oled_clear
  5813 ;;		_oled_devInit
  5814 ;;		_oled_setDisplay
  5815 ;;		_oled_setFont
  5816 ;; This function is called by:
  5817 ;;		_main
  5818 ;;		_moteApp_GoToSleep
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text13
  5823  004678                     __ptext13:
  5824                           	opt stack 0
  5825  004678                     _oled_init:
  5826                           	opt stack 13
  5827                           
  5828                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;incstack = 0
  5832  004678  9493               	bcf	3987,2,c	;volatile
  5833                           
  5834                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
  5835  00467A  9893               	bcf	3987,4,c	;volatile
  5836                           
  5837                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
  5838  00467C  9A93               	bcf	3987,5,c	;volatile
  5839                           
  5840                           ;SSD1306oLED.c: 315: oled_devInit();
  5841  00467E  EC48  F02F         	call	_oled_devInit	;wreg free
  5842                           
  5843                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
  5844  004682  0E00               	movlw	0
  5845  004684  EC86  F022         	call	_oled_setDisplay
  5846                           
  5847                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
  5848  004688  0EBF               	movlw	low _OledFont0
  5849  00468A  0100               	movlb	0	; () banked
  5850  00468C  6FC0               	movwf	oled_setFont@font& (0+255),b
  5851  00468E  0E77               	movlw	high _OledFont0
  5852  004690  6FC1               	movwf	(oled_setFont@font+1)& (0+255),b
  5853  004692  EC69  F022         	call	_oled_setFont	;wreg free
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;SSD1306oLED.c: 319: oled_clear();
  5857  004696  EFA6  F022         	goto	_oled_clear	;wreg free
  5858  00469A                     __end_of_oled_init:
  5859                           	opt stack 0
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           indf2	equ	0xFDF
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _oled_setFont *****************
  5873 ;; Defined at:
  5874 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  font            2    0[BANK0 ] PTR const unsigned char 
  5877 ;;		 -> OledFont0(768), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0
  5884 ;; Tracked objects:
  5885 ;;		On entry : F/0
  5886 ;;		On exit  : F/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5889 ;;      Params:         0       2       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5892 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5893 ;;Total ram usage:        2 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   11
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_oled_init
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text14
  5904  0044D2                     __ptext14:
  5905                           	opt stack 0
  5906  0044D2                     _oled_setFont:
  5907                           	opt stack 18
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;SSD1306oLED.c: 220: if(font!=0)
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;incstack = 0
  5914  0044D2  51C0               	movf	oled_setFont@font& (0+255),w,b
  5915  0044D4  11C1               	iorwf	(oled_setFont@font+1)& (0+255),w,b
  5916  0044D6  B4D8               	btfsc	status,2,c
  5917  0044D8  0012               	return	
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;SSD1306oLED.c: 221: {
  5921                           ;SSD1306oLED.c: 222: selectedFont=font;
  5922  0044DA  C0C0  F0FB         	movff	oled_setFont@font,_selectedFont
  5923  0044DE  C0C1  F0FC         	movff	oled_setFont@font+1,_selectedFont+1
  5924                           
  5925                           ; BSR set to: 0
  5926  0044E2  0012               	return		;funcret
  5927  0044E4                     __end_of_oled_setFont:
  5928                           	opt stack 0
  5929                           tblptru	equ	0xFF8
  5930                           tblptrh	equ	0xFF7
  5931                           tblptrl	equ	0xFF6
  5932                           tablat	equ	0xFF5
  5933                           intcon	equ	0xFF2
  5934                           postinc0	equ	0xFEE
  5935                           wreg	equ	0xFE8
  5936                           indf2	equ	0xFDF
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _oled_setDisplay *****************
  5942 ;; Defined at:
  5943 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  displayType     1    wreg     enum E6298
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  displayType     1    2[BANK0 ] enum E6298
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0
  5958 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5960 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5961 ;;Total ram usage:        1 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:   13
  5964 ;; This function calls:
  5965 ;;		_oled_writeCommand
  5966 ;; This function is called by:
  5967 ;;		_oled_init
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text15
  5972  00450C                     __ptext15:
  5973                           	opt stack 0
  5974  00450C                     _oled_setDisplay:
  5975                           	opt stack 16
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;incstack = 0
  5979                           ;oled_setDisplay@displayType stored from wreg
  5980  00450C  0100               	movlb	0	; () banked
  5981  00450E  6FC2               	movwf	oled_setDisplay@displayType& (0+255),b
  5982                           
  5983                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
  5984  004510  0EA6               	movlw	166
  5985  004512  27C2               	addwf	oled_setDisplay@displayType& (0+255),f,b
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
  5989  004514  988A               	bcf	3978,4,c	;volatile
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
  5993  004516  51C2               	movf	oled_setDisplay@displayType& (0+255),w,b
  5994  004518  EC27  F022         	call	_oled_writeCommand
  5995                           
  5996                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
  5997  00451C  888A               	bsf	3978,4,c	;volatile
  5998  00451E  0012               	return		;funcret
  5999  004520                     __end_of_oled_setDisplay:
  6000                           	opt stack 0
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           intcon	equ	0xFF2
  6006                           postinc0	equ	0xFEE
  6007                           wreg	equ	0xFE8
  6008                           indf2	equ	0xFDF
  6009                           fsr2h	equ	0xFDA
  6010                           fsr2l	equ	0xFD9
  6011                           status	equ	0xFD8
  6012                           
  6013 ;; *************** function _oled_devInit *****************
  6014 ;; Defined at:
  6015 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6031 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6032 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6033 ;;Total ram usage:        1 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:   13
  6036 ;; This function calls:
  6037 ;;		_oled_writeCommand
  6038 ;; This function is called by:
  6039 ;;		_oled_init
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text16
  6044  005E90                     __ptext16:
  6045                           	opt stack 0
  6046  005E90                     _oled_devInit:
  6047                           	opt stack 16
  6048                           
  6049                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
  6050                           
  6051                           ;incstack = 0
  6052  005E90  888A               	bsf	3978,4,c	;volatile
  6053                           
  6054                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
  6055  005E92  8A8A               	bsf	3978,5,c	;volatile
  6056                           
  6057                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
  6058  005E94  848A               	bsf	3978,2,c	;volatile
  6059                           
  6060                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
  6061  005E96  0E50               	movlw	80
  6062  005E98                     u8577:
  6063  005E98  2EE8               	decfsz	wreg,f,c
  6064  005E9A  D7FE               	goto	u8577
  6065                           
  6066                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
  6067  005E9C  948A               	bcf	3978,2,c	;volatile
  6068                           
  6069                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6070  005E9E  0E04               	movlw	4
  6071  005EA0  0100               	movlb	0	; () banked
  6072  005EA2  6FC2               	movwf	??_oled_devInit& (0+255),b
  6073  005EA4  0E1C               	movlw	28
  6074  005EA6                     u8587:
  6075  005EA6  2EE8               	decfsz	wreg,f,c
  6076  005EA8  D7FE               	goto	u8587
  6077  005EAA  2FC2               	decfsz	??_oled_devInit& (0+255),f,b
  6078  005EAC  D7FC               	goto	u8587
  6079  005EAE  D000               	nop2	
  6080                           
  6081                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
  6082  005EB0  848A               	bsf	3978,2,c	;volatile
  6083                           
  6084                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
  6085  005EB2  988A               	bcf	3978,4,c	;volatile
  6086                           
  6087                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6088  005EB4  0E04               	movlw	4
  6089  005EB6  0100               	movlb	0	; () banked
  6090  005EB8  6FC2               	movwf	??_oled_devInit& (0+255),b
  6091  005EBA  0E1C               	movlw	28
  6092  005EBC                     u8597:
  6093  005EBC  2EE8               	decfsz	wreg,f,c
  6094  005EBE  D7FE               	goto	u8597
  6095  005EC0  2FC2               	decfsz	??_oled_devInit& (0+255),f,b
  6096  005EC2  D7FC               	goto	u8597
  6097  005EC4  D000               	nop2	
  6098                           
  6099                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
  6100  005EC6  9A8A               	bcf	3978,5,c	;volatile
  6101                           
  6102                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6103  005EC8  0E04               	movlw	4
  6104  005ECA  0100               	movlb	0	; () banked
  6105  005ECC  6FC2               	movwf	??_oled_devInit& (0+255),b
  6106  005ECE  0E1C               	movlw	28
  6107  005ED0                     u8607:
  6108  005ED0  2EE8               	decfsz	wreg,f,c
  6109  005ED2  D7FE               	goto	u8607
  6110  005ED4  2FC2               	decfsz	??_oled_devInit& (0+255),f,b
  6111  005ED6  D7FC               	goto	u8607
  6112  005ED8  D000               	nop2	
  6113                           
  6114                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
  6115  005EDA  0EAE               	movlw	174
  6116  005EDC  EC27  F022         	call	_oled_writeCommand
  6117                           
  6118                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
  6119  005EE0  0ED5               	movlw	213
  6120  005EE2  EC27  F022         	call	_oled_writeCommand
  6121                           
  6122                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
  6123  005EE6  0E80               	movlw	128
  6124  005EE8  EC27  F022         	call	_oled_writeCommand
  6125                           
  6126                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
  6127  005EEC  0EA8               	movlw	168
  6128  005EEE  EC27  F022         	call	_oled_writeCommand
  6129                           
  6130                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
  6131  005EF2  0E1F               	movlw	31
  6132  005EF4  EC27  F022         	call	_oled_writeCommand
  6133                           
  6134                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
  6135  005EF8  0ED3               	movlw	211
  6136  005EFA  EC27  F022         	call	_oled_writeCommand
  6137                           
  6138                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
  6139  005EFE  0E00               	movlw	0
  6140  005F00  EC27  F022         	call	_oled_writeCommand
  6141                           
  6142                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
  6143  005F04  0E8D               	movlw	141
  6144  005F06  EC27  F022         	call	_oled_writeCommand
  6145                           
  6146                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
  6147  005F0A  0E14               	movlw	20
  6148  005F0C  EC27  F022         	call	_oled_writeCommand
  6149                           
  6150                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
  6151  005F10  0E40               	movlw	64
  6152  005F12  EC27  F022         	call	_oled_writeCommand
  6153                           
  6154                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
  6155  005F16  0EA6               	movlw	166
  6156  005F18  EC27  F022         	call	_oled_writeCommand
  6157                           
  6158                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
  6159  005F1C  0EA4               	movlw	164
  6160  005F1E  EC27  F022         	call	_oled_writeCommand
  6161                           
  6162                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
  6163  005F22  0EA0               	movlw	160
  6164  005F24  EC27  F022         	call	_oled_writeCommand
  6165                           
  6166                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
  6167  005F28  0EC0               	movlw	192
  6168  005F2A  EC27  F022         	call	_oled_writeCommand
  6169                           
  6170                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
  6171  005F2E  0EDA               	movlw	218
  6172  005F30  EC27  F022         	call	_oled_writeCommand
  6173                           
  6174                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
  6175  005F34  0E42               	movlw	66
  6176  005F36  EC27  F022         	call	_oled_writeCommand
  6177                           
  6178                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
  6179  005F3A  0E81               	movlw	129
  6180  005F3C  EC27  F022         	call	_oled_writeCommand
  6181                           
  6182                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
  6183  005F40  0E7F               	movlw	127
  6184  005F42  EC27  F022         	call	_oled_writeCommand
  6185                           
  6186                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
  6187  005F46  0ED9               	movlw	217
  6188  005F48  EC27  F022         	call	_oled_writeCommand
  6189                           
  6190                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
  6191  005F4C  0EF1               	movlw	241
  6192  005F4E  EC27  F022         	call	_oled_writeCommand
  6193                           
  6194                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
  6195  005F52  0EDB               	movlw	219
  6196  005F54  EC27  F022         	call	_oled_writeCommand
  6197                           
  6198                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
  6199  005F58  0E40               	movlw	64
  6200  005F5A  EC27  F022         	call	_oled_writeCommand
  6201                           
  6202                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
  6203  005F5E  0EAF               	movlw	175
  6204  005F60  EC27  F022         	call	_oled_writeCommand
  6205                           
  6206                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
  6207  005F64  888A               	bsf	3978,4,c	;volatile
  6208  005F66  0012               	return		;funcret
  6209  005F68                     __end_of_oled_devInit:
  6210                           	opt stack 0
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf2	equ	0xFDF
  6219                           fsr2h	equ	0xFDA
  6220                           fsr2l	equ	0xFD9
  6221                           status	equ	0xFD8
  6222                           
  6223 ;; *************** function _oled_displayOff *****************
  6224 ;; Defined at:
  6225 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  state           1    wreg     unsigned char 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  state           1    2[BANK0 ] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0
  6240 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6242 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6243 ;;Total ram usage:        1 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:   13
  6246 ;; This function calls:
  6247 ;;		_oled_writeCommand
  6248 ;; This function is called by:
  6249 ;;		_moteApp_GoToSleep
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text17
  6254  0044C0                     __ptext17:
  6255                           	opt stack 0
  6256  0044C0                     _oled_displayOff:
  6257                           	opt stack 14
  6258                           
  6259                           ;incstack = 0
  6260                           ;oled_displayOff@state stored from wreg
  6261  0044C0  0100               	movlb	0	; () banked
  6262  0044C2  6FC2               	movwf	oled_displayOff@state& (0+255),b
  6263                           
  6264                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6265  0044C4  988A               	bcf	3978,4,c	;volatile
  6266                           
  6267                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6268  0044C6  51C2               	movf	oled_displayOff@state& (0+255),w,b
  6269  0044C8  08AF               	sublw	175
  6270  0044CA  EC27  F022         	call	_oled_writeCommand
  6271                           
  6272                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6273  0044CE  888A               	bsf	3978,4,c	;volatile
  6274  0044D0  0012               	return		;funcret
  6275  0044D2                     __end_of_oled_displayOff:
  6276                           	opt stack 0
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           intcon	equ	0xFF2
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           indf2	equ	0xFDF
  6285                           fsr2h	equ	0xFDA
  6286                           fsr2l	equ	0xFD9
  6287                           status	equ	0xFD8
  6288                           
  6289 ;; *************** function _modemSleep *****************
  6290 ;; Defined at:
  6291 ;;		line 163 in file "../Includes/Board/MOTEapp.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : F/0
  6302 ;;		On exit  : F/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6305 ;;      Params:         0       0       0       0       0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:   14
  6312 ;; This function calls:
  6313 ;;		_moteApp_delayms
  6314 ;;		_sendCommand
  6315 ;; This function is called by:
  6316 ;;		_moteApp_GoToSleep
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text18
  6321  004580                     __ptext18:
  6322                           	opt stack 0
  6323  004580                     _modemSleep:
  6324                           	opt stack 13
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;MOTEapp.c: 165: sendCommand("sys sleep 999999999");
  6328                           
  6329                           ;incstack = 0
  6330  004580  0EC3               	movlw	low STR_22
  6331  004582  6FC1               	movwf	sendCommand@string& (0+255),b
  6332  004584  0E7C               	movlw	high STR_22
  6333  004586  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6334  004588  ECB2  F026         	call	_sendCommand	;wreg free
  6335  00458C                     l310:
  6336  00458C  B89D               	btfsc	3997,4,c	;volatile
  6337  00458E  D7FE               	goto	l310
  6338                           
  6339                           ;MOTEapp.c: 168: moteApp_delayms(20);
  6340  004590  0100               	movlb	0	; () banked
  6341  004592  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6342  004594  0E14               	movlw	20
  6343  004596  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6344  004598  EF9B  F023         	goto	_moteApp_delayms	;wreg free
  6345  00459C                     __end_of_modemSleep:
  6346                           	opt stack 0
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           intcon	equ	0xFF2
  6352                           postinc0	equ	0xFEE
  6353                           wreg	equ	0xFE8
  6354                           indf2	equ	0xFDF
  6355                           fsr2h	equ	0xFDA
  6356                           fsr2l	equ	0xFD9
  6357                           status	equ	0xFD8
  6358                           
  6359 ;; *************** function _modemResync *****************
  6360 ;; Defined at:
  6361 ;;		line 126 in file "../Includes/Board/MOTEapp.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6366 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : F/0
  6373 ;;		On exit  : F/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        3 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:   14
  6383 ;; This function calls:
  6384 ;;		_MOTEapp_getModemResponse
  6385 ;;		_moteApp_delayms
  6386 ;;		_sendCommand
  6387 ;; This function is called by:
  6388 ;;		_main
  6389 ;;		_moteApp_GoToSleep
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text19
  6394  004F2C                     __ptext19:
  6395                           	opt stack 0
  6396  004F2C                     _modemResync:
  6397                           	opt stack 13
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;MOTEapp.c: 128: bool escapeEvent = 0;
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;incstack = 0
  6404  004F2C  6BC7               	clrf	modemResync@escapeEvent& (0+255),b
  6405                           
  6406                           ;MOTEapp.c: 129: uint16_t escapeCounter = 0;
  6407  004F2E  6BC5               	clrf	modemResync@escapeCounter& (0+255),b
  6408  004F30  6BC6               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6409                           
  6410                           ;MOTEapp.c: 137: TXSTAbits.TXEN = 0;
  6411  004F32  9AAC               	bcf	4012,5,c	;volatile
  6412                           
  6413                           ;MOTEapp.c: 138: LATCbits.LATC6 = 0;
  6414  004F34  9C8B               	bcf	3979,6,c	;volatile
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;MOTEapp.c: 139: moteApp_delayms(10);
  6418  004F36  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6419  004F38  0E0A               	movlw	10
  6420  004F3A  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6421  004F3C  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;MOTEapp.c: 144: TXSTAbits.TXEN = 1;
  6425  004F40  8AAC               	bsf	4012,5,c	;volatile
  6426                           
  6427                           ;MOTEapp.c: 145: moteApp_delayms(5);
  6428  004F42  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6429  004F44  0E05               	movlw	5
  6430  004F46  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6431  004F48  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;MOTEapp.c: 147: TXREG = 0x55;
  6435  004F4C  0E55               	movlw	85
  6436  004F4E  6EAD               	movwf	4013,c	;volatile
  6437  004F50                     l298:
  6438                           
  6439                           ; BSR set to: 0
  6440  004F50  A2AC               	btfss	4012,1,c	;volatile
  6441  004F52  D7FE               	goto	l298
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;MOTEapp.c: 151: sendCommand("z");
  6445  004F54  0EFC               	movlw	low STR_21
  6446  004F56  6FC1               	movwf	sendCommand@string& (0+255),b
  6447  004F58  0E7F               	movlw	high STR_21
  6448  004F5A  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6449  004F5C  ECB2  F026         	call	_sendCommand	;wreg free
  6450                           
  6451                           ;MOTEapp.c: 153: moteApp_delayms(40);
  6452  004F60  0100               	movlb	0	; () banked
  6453  004F62  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6454  004F64  0E28               	movlw	40
  6455  004F66  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6456  004F68  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6457                           
  6458                           ;MOTEapp.c: 154: while (escapeEvent)
  6459  004F6C  D00E               	goto	l301
  6460  004F6E                     l8751:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;MOTEapp.c: 155: {
  6464                           ;MOTEapp.c: 156: if(MOTEapp_getModemResponse())
  6465  004F6E  ECC4  F025         	call	_MOTEapp_getModemResponse	;wreg free
  6466  004F72  0900               	iorlw	0
  6467  004F74  E003               	bz	l8755
  6468  004F76                     l8753:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;MOTEapp.c: 157: escapeEvent = 1;
  6472  004F76  0E01               	movlw	1
  6473  004F78  6FC7               	movwf	modemResync@escapeEvent& (0+255),b
  6474  004F7A  D007               	goto	l301
  6475  004F7C                     l8755:
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;MOTEapp.c: 158: else if (++escapeCounter > 5000)
  6479  004F7C  4BC5               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6480  004F7E  2BC6               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6481  004F80  0E89               	movlw	137
  6482  004F82  5DC5               	subwf	modemResync@escapeCounter& (0+255),w,b
  6483  004F84  0E13               	movlw	19
  6484  004F86  59C6               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6485  004F88  E2F6               	bc	l8753
  6486  004F8A                     l301:
  6487                           
  6488                           ; BSR set to: 0
  6489  004F8A  51C7               	movf	modemResync@escapeEvent& (0+255),w,b
  6490  004F8C  E1F0               	bnz	l8751
  6491                           
  6492                           ; BSR set to: 0
  6493  004F8E  0012               	return		;funcret
  6494  004F90                     __end_of_modemResync:
  6495                           	opt stack 0
  6496                           tblptru	equ	0xFF8
  6497                           tblptrh	equ	0xFF7
  6498                           tblptrl	equ	0xFF6
  6499                           tablat	equ	0xFF5
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           wreg	equ	0xFE8
  6503                           indf2	equ	0xFDF
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _EUSART_FlushBuffer *****************
  6509 ;; Defined at:
  6510 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  index           1    0[BANK0 ] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      void 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/F
  6521 ;;		On exit  : F/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6524 ;;      Params:         0       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6527 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6528 ;;Total ram usage:        1 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:   11
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_moteApp_GoToSleep
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text20
  6539  00488A                     __ptext20:
  6540                           	opt stack 0
  6541  00488A                     _EUSART_FlushBuffer:
  6542                           	opt stack 16
  6543                           
  6544                           ;eusart.c: 204: uint8_t index;
  6545                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;incstack = 0
  6549  00488A  0100               	movlb	0	; () banked
  6550  00488C  6BC0               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6551  00488E                     l8813:
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eusart.c: 206: {
  6555                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6556  00488E  0E00               	movlw	low _eusartRxBuffer
  6557  004890  25C0               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6558  004892  6ED9               	movwf	fsr2l,c
  6559  004894  6ADA               	clrf	fsr2h,c
  6560  004896  0E02               	movlw	high _eusartRxBuffer
  6561  004898  22DA               	addwfc	fsr2h,f,c
  6562  00489A  6ADF               	clrf	indf2,c
  6563                           
  6564                           ; BSR set to: 0
  6565  00489C  2BC0               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6566                           
  6567                           ; BSR set to: 0
  6568  00489E  0E3F               	movlw	63
  6569  0048A0  65C0               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6570  0048A2  D7F5               	goto	l8813
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;eusart.c: 208: }
  6574                           ;eusart.c: 209: eusartRxHead = 0;
  6575  0048A4  6A24               	clrf	_eusartRxHead,c
  6576                           
  6577                           ;eusart.c: 210: eusartRxTail = 0;
  6578  0048A6  6A25               	clrf	_eusartRxTail,c
  6579                           
  6580                           ;eusart.c: 211: eusartRxCount = 0;
  6581  0048A8  6A23               	clrf	_eusartRxCount,c	;volatile
  6582                           
  6583                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6584  0048AA  989D               	bcf	3997,4,c	;volatile
  6585                           
  6586                           ;eusart.c: 214: eusartTxHead = 0;
  6587  0048AC  6A27               	clrf	_eusartTxHead,c
  6588                           
  6589                           ;eusart.c: 215: eusartTxTail = 0;
  6590  0048AE  6A28               	clrf	_eusartTxTail,c
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6594  0048B0  0E40               	movlw	64
  6595  0048B2  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
  6596                           
  6597                           ; BSR set to: 0
  6598  0048B4  0C40               	retlw	64	;funcret
  6599  0048B6                     __end_of_EUSART_FlushBuffer:
  6600                           	opt stack 0
  6601                           tblptru	equ	0xFF8
  6602                           tblptrh	equ	0xFF7
  6603                           tblptrl	equ	0xFF6
  6604                           tablat	equ	0xFF5
  6605                           intcon	equ	0xFF2
  6606                           postinc0	equ	0xFEE
  6607                           wreg	equ	0xFE8
  6608                           indf2	equ	0xFDF
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _TMR2_ReadTimer *****************
  6614 ;; Defined at:
  6615 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  readVal         1    0[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      unsigned char 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2
  6624 ;; Tracked objects:
  6625 ;;		On entry : F/0
  6626 ;;		On exit  : F/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0
  6630 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6632 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6633 ;;Total ram usage:        1 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   11
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_moteRunningProcess
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text21
  6644  00443A                     __ptext21:
  6645                           	opt stack 0
  6646  00443A                     _TMR2_ReadTimer:
  6647                           	opt stack 17
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;tmr2.c: 88: uint8_t readVal;
  6651                           ;tmr2.c: 90: readVal = TMR2;
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;incstack = 0
  6655  00443A  CFBC F0C0          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;tmr2.c: 92: return readVal;
  6659  00443E  51C0               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6660                           
  6661                           ; BSR set to: 0
  6662  004440  0012               	return		;funcret
  6663  004442                     __end_of_TMR2_ReadTimer:
  6664                           	opt stack 0
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           intcon	equ	0xFF2
  6670                           postinc0	equ	0xFEE
  6671                           wreg	equ	0xFE8
  6672                           indf2	equ	0xFDF
  6673                           fsr2h	equ	0xFDA
  6674                           fsr2l	equ	0xFD9
  6675                           status	equ	0xFD8
  6676                           
  6677 ;; *************** function _moteJoiningProcess *****************
  6678 ;; Defined at:
  6679 ;;		line 290 in file "../Includes/Board/MOTEapp.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  messageReady    1    wreg     unsigned char 
  6682 ;;  switchEvent     1   37[BANK0 ] unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  messageReady    1   47[BANK0 ] unsigned char 
  6685 ;;  i               1   46[BANK0 ] unsigned char 
  6686 ;;  i               1   45[BANK0 ] unsigned char 
  6687 ;;  Traw            2   43[BANK0 ] unsigned int 
  6688 ;;  buf            50    0        unsigned char [50]
  6689 ;;  joiningCompl    1   42[BANK0 ] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      enum E6542
  6692 ;; Registers used:
  6693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : F/0
  6696 ;;		On exit  : F/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6699 ;;      Params:         0       1       0       0       0       0       0       0       0
  6700 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6701 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6702 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6703 ;;Total ram usage:       11 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:   17
  6706 ;; This function calls:
  6707 ;;		_ADC_GetConversion
  6708 ;;		_ADC_TempConversion
  6709 ;;		_DATAEE_WriteByte
  6710 ;;		_MOTEapp_getModemResponse
  6711 ;;		_moteApp_delayms
  6712 ;;		_oled_clear
  6713 ;;		_oled_putString
  6714 ;;		_oled_putUint16
  6715 ;;		_sendCommand
  6716 ;;		_sprintf
  6717 ;;		_strcmp
  6718 ;;		_strncmp
  6719 ;; This function is called by:
  6720 ;;		_moteHandler
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text22
  6725  00701A                     __ptext22:
  6726                           	opt stack 0
  6727  00701A                     _moteJoiningProcess:
  6728                           	opt stack 12
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;incstack = 0
  6732                           ;moteJoiningProcess@messageReady stored from wreg
  6733  00701A  6FEF               	movwf	moteJoiningProcess@messageReady& (0+255),b
  6734                           
  6735                           ;MOTEapp.c: 292: static int ch = 0;
  6736                           ;MOTEapp.c: 293: bool joiningComplete = 0;
  6737  00701C  0100               	movlb	0	; () banked
  6738  00701E  6BEA               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;MOTEapp.c: 294: static int mode = 0;
  6742                           ;MOTEapp.c: 295: static unsigned char pkt_cnt = 0;
  6743                           ;MOTEapp.c: 296: static unsigned char float_val = 255;
  6744                           ;MOTEapp.c: 297: static bool pending_confirm = 0;
  6745                           ;MOTEapp.c: 298: char buf[50];
  6746                           ;MOTEapp.c: 299: static int skip_count = 0;
  6747                           ;MOTEapp.c: 302: if (switchEvent)
  6748  007020  51E5               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
  6749  007022  E101 D387          	bz	l9925
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;MOTEapp.c: 303: {
  6753                           ;MOTEapp.c: 304: activeState = moteComFailure;
  6754  007026  0E11               	movlw	17
  6755  007028  6F94               	movwf	_activeState& (0+255),b
  6756  00702A                     l363:
  6757  00702A  A282               	btfss	3970,1,c	;volatile
  6758  00702C  D7FE               	goto	l363
  6759  00702E  D382               	goto	l9925
  6760  007030                     l368:
  6761  007030  D7FF               	goto	l368
  6762  007032                     l372:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;MOTEapp.c: 321: LATAbits.LATA7 = 0;
  6766  007032  9E89               	bcf	3977,7,c	;volatile
  6767                           
  6768                           ;MOTEapp.c: 322: LATAbits.LATA6 = 0;
  6769  007034  9C89               	bcf	3977,6,c	;volatile
  6770  007036                     l9607:
  6771                           
  6772                           ; BSR set to: 0
  6773  007036  ECC4  F025         	call	_MOTEapp_getModemResponse	;wreg free
  6774  00703A  0900               	iorlw	0
  6775  00703C  E1FC               	bnz	l9607
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;MOTEapp.c: 329: sendCommand("sys get ver");
  6779  00703E  0EC5               	movlw	low STR_29
  6780  007040  6FC1               	movwf	sendCommand@string& (0+255),b
  6781  007042  0E7E               	movlw	high STR_29
  6782  007044  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6783  007046  ECB2  F026         	call	_sendCommand	;wreg free
  6784                           
  6785                           ;MOTEapp.c: 330: oled_clear();
  6786  00704A  ECA6  F022         	call	_oled_clear	;wreg free
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;MOTEapp.c: 331: oled_putString("get ver",0,0);
  6790  00704E  0EC9               	movlw	low (STR_29+4)
  6791  007050  6FCD               	movwf	oled_putString@string& (0+255),b
  6792  007052  0E7E               	movlw	high (STR_29+4)
  6793  007054  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  6794  007056  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  6795  007058  6BD0               	clrf	oled_putString@start_page& (0+255),b
  6796  00705A  ECC8  F027         	call	_oled_putString	;wreg free
  6797                           
  6798                           ;MOTEapp.c: 332: moteApp_delayms(100);
  6799  00705E  0100               	movlb	0	; () banked
  6800  007060  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6801  007062  0E64               	movlw	100
  6802  007064  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6803  007066  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;MOTEapp.c: 333: activeState = moteReset;
  6807  00706A  0E01               	movlw	1
  6808  00706C  D24C               	goto	L13
  6809  00706E                     l9619:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;MOTEapp.c: 337: if ( messageReady )
  6813  00706E  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  6814  007070  E101 D395          	bz	l9927
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;MOTEapp.c: 338: {
  6818                           ;MOTEapp.c: 339: if(strncmp(&modemResonseBuffer[2], "2903", 4) == 0)
  6819  007074  0E9A               	movlw	low (_modemResonseBuffer+2)
  6820  007076  6FC0               	movwf	strncmp@s1& (0+255),b
  6821  007078  0E01               	movlw	high (_modemResonseBuffer+2)
  6822  00707A  6FC1               	movwf	(strncmp@s1+1)& (0+255),b
  6823  00707C  0EF7               	movlw	low STR_31
  6824  00707E  6FC2               	movwf	strncmp@s2& (0+255),b
  6825  007080  0E7F               	movlw	high STR_31
  6826  007082  6FC3               	movwf	(strncmp@s2+1)& (0+255),b
  6827  007084  6BC5               	clrf	(strncmp@len+1)& (0+255),b
  6828  007086  0E04               	movlw	4
  6829  007088  6FC4               	movwf	strncmp@len& (0+255),b
  6830  00708A  ECFB  F027         	call	_strncmp	;wreg free
  6831  00708E  51C0               	movf	?_strncmp& (0+255),w,b
  6832  007090  11C1               	iorwf	(?_strncmp+1)& (0+255),w,b
  6833  007092  E118               	bnz	l9633
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;MOTEapp.c: 340: {
  6837                           ;MOTEapp.c: 341: sendCommand("mac set devaddr ABCD0001");
  6838  007094  0E4A               	movlw	low STR_32
  6839  007096  6FC1               	movwf	sendCommand@string& (0+255),b
  6840  007098  0E7C               	movlw	high STR_32
  6841  00709A  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6842  00709C  ECB2  F026         	call	_sendCommand	;wreg free
  6843                           
  6844                           ;MOTEapp.c: 342: oled_clear();
  6845  0070A0  ECA6  F022         	call	_oled_clear	;wreg free
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;MOTEapp.c: 343: oled_putString("set devaddr",0,0);
  6849  0070A4  0EB9               	movlw	low STR_33
  6850  0070A6  6FCD               	movwf	oled_putString@string& (0+255),b
  6851  0070A8  0E7E               	movlw	high STR_33
  6852  0070AA  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  6853  0070AC  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  6854  0070AE  6BD0               	clrf	oled_putString@start_page& (0+255),b
  6855  0070B0  ECC8  F027         	call	_oled_putString	;wreg free
  6856                           
  6857                           ;MOTEapp.c: 344: moteApp_delayms(80);
  6858  0070B4  0100               	movlb	0	; () banked
  6859  0070B6  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6860  0070B8  0E50               	movlw	80
  6861  0070BA  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6862  0070BC  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;MOTEapp.c: 345: activeState = moteSetDevaddr;
  6866  0070C0  0E02               	movlw	2
  6867  0070C2  D221               	goto	L13
  6868  0070C4                     l9633:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;MOTEapp.c: 347: else
  6872                           ;MOTEapp.c: 348: {
  6873                           ;MOTEapp.c: 349: oled_clear();
  6874  0070C4  ECA6  F022         	call	_oled_clear	;wreg free
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;MOTEapp.c: 350: oled_putString(modemResonseBuffer,0,3);
  6878  0070C8  0E98               	movlw	low _modemResonseBuffer
  6879  0070CA  6FCD               	movwf	oled_putString@string& (0+255),b
  6880  0070CC  0E01               	movlw	high _modemResonseBuffer
  6881  0070CE  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  6882  0070D0  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  6883  0070D2  0E03               	movlw	3
  6884  0070D4  6FD0               	movwf	oled_putString@start_page& (0+255),b
  6885  0070D6  ECC8  F027         	call	_oled_putString	;wreg free
  6886                           
  6887                           ;MOTEapp.c: 351: moteApp_delayms(1000);
  6888  0070DA  0E03               	movlw	3
  6889  0070DC  0100               	movlb	0	; () banked
  6890  0070DE  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6891  0070E0  0EE8               	movlw	232
  6892  0070E2  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6893  0070E4  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6894  0070E8                     l9639:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;MOTEapp.c: 352: activeState = moteStartup;
  6898  0070E8  6B94               	clrf	_activeState& (0+255),b
  6899  0070EA  D359               	goto	l9927
  6900  0070EC                     l9641:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;MOTEapp.c: 357: if ( messageReady )
  6904  0070EC  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  6905  0070EE  E101 D356          	bz	l9927
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;MOTEapp.c: 358: {
  6909                           ;MOTEapp.c: 359: if(strcmp(modemResonseBuffer, "ok") == 0)
  6910  0070F2  0E98               	movlw	low _modemResonseBuffer
  6911  0070F4  6FC0               	movwf	strcmp@s1& (0+255),b
  6912  0070F6  0E01               	movlw	high _modemResonseBuffer
  6913  0070F8  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  6914  0070FA  0ECB               	movlw	low (STR_64+12)
  6915  0070FC  6FC2               	movwf	strcmp@s2& (0+255),b
  6916  0070FE  0E7D               	movlw	high (STR_64+12)
  6917  007100  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  6918  007102  EC55  F029         	call	_strcmp	;wreg free
  6919  007106  51C0               	movf	?_strcmp& (0+255),w,b
  6920  007108  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  6921  00710A  E1EE               	bnz	l9639
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;MOTEapp.c: 360: {
  6925                           ;MOTEapp.c: 361: sendCommand("mac set appskey 2B7E151628AED2A6ABF7158809CF4F3C");
  6926  00710C  0EB1               	movlw	low STR_35
  6927  00710E  6FC1               	movwf	sendCommand@string& (0+255),b
  6928  007110  0E7B               	movlw	high STR_35
  6929  007112  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6930  007114  ECB2  F026         	call	_sendCommand	;wreg free
  6931                           
  6932                           ;MOTEapp.c: 362: oled_clear();
  6933  007118  ECA6  F022         	call	_oled_clear	;wreg free
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;MOTEapp.c: 363: oled_putString("set appskey",0,0);
  6937  00711C  0EDD               	movlw	low STR_36
  6938  00711E  6FCD               	movwf	oled_putString@string& (0+255),b
  6939  007120  0E7E               	movlw	high STR_36
  6940  007122  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  6941  007124  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  6942  007126  6BD0               	clrf	oled_putString@start_page& (0+255),b
  6943  007128  ECC8  F027         	call	_oled_putString	;wreg free
  6944                           
  6945                           ;MOTEapp.c: 364: moteApp_delayms(80);
  6946  00712C  0100               	movlb	0	; () banked
  6947  00712E  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6948  007130  0E50               	movlw	80
  6949  007132  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  6950  007134  EC9B  F023         	call	_moteApp_delayms	;wreg free
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;MOTEapp.c: 365: activeState = moteSetAppskey;
  6954  007138  0E03               	movlw	3
  6955  00713A  D1E5               	goto	L13
  6956  00713C                     l9655:
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;MOTEapp.c: 374: if ( messageReady )
  6960  00713C  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  6961  00713E  E101 D32E          	bz	l9927
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;MOTEapp.c: 375: {
  6965                           ;MOTEapp.c: 376: if(strcmp(modemResonseBuffer, "ok") == 0)
  6966  007142  0E98               	movlw	low _modemResonseBuffer
  6967  007144  6FC0               	movwf	strcmp@s1& (0+255),b
  6968  007146  0E01               	movlw	high _modemResonseBuffer
  6969  007148  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  6970  00714A  0ECB               	movlw	low (STR_64+12)
  6971  00714C  6FC2               	movwf	strcmp@s2& (0+255),b
  6972  00714E  0E7D               	movlw	high (STR_64+12)
  6973  007150  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  6974  007152  EC55  F029         	call	_strcmp	;wreg free
  6975  007156  51C0               	movf	?_strcmp& (0+255),w,b
  6976  007158  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  6977  00715A  E1C6               	bnz	l9639
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;MOTEapp.c: 377: {
  6981                           ;MOTEapp.c: 379: sendCommand("mac set nwkskey 2B7E151628AED2A6ABF7158809CF4F3C");
  6982  00715C  0E80               	movlw	low STR_38
  6983  00715E  6FC1               	movwf	sendCommand@string& (0+255),b
  6984  007160  0E7B               	movlw	high STR_38
  6985  007162  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  6986  007164  ECB2  F026         	call	_sendCommand	;wreg free
  6987                           
  6988                           ;MOTEapp.c: 380: oled_clear();
  6989  007168  ECA6  F022         	call	_oled_clear	;wreg free
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;MOTEapp.c: 381: oled_putString("set nwkskey",0,0);
  6993  00716C  0ED1               	movlw	low STR_39
  6994  00716E  6FCD               	movwf	oled_putString@string& (0+255),b
  6995  007170  0E7E               	movlw	high STR_39
  6996  007172  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  6997  007174  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  6998  007176  6BD0               	clrf	oled_putString@start_page& (0+255),b
  6999  007178  ECC8  F027         	call	_oled_putString	;wreg free
  7000                           
  7001                           ;MOTEapp.c: 382: moteApp_delayms(80);
  7002  00717C  0100               	movlb	0	; () banked
  7003  00717E  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7004  007180  0E50               	movlw	80
  7005  007182  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7006  007184  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;MOTEapp.c: 383: activeState = moteSetNwkskey;
  7010  007188  0E04               	movlw	4
  7011  00718A  D1BD               	goto	L13
  7012  00718C                     l9669:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;MOTEapp.c: 392: if ( messageReady )
  7016  00718C  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7017  00718E  E101 D306          	bz	l9927
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;MOTEapp.c: 393: {
  7021                           ;MOTEapp.c: 394: if(strcmp(modemResonseBuffer, "ok") == 0)
  7022  007192  0E98               	movlw	low _modemResonseBuffer
  7023  007194  6FC0               	movwf	strcmp@s1& (0+255),b
  7024  007196  0E01               	movlw	high _modemResonseBuffer
  7025  007198  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7026  00719A  0ECB               	movlw	low (STR_64+12)
  7027  00719C  6FC2               	movwf	strcmp@s2& (0+255),b
  7028  00719E  0E7D               	movlw	high (STR_64+12)
  7029  0071A0  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7030  0071A2  EC55  F029         	call	_strcmp	;wreg free
  7031  0071A6  51C0               	movf	?_strcmp& (0+255),w,b
  7032  0071A8  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7033  0071AA  E19E               	bnz	l9639
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;MOTEapp.c: 395: {
  7037                           ;MOTEapp.c: 397: sendCommand("mac set adr off");
  7038  0071AC  0E8F               	movlw	low STR_41
  7039  0071AE  6FC1               	movwf	sendCommand@string& (0+255),b
  7040  0071B0  0E7D               	movlw	high STR_41
  7041  0071B2  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7042  0071B4  ECB2  F026         	call	_sendCommand	;wreg free
  7043                           
  7044                           ;MOTEapp.c: 398: oled_clear();
  7045  0071B8  ECA6  F022         	call	_oled_clear	;wreg free
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;MOTEapp.c: 399: oled_putString("set adr",0,0);
  7049  0071BC  0EA7               	movlw	low STR_42
  7050  0071BE  6FCD               	movwf	oled_putString@string& (0+255),b
  7051  0071C0  0E7F               	movlw	high STR_42
  7052  0071C2  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7053  0071C4  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7054  0071C6  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7055  0071C8  ECC8  F027         	call	_oled_putString	;wreg free
  7056                           
  7057                           ;MOTEapp.c: 400: moteApp_delayms(80);
  7058  0071CC  0100               	movlb	0	; () banked
  7059  0071CE  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7060  0071D0  0E50               	movlw	80
  7061  0071D2  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7062  0071D4  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;MOTEapp.c: 401: activeState = moteSetAdr;
  7066  0071D8  0E05               	movlw	5
  7067  0071DA  D195               	goto	L13
  7068  0071DC                     l9683:
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;MOTEapp.c: 410: if ( messageReady )
  7072  0071DC  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7073  0071DE  E101 D2DE          	bz	l9927
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;MOTEapp.c: 411: {
  7077                           ;MOTEapp.c: 412: if(strcmp(modemResonseBuffer, "ok") == 0)
  7078  0071E2  0E98               	movlw	low _modemResonseBuffer
  7079  0071E4  6FC0               	movwf	strcmp@s1& (0+255),b
  7080  0071E6  0E01               	movlw	high _modemResonseBuffer
  7081  0071E8  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7082  0071EA  0ECB               	movlw	low (STR_64+12)
  7083  0071EC  6FC2               	movwf	strcmp@s2& (0+255),b
  7084  0071EE  0E7D               	movlw	high (STR_64+12)
  7085  0071F0  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7086  0071F2  EC55  F029         	call	_strcmp	;wreg free
  7087  0071F6  51C0               	movf	?_strcmp& (0+255),w,b
  7088  0071F8  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7089  0071FA  E001 D775          	bnz	l9639
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;MOTEapp.c: 413: {
  7093                           ;MOTEapp.c: 415: sendCommand("mac set sync 34");
  7094  0071FE  0E7F               	movlw	low STR_44
  7095  007200  6FC1               	movwf	sendCommand@string& (0+255),b
  7096  007202  0E7D               	movlw	high STR_44
  7097  007204  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7098  007206  ECB2  F026         	call	_sendCommand	;wreg free
  7099                           
  7100                           ;MOTEapp.c: 416: oled_clear();
  7101  00720A  ECA6  F022         	call	_oled_clear	;wreg free
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;MOTEapp.c: 417: oled_putString("set sync",0,0);
  7105  00720E  0E47               	movlw	low STR_45
  7106  007210  6FCD               	movwf	oled_putString@string& (0+255),b
  7107  007212  0E7F               	movlw	high STR_45
  7108  007214  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7109  007216  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7110  007218  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7111  00721A  ECC8  F027         	call	_oled_putString	;wreg free
  7112                           
  7113                           ;MOTEapp.c: 418: moteApp_delayms(80);
  7114  00721E  0100               	movlb	0	; () banked
  7115  007220  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7116  007222  0E50               	movlw	80
  7117  007224  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7118  007226  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;MOTEapp.c: 419: activeState = moteSetSync;
  7122  00722A  0E07               	movlw	7
  7123  00722C  D16C               	goto	L13
  7124  00722E                     l9697:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;MOTEapp.c: 428: if ( messageReady )
  7128  00722E  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7129  007230  E101 D2B5          	bz	l9927
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;MOTEapp.c: 429: {
  7133                           ;MOTEapp.c: 430: if(strcmp(modemResonseBuffer, "ok") == 0)
  7134  007234  0E98               	movlw	low _modemResonseBuffer
  7135  007236  6FC0               	movwf	strcmp@s1& (0+255),b
  7136  007238  0E01               	movlw	high _modemResonseBuffer
  7137  00723A  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7138  00723C  0ECB               	movlw	low (STR_64+12)
  7139  00723E  6FC2               	movwf	strcmp@s2& (0+255),b
  7140  007240  0E7D               	movlw	high (STR_64+12)
  7141  007242  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7142  007244  EC55  F029         	call	_strcmp	;wreg free
  7143  007248  51C0               	movf	?_strcmp& (0+255),w,b
  7144  00724A  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7145  00724C  E001 D74C          	bnz	l9639
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;MOTEapp.c: 431: {
  7149                           ;MOTEapp.c: 433: sendCommand("mac set rx2 8 923300000");
  7150  007250  0E7B               	movlw	low STR_47
  7151  007252  6FC1               	movwf	sendCommand@string& (0+255),b
  7152  007254  0E7C               	movlw	high STR_47
  7153  007256  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7154  007258  ECB2  F026         	call	_sendCommand	;wreg free
  7155                           
  7156                           ;MOTEapp.c: 434: oled_clear();
  7157  00725C  ECA6  F022         	call	_oled_clear	;wreg free
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;MOTEapp.c: 435: oled_putString("set rx2",0,0);
  7161  007260  0E97               	movlw	low STR_48
  7162  007262  6FCD               	movwf	oled_putString@string& (0+255),b
  7163  007264  0E7F               	movlw	high STR_48
  7164  007266  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7165  007268  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7166  00726A  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7167  00726C  ECC8  F027         	call	_oled_putString	;wreg free
  7168                           
  7169                           ;MOTEapp.c: 436: moteApp_delayms(80);
  7170  007270  0100               	movlb	0	; () banked
  7171  007272  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7172  007274  0E50               	movlw	80
  7173  007276  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7174  007278  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;MOTEapp.c: 437: ch = 0;
  7178  00727C  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7179  00727E  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7180  007280                     l9711:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;MOTEapp.c: 438: activeState = moteSetRx2;
  7184  007280  0E06               	movlw	6
  7185  007282  D141               	goto	L13
  7186  007284                     l9713:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;MOTEapp.c: 448: if ( messageReady )
  7190  007284  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7191  007286  E101 D28A          	bz	l9927
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;MOTEapp.c: 449: {
  7195                           ;MOTEapp.c: 450: if(strcmp(modemResonseBuffer, "ok") == 0)
  7196  00728A  0E98               	movlw	low _modemResonseBuffer
  7197  00728C  6FC0               	movwf	strcmp@s1& (0+255),b
  7198  00728E  0E01               	movlw	high _modemResonseBuffer
  7199  007290  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7200  007292  0ECB               	movlw	low (STR_64+12)
  7201  007294  6FC2               	movwf	strcmp@s2& (0+255),b
  7202  007296  0E7D               	movlw	high (STR_64+12)
  7203  007298  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7204  00729A  EC55  F029         	call	_strcmp	;wreg free
  7205  00729E  51C0               	movf	?_strcmp& (0+255),w,b
  7206  0072A0  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7207  0072A2  E001 D721          	bnz	l9639
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;MOTEapp.c: 451: {
  7211                           ;MOTEapp.c: 453: sprintf(cmd,"mac set ch status %d %s",
  7212                           ;MOTEapp.c: 454: ch,
  7213                           ;MOTEapp.c: 455: (ch>=49 && ch<=51)?"on":"off");
  7214  0072A6  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7215  0072A8  D00C               	goto	l9721
  7216  0072AA  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7217  0072AC  E103               	bnz	u7980
  7218  0072AE  0E31               	movlw	49
  7219  0072B0  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7220  0072B2  E307               	bnc	l9721
  7221  0072B4                     u7980:
  7222                           
  7223                           ; BSR set to: 0
  7224  0072B4  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7225  0072B6  D009               	goto	l9723
  7226  0072B8  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7227  0072BA  E103               	bnz	u7990
  7228  0072BC  0E34               	movlw	52
  7229  0072BE  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7230  0072C0  E304               	bnc	l9723
  7231  0072C2                     u7990:
  7232  0072C2                     l9721:
  7233                           
  7234                           ; BSR set to: 0
  7235  0072C2  0E9B               	movlw	low (STR_41+12)
  7236  0072C4  6FE8               	movwf	_moteJoiningProcess$1333& (0+255),b
  7237  0072C6  0E7D               	movlw	high (STR_41+12)
  7238  0072C8  D003               	goto	L10
  7239  0072CA                     l9723:
  7240                           
  7241                           ; BSR set to: 0
  7242  0072CA  0EDA               	movlw	low (STR_82+12)
  7243  0072CC  6FE8               	movwf	_moteJoiningProcess$1333& (0+255),b
  7244  0072CE  0E7D               	movlw	high (STR_82+12)
  7245  0072D0                     L10:
  7246  0072D0  6FE9               	movwf	(_moteJoiningProcess$1333+1)& (0+255),b
  7247                           
  7248                           ; BSR set to: 0
  7249  0072D2  0E58               	movlw	low _cmd
  7250  0072D4  6FCC               	movwf	sprintf@sp& (0+255),b
  7251  0072D6  0E01               	movlw	high _cmd
  7252  0072D8  6FCD               	movwf	(sprintf@sp+1)& (0+255),b
  7253  0072DA  0EAB               	movlw	low STR_50
  7254  0072DC  6FCE               	movwf	sprintf@f& (0+255),b
  7255  0072DE  0E7C               	movlw	high STR_50
  7256  0072E0  6FCF               	movwf	(sprintf@f+1)& (0+255),b
  7257  0072E2  C08B  F0D0         	movff	moteJoiningProcess@ch,?_sprintf+4
  7258  0072E6  C08C  F0D1         	movff	moteJoiningProcess@ch+1,?_sprintf+5
  7259  0072EA  C0E8  F0D2         	movff	_moteJoiningProcess$1333,?_sprintf+6
  7260  0072EE  C0E9  F0D3         	movff	_moteJoiningProcess$1333+1,?_sprintf+7
  7261  0072F2  EC37  F036         	call	_sprintf	;wreg free
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;MOTEapp.c: 456: sendCommand(cmd);
  7265  0072F6  0E58               	movlw	low _cmd
  7266  0072F8  6FC1               	movwf	sendCommand@string& (0+255),b
  7267  0072FA  0E01               	movlw	high _cmd
  7268  0072FC  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7269  0072FE  ECB2  F026         	call	_sendCommand	;wreg free
  7270                           
  7271                           ;MOTEapp.c: 457: oled_clear();
  7272  007302  ECA6  F022         	call	_oled_clear	;wreg free
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;MOTEapp.c: 458: oled_putString("set ch",0,0);
  7276  007306  0EE9               	movlw	low STR_53
  7277  007308  6FCD               	movwf	oled_putString@string& (0+255),b
  7278  00730A  0E7F               	movlw	high STR_53
  7279  00730C  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7280  00730E  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7281  007310  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7282  007312  ECC8  F027         	call	_oled_putString	;wreg free
  7283                           
  7284                           ;MOTEapp.c: 459: oled_putString(&cmd[18],0,1);
  7285  007316  0E6A               	movlw	low (_cmd+18)
  7286  007318  0100               	movlb	0	; () banked
  7287  00731A  6FCD               	movwf	oled_putString@string& (0+255),b
  7288  00731C  0E01               	movlw	high (_cmd+18)
  7289  00731E  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7290  007320  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7291  007322  0E01               	movlw	1
  7292  007324  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7293  007326  ECC8  F027         	call	_oled_putString	;wreg free
  7294                           
  7295                           ;MOTEapp.c: 460: moteApp_delayms(80);
  7296  00732A  0100               	movlb	0	; () banked
  7297  00732C  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7298  00732E  0E50               	movlw	80
  7299  007330  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7300  007332  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;MOTEapp.c: 461: ch++;
  7304  007336  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7305  007338  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;MOTEapp.c: 462: if (ch<72) {
  7309  00733A  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7310  00733C  D7A1               	goto	l9711
  7311  00733E  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7312  007340  E103               	bnz	l9743
  7313  007342  0E48               	movlw	72
  7314  007344  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7315  007346  E39C               	bnc	l9711
  7316  007348                     l9743:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;MOTEapp.c: 465: activeState = moteSetChStatus;
  7320  007348  0E08               	movlw	8
  7321  00734A  D0DD               	goto	L13
  7322  00734C                     l9745:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;MOTEapp.c: 475: if ( messageReady )
  7326  00734C  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7327  00734E  E101 D226          	bz	l9927
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;MOTEapp.c: 476: {
  7331                           ;MOTEapp.c: 477: if(strcmp(modemResonseBuffer, "ok") == 0)
  7332  007352  0E98               	movlw	low _modemResonseBuffer
  7333  007354  6FC0               	movwf	strcmp@s1& (0+255),b
  7334  007356  0E01               	movlw	high _modemResonseBuffer
  7335  007358  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7336  00735A  0ECB               	movlw	low (STR_64+12)
  7337  00735C  6FC2               	movwf	strcmp@s2& (0+255),b
  7338  00735E  0E7D               	movlw	high (STR_64+12)
  7339  007360  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7340  007362  EC55  F029         	call	_strcmp	;wreg free
  7341  007366  51C0               	movf	?_strcmp& (0+255),w,b
  7342  007368  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7343  00736A  E001 D6BD          	bnz	l9639
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;MOTEapp.c: 478: {
  7347                           ;MOTEapp.c: 479: moteApp_delayms(200);
  7348  00736E  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7349  007370  0EC8               	movlw	200
  7350  007372  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7351  007374  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;MOTEapp.c: 480: sendCommand("mac join abp");
  7355  007378  0E60               	movlw	low STR_55
  7356  00737A  6FC1               	movwf	sendCommand@string& (0+255),b
  7357  00737C  0E7E               	movlw	high STR_55
  7358  00737E  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7359  007380  ECB2  F026         	call	_sendCommand	;wreg free
  7360                           
  7361                           ;MOTEapp.c: 481: oled_clear();
  7362  007384  ECA6  F022         	call	_oled_clear	;wreg free
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;MOTEapp.c: 482: oled_putString("join abp",0,0);
  7366  007388  0E64               	movlw	low (STR_55+4)
  7367  00738A  6FCD               	movwf	oled_putString@string& (0+255),b
  7368  00738C  0E7E               	movlw	high (STR_55+4)
  7369  00738E  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7370  007390  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7371  007392  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7372  007394  ECC8  F027         	call	_oled_putString	;wreg free
  7373                           
  7374                           ;MOTEapp.c: 483: moteApp_delayms(80);
  7375  007398  0100               	movlb	0	; () banked
  7376  00739A  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7377  00739C  0E50               	movlw	80
  7378  00739E  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7379  0073A0  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;MOTEapp.c: 484: activeState = moteJoinAbp;
  7383  0073A4  0E09               	movlw	9
  7384  0073A6  D0AF               	goto	L13
  7385  0073A8                     l9761:
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;MOTEapp.c: 493: if ( messageReady )
  7389  0073A8  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7390  0073AA  E101 D1F8          	bz	l9927
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;MOTEapp.c: 494: {
  7394                           ;MOTEapp.c: 495: if(strcmp(modemResonseBuffer, "ok") == 0)
  7395  0073AE  0E98               	movlw	low _modemResonseBuffer
  7396  0073B0  6FC0               	movwf	strcmp@s1& (0+255),b
  7397  0073B2  0E01               	movlw	high _modemResonseBuffer
  7398  0073B4  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7399  0073B6  0ECB               	movlw	low (STR_64+12)
  7400  0073B8  6FC2               	movwf	strcmp@s2& (0+255),b
  7401  0073BA  0E7D               	movlw	high (STR_64+12)
  7402  0073BC  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7403  0073BE  EC55  F029         	call	_strcmp	;wreg free
  7404  0073C2  51C0               	movf	?_strcmp& (0+255),w,b
  7405  0073C4  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7406  0073C6  E001 D68F          	bnz	l9639
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;MOTEapp.c: 496: {
  7410                           ;MOTEapp.c: 498: oled_clear();
  7411  0073CA  ECA6  F022         	call	_oled_clear	;wreg free
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;MOTEapp.c: 499: oled_putString("Wait accepted...",0,0);
  7415  0073CE  0EF9               	movlw	low STR_58
  7416  0073D0  6FCD               	movwf	oled_putString@string& (0+255),b
  7417  0073D2  0E7C               	movlw	high STR_58
  7418  0073D4  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7419  0073D6  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7420  0073D8  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7421  0073DA  ECC8  F027         	call	_oled_putString	;wreg free
  7422                           
  7423                           ;MOTEapp.c: 500: moteApp_delayms(80);
  7424  0073DE  0100               	movlb	0	; () banked
  7425  0073E0  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7426  0073E2  0E50               	movlw	80
  7427  0073E4  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7428  0073E6  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;MOTEapp.c: 501: activeState = moteWaitAccepted;
  7432  0073EA  0E0A               	movlw	10
  7433  0073EC  D08C               	goto	L13
  7434  0073EE                     l9773:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;MOTEapp.c: 510: if ( messageReady )
  7438  0073EE  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7439  0073F0  E101 D1D5          	bz	l9927
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;MOTEapp.c: 511: {
  7443                           ;MOTEapp.c: 512: if(strcmp(modemResonseBuffer, "accepted") == 0)
  7444  0073F4  0E98               	movlw	low _modemResonseBuffer
  7445  0073F6  6FC0               	movwf	strcmp@s1& (0+255),b
  7446  0073F8  0E01               	movlw	high _modemResonseBuffer
  7447  0073FA  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7448  0073FC  0E50               	movlw	low STR_59
  7449  0073FE  6FC2               	movwf	strcmp@s2& (0+255),b
  7450  007400  0E7F               	movlw	high STR_59
  7451  007402  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7452  007404  EC55  F029         	call	_strcmp	;wreg free
  7453  007408  51C0               	movf	?_strcmp& (0+255),w,b
  7454  00740A  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7455  00740C  E11A               	bnz	l9789
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;MOTEapp.c: 513: {
  7459                           ;MOTEapp.c: 518: sendCommand("mac tx uncnf 1 00000000");
  7460  00740E  0E63               	movlw	low STR_60
  7461  007410  6FC1               	movwf	sendCommand@string& (0+255),b
  7462  007412  0E7C               	movlw	high STR_60
  7463  007414  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7464  007416  ECB2  F026         	call	_sendCommand	;wreg free
  7465                           
  7466                           ;MOTEapp.c: 519: oled_clear();
  7467  00741A  ECA6  F022         	call	_oled_clear	;wreg free
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;MOTEapp.c: 520: oled_putString("ini tx",0,0);
  7471  00741E  0EF0               	movlw	low STR_61
  7472  007420  6FCD               	movwf	oled_putString@string& (0+255),b
  7473  007422  0E7F               	movlw	high STR_61
  7474  007424  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7475  007426  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7476  007428  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7477  00742A  ECC8  F027         	call	_oled_putString	;wreg free
  7478                           
  7479                           ;MOTEapp.c: 521: moteApp_delayms(150);
  7480  00742E  0100               	movlb	0	; () banked
  7481  007430  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7482  007432  0E96               	movlw	150
  7483  007434  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7484  007436  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;MOTEapp.c: 522: activeState = moteIniTx;
  7488  00743A  0E0B               	movlw	11
  7489  00743C  6F94               	movwf	_activeState& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;MOTEapp.c: 523: LATAbits.LATA6 = 1;
  7493  00743E  8C89               	bsf	3977,6,c	;volatile
  7494                           
  7495                           ;MOTEapp.c: 524: }
  7496  007440  D1AE               	goto	l9927
  7497  007442                     l9789:
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;MOTEapp.c: 525: else
  7501                           ;MOTEapp.c: 526: {
  7502                           ;MOTEapp.c: 527: oled_clear();
  7503  007442  ECA6  F022         	call	_oled_clear	;wreg free
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;MOTEapp.c: 528: oled_putString("moteWaitAccepted",0,0);
  7507  007446  0E2C               	movlw	low STR_62
  7508  007448  6FCD               	movwf	oled_putString@string& (0+255),b
  7509  00744A  0E7D               	movlw	high STR_62
  7510  00744C  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7511  00744E  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7512  007450  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7513  007452  ECC8  F027         	call	_oled_putString	;wreg free
  7514                           
  7515                           ;MOTEapp.c: 529: activeState = moteStartup;
  7516  007456  0100               	movlb	0	; () banked
  7517  007458  6B94               	clrf	_activeState& (0+255),b
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;MOTEapp.c: 530: moteApp_delayms(500);
  7521  00745A  0E01               	movlw	1
  7522  00745C  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7523  00745E  0EF4               	movlw	244
  7524  007460  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7525  007462  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7526  007466  D023               	goto	l9811
  7527  007468                     l9799:
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;MOTEapp.c: 536: if ( messageReady )
  7531  007468  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7532  00746A  E101 D198          	bz	l9927
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;MOTEapp.c: 537: {
  7536                           ;MOTEapp.c: 538: if(strcmp(modemResonseBuffer, "ok") == 0)
  7537  00746E  0E98               	movlw	low _modemResonseBuffer
  7538  007470  6FC0               	movwf	strcmp@s1& (0+255),b
  7539  007472  0E01               	movlw	high _modemResonseBuffer
  7540  007474  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7541  007476  0ECB               	movlw	low (STR_64+12)
  7542  007478  6FC2               	movwf	strcmp@s2& (0+255),b
  7543  00747A  0E7D               	movlw	high (STR_64+12)
  7544  00747C  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7545  00747E  EC55  F029         	call	_strcmp	;wreg free
  7546  007482  51C0               	movf	?_strcmp& (0+255),w,b
  7547  007484  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7548  007486  E115               	bnz	l9813
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;MOTEapp.c: 539: {
  7552                           ;MOTEapp.c: 540: oled_clear();
  7553  007488  ECA6  F022         	call	_oled_clear	;wreg free
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;MOTEapp.c: 541: oled_putString("wait mac_tx_ok",0,0);
  7557  00748C  0EBF               	movlw	low STR_64
  7558  00748E  6FCD               	movwf	oled_putString@string& (0+255),b
  7559  007490  0E7D               	movlw	high STR_64
  7560  007492  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7561  007494  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7562  007496  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7563  007498  ECC8  F027         	call	_oled_putString	;wreg free
  7564                           
  7565                           ;MOTEapp.c: 542: moteApp_delayms(3000);
  7566  00749C  0E0B               	movlw	11
  7567  00749E  0100               	movlb	0	; () banked
  7568  0074A0  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7569  0074A2  0EB8               	movlw	184
  7570  0074A4  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7571  0074A6  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;MOTEapp.c: 543: activeState = moteWaitIniTxOk;
  7575  0074AA  0E0C               	movlw	12
  7576  0074AC  6F94               	movwf	_activeState& (0+255),b
  7577  0074AE                     l9811:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;MOTEapp.c: 544: LATAbits.LATA7 = 1;
  7581  0074AE  8E89               	bsf	3977,7,c	;volatile
  7582                           
  7583                           ;MOTEapp.c: 545: }
  7584  0074B0  D176               	goto	l9927
  7585  0074B2                     l9813:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;MOTEapp.c: 547: else
  7589                           ;MOTEapp.c: 548: {
  7590                           ;MOTEapp.c: 549: oled_clear();
  7591  0074B2  ECA6  F022         	call	_oled_clear	;wreg free
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;MOTEapp.c: 550: oled_putString("moteIniTx",0,0);
  7595  0074B6  0E20               	movlw	low STR_65
  7596  0074B8  6FCD               	movwf	oled_putString@string& (0+255),b
  7597  0074BA  0E7F               	movlw	high STR_65
  7598  0074BC  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7599  0074BE  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7600  0074C0  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7601  0074C2  ECC8  F027         	call	_oled_putString	;wreg free
  7602                           
  7603                           ;MOTEapp.c: 551: activeState = moteStartup;
  7604  0074C6  0100               	movlb	0	; () banked
  7605  0074C8  6B94               	clrf	_activeState& (0+255),b
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;MOTEapp.c: 552: moteApp_delayms(500);
  7609  0074CA  0E01               	movlw	1
  7610  0074CC  6FC1               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7611  0074CE  0EF4               	movlw	244
  7612  0074D0  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7613  0074D2  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 553: LATAbits.LATA6 = 0;
  7617  0074D6  9C89               	bcf	3977,6,c	;volatile
  7618  0074D8  D162               	goto	l9927
  7619  0074DA                     l428:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;MOTEapp.c: 559: {
  7623                           ;MOTEapp.c: 561: {
  7624                           ;MOTEapp.c: 562: LATAbits.LATA7 = 1;
  7625  0074DA  8E89               	bsf	3977,7,c	;volatile
  7626                           
  7627                           ;MOTEapp.c: 563: LATAbits.LATA6 = 0;
  7628  0074DC  9C89               	bcf	3977,6,c	;volatile
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;MOTEapp.c: 565: oled_clear();
  7632  0074DE  ECA6  F022         	call	_oled_clear	;wreg free
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;MOTEapp.c: 566: oled_putString("resting",0,0);
  7636  0074E2  0E9F               	movlw	low STR_66
  7637  0074E4  6FCD               	movwf	oled_putString@string& (0+255),b
  7638  0074E6  0E7F               	movlw	high STR_66
  7639  0074E8  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7640  0074EA  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7641  0074EC  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7642  0074EE  ECC8  F027         	call	_oled_putString	;wreg free
  7643                           
  7644                           ;MOTEapp.c: 568: moteApp_delayms(80);
  7645  0074F2  0100               	movlb	0	; () banked
  7646  0074F4  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7647  0074F6  0E50               	movlw	80
  7648  0074F8  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7649  0074FA  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;MOTEapp.c: 569: ch = 0;
  7653  0074FE  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7654  007500  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7655  007502                     l9831:
  7656                           
  7657                           ;MOTEapp.c: 570: activeState = moteRest;
  7658  007502  0E0D               	movlw	13
  7659  007504  D0BD               	goto	L14
  7660  007506                     L13:
  7661  007506  6F94               	movwf	_activeState& (0+255),b
  7662                           
  7663                           ;MOTEapp.c: 571: }
  7664                           ;MOTEapp.c: 592: }
  7665                           ;MOTEapp.c: 593: break;
  7666  007508  D14A               	goto	l9927
  7667  00750A                     l9833:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;MOTEapp.c: 595: ch++;
  7671  00750A  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7672  00750C  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;MOTEapp.c: 596: moteApp_delayms(100);
  7676  00750E  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7677  007510  0E64               	movlw	100
  7678  007512  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7679  007514  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;MOTEapp.c: 597: if (ch>20) {
  7683  007518  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7684  00751A  D141               	goto	l9927
  7685  00751C  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7686  00751E  E104               	bnz	u8090
  7687  007520  0E15               	movlw	21
  7688  007522  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7689  007524  E201 D13B          	bnc	l9927
  7690  007528                     u8090:
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;MOTEapp.c: 598: ch = 0;
  7694  007528  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7695  00752A  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7696                           
  7697                           ;MOTEapp.c: 600: uint16_t Traw = 0;
  7698  00752C  6BEB               	clrf	moteJoiningProcess@Traw& (0+255),b
  7699  00752E  6BEC               	clrf	(moteJoiningProcess@Traw+1)& (0+255),b
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;MOTEapp.c: 601: moteApp_delayms(10);
  7703  007530  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7704  007532  0E0A               	movlw	10
  7705  007534  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7706  007536  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;MOTEapp.c: 602: for(uint8_t i = 32; i>0; i--)
  7710  00753A  0E20               	movlw	32
  7711  00753C  6FED               	movwf	moteJoiningProcess@i& (0+255),b
  7712  00753E                     l9845:
  7713                           
  7714                           ; BSR set to: 0
  7715  00753E  51ED               	movf	moteJoiningProcess@i& (0+255),w,b
  7716  007540  E010               	bz	l9855
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;MOTEapp.c: 603: {
  7720                           ;MOTEapp.c: 604: light = (light + ADC_GetConversion(Light_channel)) / 2;
  7721  007542  0E03               	movlw	3
  7722  007544  ECDE  F024         	call	_ADC_GetConversion
  7723  007548  517D               	movf	_light& (0+255),w,b
  7724  00754A  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  7725  00754C  517E               	movf	(_light+1)& (0+255),w,b
  7726  00754E  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  7727  007550  90D8               	bcf	status,0,c
  7728  007552  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  7729  007554  6FE6               	movwf	??_moteJoiningProcess& (0+255),b
  7730  007556  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  7731  007558  6F7D               	movwf	_light& (0+255),b
  7732  00755A  C0E6  F07E         	movff	??_moteJoiningProcess,_light+1
  7733                           
  7734                           ; BSR set to: 0
  7735  00755E  07ED               	decf	moteJoiningProcess@i& (0+255),f,b
  7736  007560  D7EE               	goto	l9845
  7737  007562                     l9855:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;MOTEapp.c: 605: }
  7741                           ;MOTEapp.c: 606: moteApp_delayms(10);
  7742  007562  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7743  007564  0E0A               	movlw	10
  7744  007566  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7745  007568  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;MOTEapp.c: 607: for(uint8_t i = 32; i>0; i--)
  7749  00756C  0E20               	movlw	32
  7750  00756E  6FEE               	movwf	moteJoiningProcess@i_1350& (0+255),b
  7751  007570                     l9859:
  7752                           
  7753                           ; BSR set to: 0
  7754  007570  51EE               	movf	moteJoiningProcess@i_1350& (0+255),w,b
  7755  007572  E010               	bz	l9869
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;MOTEapp.c: 608: {
  7759                           ;MOTEapp.c: 609: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  7760  007574  0E02               	movlw	2
  7761  007576  ECDE  F024         	call	_ADC_GetConversion
  7762  00757A  51EB               	movf	moteJoiningProcess@Traw& (0+255),w,b
  7763  00757C  27C0               	addwf	?_ADC_GetConversion& (0+255),f,b
  7764  00757E  51EC               	movf	(moteJoiningProcess@Traw+1)& (0+255),w,b
  7765  007580  23C1               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  7766  007582  90D8               	bcf	status,0,c
  7767  007584  31C1               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  7768  007586  6FE6               	movwf	??_moteJoiningProcess& (0+255),b
  7769  007588  31C0               	rrcf	?_ADC_GetConversion& (0+255),w,b
  7770  00758A  6FEB               	movwf	moteJoiningProcess@Traw& (0+255),b
  7771  00758C  C0E6  F0EC         	movff	??_moteJoiningProcess,moteJoiningProcess@Traw+1
  7772                           
  7773                           ; BSR set to: 0
  7774  007590  07EE               	decf	moteJoiningProcess@i_1350& (0+255),f,b
  7775  007592  D7EE               	goto	l9859
  7776  007594                     l9869:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;MOTEapp.c: 610: }
  7780                           ;MOTEapp.c: 611: temperature = ADC_TempConversion(Traw);
  7781  007594  51EB               	movf	moteJoiningProcess@Traw& (0+255),w,b
  7782  007596  EC2B  F023         	call	_ADC_TempConversion
  7783  00759A  6F83               	movwf	_temperature& (0+255),b
  7784  00759C  6B84               	clrf	(_temperature+1)& (0+255),b
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;MOTEapp.c: 612: m10SecTicker = 0;
  7788  00759E  6B99               	clrf	_m10SecTicker& (0+255),b
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;MOTEapp.c: 614: pkts++;
  7792  0075A0  4B81               	infsnz	_pkts& (0+255),f,b
  7793  0075A2  2B82               	incf	(_pkts+1)& (0+255),f,b
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;MOTEapp.c: 617: oled_clear();
  7797  0075A4  ECA6  F022         	call	_oled_clear	;wreg free
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;MOTEapp.c: 618: oled_putString("  Sensor Data  ",0,0);
  7801  0075A8  0E5F               	movlw	low STR_67
  7802  0075AA  6FCD               	movwf	oled_putString@string& (0+255),b
  7803  0075AC  0E7D               	movlw	high STR_67
  7804  0075AE  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7805  0075B0  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7806  0075B2  6BD0               	clrf	oled_putString@start_page& (0+255),b
  7807  0075B4  ECC8  F027         	call	_oled_putString	;wreg free
  7808                           
  7809                           ;MOTEapp.c: 619: oled_putString("Light:",0,1);
  7810  0075B8  0EDB               	movlw	low STR_68
  7811  0075BA  0100               	movlb	0	; () banked
  7812  0075BC  6FCD               	movwf	oled_putString@string& (0+255),b
  7813  0075BE  0E7F               	movlw	high STR_68
  7814  0075C0  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7815  0075C2  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7816  0075C4  0E01               	movlw	1
  7817  0075C6  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7818  0075C8  ECC8  F027         	call	_oled_putString	;wreg free
  7819                           
  7820                           ;MOTEapp.c: 620: oled_putString("Temp :",0,2);
  7821  0075CC  0EC6               	movlw	low STR_69
  7822  0075CE  0100               	movlb	0	; () banked
  7823  0075D0  6FCD               	movwf	oled_putString@string& (0+255),b
  7824  0075D2  0E7F               	movlw	high STR_69
  7825  0075D4  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7826  0075D6  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7827  0075D8  0E02               	movlw	2
  7828  0075DA  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7829  0075DC  ECC8  F027         	call	_oled_putString	;wreg free
  7830                           
  7831                           ;MOTEapp.c: 621: oled_putString("C",12,2);
  7832  0075E0  0EAF               	movlw	low (STR_38+47)
  7833  0075E2  0100               	movlb	0	; () banked
  7834  0075E4  6FCD               	movwf	oled_putString@string& (0+255),b
  7835  0075E6  0E7B               	movlw	high (STR_38+47)
  7836  0075E8  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7837  0075EA  0E0C               	movlw	12
  7838  0075EC  6FCF               	movwf	oled_putString@station_dot& (0+255),b
  7839  0075EE  0E02               	movlw	2
  7840  0075F0  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7841  0075F2  ECC8  F027         	call	_oled_putString	;wreg free
  7842                           
  7843                           ;MOTEapp.c: 622: oled_putUint16(light,6,1);
  7844  0075F6  C07D  F0D2         	movff	_light,oled_putUint16@number
  7845  0075FA  C07E  F0D3         	movff	_light+1,oled_putUint16@number+1
  7846  0075FE  0E06               	movlw	6
  7847  007600  0100               	movlb	0	; () banked
  7848  007602  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  7849  007604  0E01               	movlw	1
  7850  007606  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  7851  007608  EC95  F030         	call	_oled_putUint16	;wreg free
  7852                           
  7853                           ;MOTEapp.c: 623: oled_putUint16(temperature,6,2);
  7854  00760C  C083  F0D2         	movff	_temperature,oled_putUint16@number
  7855  007610  C084  F0D3         	movff	_temperature+1,oled_putUint16@number+1
  7856  007614  0E06               	movlw	6
  7857  007616  0100               	movlb	0	; () banked
  7858  007618  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  7859  00761A  0E02               	movlw	2
  7860  00761C  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  7861  00761E  EC95  F030         	call	_oled_putUint16	;wreg free
  7862                           
  7863                           ;MOTEapp.c: 624: oled_putString("Pkts|:",0,3);
  7864  007622  0EE2               	movlw	low STR_71
  7865  007624  0100               	movlb	0	; () banked
  7866  007626  6FCD               	movwf	oled_putString@string& (0+255),b
  7867  007628  0E7F               	movlw	high STR_71
  7868  00762A  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7869  00762C  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7870  00762E  0E03               	movlw	3
  7871  007630  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7872  007632  ECC8  F027         	call	_oled_putString	;wreg free
  7873                           
  7874                           ;MOTEapp.c: 625: oled_putUint16(pkts,6,3);
  7875  007636  C081  F0D2         	movff	_pkts,oled_putUint16@number
  7876  00763A  C082  F0D3         	movff	_pkts+1,oled_putUint16@number+1
  7877  00763E  0E06               	movlw	6
  7878  007640  0100               	movlb	0	; () banked
  7879  007642  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  7880  007644  0E03               	movlw	3
  7881  007646  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  7882  007648  EC95  F030         	call	_oled_putUint16	;wreg free
  7883                           
  7884                           ;MOTEapp.c: 628: sprintf(cmd,"mac tx uncnf 1 %04X%04X",
  7885                           ;MOTEapp.c: 629: temperature, light);
  7886  00764C  0E58               	movlw	low _cmd
  7887  00764E  0100               	movlb	0	; () banked
  7888  007650  6FCC               	movwf	sprintf@sp& (0+255),b
  7889  007652  0E01               	movlw	high _cmd
  7890  007654  6FCD               	movwf	(sprintf@sp+1)& (0+255),b
  7891  007656  0E93               	movlw	low STR_72
  7892  007658  6FCE               	movwf	sprintf@f& (0+255),b
  7893  00765A  0E7C               	movlw	high STR_72
  7894  00765C  6FCF               	movwf	(sprintf@f+1)& (0+255),b
  7895  00765E  C083  F0D0         	movff	_temperature,?_sprintf+4
  7896  007662  C084  F0D1         	movff	_temperature+1,?_sprintf+5
  7897  007666  C07D  F0D2         	movff	_light,?_sprintf+6
  7898  00766A  C07E  F0D3         	movff	_light+1,?_sprintf+7
  7899  00766E  EC37  F036         	call	_sprintf	;wreg free
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;MOTEapp.c: 630: sendCommand(cmd);
  7903  007672  0E58               	movlw	low _cmd
  7904  007674  6FC1               	movwf	sendCommand@string& (0+255),b
  7905  007676  0E01               	movlw	high _cmd
  7906  007678  6FC2               	movwf	(sendCommand@string+1)& (0+255),b
  7907  00767A  ECB2  F026         	call	_sendCommand	;wreg free
  7908                           
  7909                           ;MOTEapp.c: 632: activeState = moteTxUncnf;
  7910  00767E  0E0E               	movlw	14
  7911  007680                     L14:
  7912  007680  0100               	movlb	0	; () banked
  7913  007682  D741               	goto	L13
  7914  007684                     l9899:
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;MOTEapp.c: 637: {
  7918                           ;MOTEapp.c: 639: {
  7919                           ;MOTEapp.c: 640: oled_putString("Pkts/:",0,3);
  7920  007684  0ED4               	movlw	low STR_73
  7921  007686  6FCD               	movwf	oled_putString@string& (0+255),b
  7922  007688  0E7F               	movlw	high STR_73
  7923  00768A  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7924  00768C  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7925  00768E  0E03               	movlw	3
  7926  007690  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7927  007692  ECC8  F027         	call	_oled_putString	;wreg free
  7928                           
  7929                           ;MOTEapp.c: 641: oled_putUint16(pkts,6,3);
  7930  007696  C081  F0D2         	movff	_pkts,oled_putUint16@number
  7931  00769A  C082  F0D3         	movff	_pkts+1,oled_putUint16@number+1
  7932  00769E  0E06               	movlw	6
  7933  0076A0  0100               	movlb	0	; () banked
  7934  0076A2  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  7935  0076A4  0E03               	movlw	3
  7936  0076A6  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  7937  0076A8  EC95  F030         	call	_oled_putUint16	;wreg free
  7938                           
  7939                           ;MOTEapp.c: 642: moteApp_delayms(80);
  7940  0076AC  0100               	movlb	0	; () banked
  7941  0076AE  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7942  0076B0  0E50               	movlw	80
  7943  0076B2  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  7944  0076B4  EC9B  F023         	call	_moteApp_delayms	;wreg free
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;MOTEapp.c: 643: activeState = moteTxWait;
  7948  0076B8  0E0F               	movlw	15
  7949  0076BA  D725               	goto	L13
  7950  0076BC                     l9905:
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;MOTEapp.c: 656: if ( messageReady )
  7954  0076BC  51EF               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7955  0076BE  E06F               	bz	l9927
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;MOTEapp.c: 657: {
  7959                           ;MOTEapp.c: 658: if(strcmp(modemResonseBuffer, "mac_tx_ok") == 0)
  7960  0076C0  0E98               	movlw	low _modemResonseBuffer
  7961  0076C2  6FC0               	movwf	strcmp@s1& (0+255),b
  7962  0076C4  0E01               	movlw	high _modemResonseBuffer
  7963  0076C6  6FC1               	movwf	(strcmp@s1+1)& (0+255),b
  7964  0076C8  0EC4               	movlw	low (STR_64+5)
  7965  0076CA  6FC2               	movwf	strcmp@s2& (0+255),b
  7966  0076CC  0E7D               	movlw	high (STR_64+5)
  7967  0076CE  6FC3               	movwf	(strcmp@s2+1)& (0+255),b
  7968  0076D0  EC55  F029         	call	_strcmp	;wreg free
  7969  0076D4  51C0               	movf	?_strcmp& (0+255),w,b
  7970  0076D6  11C1               	iorwf	(?_strcmp+1)& (0+255),w,b
  7971  0076D8  E162               	bnz	l9927
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;MOTEapp.c: 659: {
  7975                           ;MOTEapp.c: 660: oled_putString("Pkts-:",0,3);
  7976  0076DA  0ECD               	movlw	low STR_75
  7977  0076DC  6FCD               	movwf	oled_putString@string& (0+255),b
  7978  0076DE  0E7F               	movlw	high STR_75
  7979  0076E0  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
  7980  0076E2  6BCF               	clrf	oled_putString@station_dot& (0+255),b
  7981  0076E4  0E03               	movlw	3
  7982  0076E6  6FD0               	movwf	oled_putString@start_page& (0+255),b
  7983  0076E8  ECC8  F027         	call	_oled_putString	;wreg free
  7984                           
  7985                           ;MOTEapp.c: 661: oled_putUint16(pkts,6,3);
  7986  0076EC  C081  F0D2         	movff	_pkts,oled_putUint16@number
  7987  0076F0  C082  F0D3         	movff	_pkts+1,oled_putUint16@number+1
  7988  0076F4  0E06               	movlw	6
  7989  0076F6  0100               	movlb	0	; () banked
  7990  0076F8  6FD4               	movwf	oled_putUint16@station_dot& (0+255),b
  7991  0076FA  0E03               	movlw	3
  7992  0076FC  6FD5               	movwf	oled_putUint16@start_page& (0+255),b
  7993  0076FE  EC95  F030         	call	_oled_putUint16	;wreg free
  7994  007702  D6FF               	goto	l9831
  7995  007704                     l9913:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;MOTEapp.c: 668: joiningComplete = 1;
  7999  007704  0E01               	movlw	1
  8000  007706  6FEA               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;MOTEapp.c: 669: moteApp_delayms(80);
  8004  007708  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8005  00770A  0E50               	movlw	80
  8006  00770C  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  8007  00770E  EC9B  F023         	call	_moteApp_delayms	;wreg free
  8008                           
  8009                           ;MOTEapp.c: 670: break;
  8010  007712  D045               	goto	l9927
  8011  007714                     l9917:
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;MOTEapp.c: 672: DATAEE_WriteByte(0x00, 0x00);
  8015  007714  0E00               	movlw	0
  8016  007716  6BC0               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8017  007718  ECFB  F024         	call	_DATAEE_WriteByte
  8018  00771C                     l441:
  8019  00771C  B082               	btfsc	3970,0,c	;volatile
  8020  00771E  D002               	goto	l9921
  8021  007720  A282               	btfss	3970,1,c	;volatile
  8022  007722  D7FC               	goto	l441
  8023  007724                     l9921:
  8024                           
  8025                           ;MOTEapp.c: 674: moteApp_delayms(40);
  8026  007724  0100               	movlb	0	; () banked
  8027  007726  6BC1               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8028  007728  0E28               	movlw	40
  8029  00772A  6FC0               	movwf	moteApp_delayms@length& (0+255),b
  8030  00772C  EC9B  F023         	call	_moteApp_delayms	;wreg free
  8031  007730  00FF               	reset		;# 
  8032                           
  8033                           ;MOTEapp.c: 677: break;
  8034  007732  D035               	goto	l9927
  8035  007734                     l9925:
  8036  007734  0100               	movlb	0	; () banked
  8037  007736  5194               	movf	_activeState& (0+255),w,b
  8038                           
  8039                           ; Switch size 1, requested type "speed"
  8040                           ; Number of cases is 18, Range of values is 0 to 17
  8041                           ; switch strategies available:
  8042                           ; Name         Instructions Cycles
  8043                           ; simple_byte           55    28 (average)
  8044                           ;	Chosen strategy is simple_byte
  8045  007738  E101 D47B          	bz	l372
  8046  00773C  0A01               	xorlw	1	; case 1
  8047  00773E  E101 D496          	bz	l9619
  8048  007742  0A03               	xorlw	3	; case 2
  8049  007744  E101 D4D2          	bz	l9641
  8050  007748  0A01               	xorlw	1	; case 3
  8051  00774A  E101 D4F7          	bz	l9655
  8052  00774E  0A07               	xorlw	7	; case 4
  8053  007750  E101 D51C          	bz	l9669
  8054  007754  0A01               	xorlw	1	; case 5
  8055  007756  E101 D541          	bz	l9683
  8056  00775A  0A03               	xorlw	3	; case 6
  8057  00775C  E101 D592          	bz	l9713
  8058  007760  0A01               	xorlw	1	; case 7
  8059  007762  E101 D564          	bz	l9697
  8060  007766  0A0F               	xorlw	15	; case 8
  8061  007768  E101 D5F0          	bz	l9745
  8062  00776C  0A01               	xorlw	1	; case 9
  8063  00776E  E101 D61B          	bz	l9761
  8064  007772  0A03               	xorlw	3	; case 10
  8065  007774  E101 D63B          	bz	l9773
  8066  007778  0A01               	xorlw	1	; case 11
  8067  00777A  E101 D675          	bz	l9799
  8068  00777E  0A07               	xorlw	7	; case 12
  8069  007780  E101 D6AB          	bz	l428
  8070  007784  0A01               	xorlw	1	; case 13
  8071  007786  E101 D6C0          	bz	l9833
  8072  00778A  0A03               	xorlw	3	; case 14
  8073  00778C  E101 D77A          	bz	l9899
  8074  007790  0A01               	xorlw	1	; case 15
  8075  007792  E094               	bz	l9905
  8076  007794  0A1F               	xorlw	31	; case 16
  8077  007796  E0B6               	bz	l9913
  8078  007798  0A01               	xorlw	1	; case 17
  8079  00779A  E0BC               	bz	l9917
  8080  00779C  D449               	goto	l368
  8081  00779E                     l9927:
  8082                           
  8083                           ;MOTEapp.c: 679: return joiningComplete;
  8084  00779E  0100               	movlb	0	; () banked
  8085  0077A0  51EA               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8086                           
  8087                           ; BSR set to: 0
  8088  0077A2  0012               	return		;funcret
  8089  0077A4                     __end_of_moteJoiningProcess:
  8090                           	opt stack 0
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           intcon	equ	0xFF2
  8096                           postinc0	equ	0xFEE
  8097                           wreg	equ	0xFE8
  8098                           indf2	equ	0xFDF
  8099                           fsr2h	equ	0xFDA
  8100                           fsr2l	equ	0xFD9
  8101                           status	equ	0xFD8
  8102                           
  8103 ;; *************** function _strncmp *****************
  8104 ;; Defined at:
  8105 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8108 ;;		 -> modemResonseBuffer(64), 
  8109 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8110 ;;		 -> STR_31(5), 
  8111 ;;  len             2    4[BANK0 ] unsigned int 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  2    0[BANK0 ] int 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8118 ;; Tracked objects:
  8119 ;;		On entry : F/0
  8120 ;;		On exit  : F/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8123 ;;      Params:         0       6       0       0       0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8126 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8127 ;;Total ram usage:        7 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:   11
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_moteJoiningProcess
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text23
  8138  004FF6                     __ptext23:
  8139                           	opt stack 0
  8140  004FF6                     _strncmp:
  8141                           	opt stack 17
  8142                           
  8143                           ; BSR set to: 0
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;incstack = 0
  8147  004FF6  D029               	goto	l9011
  8148  004FF8                     l9001:
  8149                           
  8150                           ; BSR set to: 0
  8151  004FF8  C0C0  FFD9         	movff	strncmp@s1,fsr2l
  8152  004FFC  C0C1  FFDA         	movff	strncmp@s1+1,fsr2h
  8153  005000  50DF               	movf	indf2,w,c
  8154  005002  E00D               	bz	l9005
  8155                           
  8156                           ; BSR set to: 0
  8157  005004  C0C0  FFD9         	movff	strncmp@s1,fsr2l
  8158  005008  C0C1  FFDA         	movff	strncmp@s1+1,fsr2h
  8159  00500C  50DF               	movf	indf2,w,c
  8160  00500E  6FC6               	movwf	??_strncmp& (0+255),b
  8161  005010  C0C2  FFF6         	movff	strncmp@s2,tblptrl
  8162  005014  C0C3  FFF7         	movff	strncmp@s2+1,tblptrh
  8163  005018                     	if	0	;tblptru may be non-zero
  8164  005018                     	endif
  8165  005018                     	if	0	;tblptru may be non-zero
  8166  005018                     	endif
  8167  005018  0008               	tblrd		*
  8168  00501A  18F5               	xorwf	tablat,w,c
  8169  00501C  E012               	bz	l9009
  8170  00501E                     l9005:
  8171                           
  8172                           ; BSR set to: 0
  8173  00501E  C0C0  FFD9         	movff	strncmp@s1,fsr2l
  8174  005022  C0C1  FFDA         	movff	strncmp@s1+1,fsr2h
  8175  005026  50DF               	movf	indf2,w,c
  8176  005028  6FC6               	movwf	??_strncmp& (0+255),b
  8177  00502A  C0C2  FFF6         	movff	strncmp@s2,tblptrl
  8178  00502E  C0C3  FFF7         	movff	strncmp@s2+1,tblptrh
  8179  005032                     	if	0	;tblptru may be non-zero
  8180  005032                     	endif
  8181  005032                     	if	0	;tblptru may be non-zero
  8182  005032                     	endif
  8183  005032  0008               	tblrd		*
  8184  005034  50F5               	movf	tablat,w,c
  8185  005036  5DC6               	subwf	??_strncmp& (0+255),w,b
  8186  005038  6FC0               	movwf	?_strncmp& (0+255),b
  8187  00503A  6BC1               	clrf	(?_strncmp+1)& (0+255),b
  8188  00503C  A0D8               	btfss	status,0,c
  8189  00503E  07C1               	decf	(?_strncmp+1)& (0+255),f,b
  8190  005040  0012               	return	
  8191  005042                     l9009:
  8192                           
  8193                           ; BSR set to: 0
  8194  005042  4BC0               	infsnz	strncmp@s1& (0+255),f,b
  8195  005044  2BC1               	incf	(strncmp@s1+1)& (0+255),f,b
  8196  005046  4BC2               	infsnz	strncmp@s2& (0+255),f,b
  8197  005048  2BC3               	incf	(strncmp@s2+1)& (0+255),f,b
  8198  00504A                     l9011:
  8199                           
  8200                           ; BSR set to: 0
  8201  00504A  07C4               	decf	strncmp@len& (0+255),f,b
  8202  00504C  A0D8               	btfss	status,0,c
  8203  00504E  07C5               	decf	(strncmp@len+1)& (0+255),f,b
  8204  005050  29C4               	incf	strncmp@len& (0+255),w,b
  8205  005052  E1D2               	bnz	l9001
  8206  005054  29C5               	incf	(strncmp@len+1)& (0+255),w,b
  8207  005056  E1D0               	bnz	l9001
  8208                           
  8209                           ; BSR set to: 0
  8210  005058  6BC0               	clrf	?_strncmp& (0+255),b
  8211  00505A  6BC1               	clrf	(?_strncmp+1)& (0+255),b
  8212                           
  8213                           ; BSR set to: 0
  8214  00505C  0012               	return		;funcret
  8215  00505E                     __end_of_strncmp:
  8216                           	opt stack 0
  8217                           tblptru	equ	0xFF8
  8218                           tblptrh	equ	0xFF7
  8219                           tblptrl	equ	0xFF6
  8220                           tablat	equ	0xFF5
  8221                           intcon	equ	0xFF2
  8222                           postinc0	equ	0xFEE
  8223                           wreg	equ	0xFE8
  8224                           indf2	equ	0xFDF
  8225                           fsr2h	equ	0xFDA
  8226                           fsr2l	equ	0xFD9
  8227                           status	equ	0xFD8
  8228                           
  8229 ;; *************** function _strcmp *****************
  8230 ;; Defined at:
  8231 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8234 ;;		 -> modemResonseBuffer(64), 
  8235 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8236 ;;		 -> STR_74(10), STR_63(3), STR_59(9), STR_57(3), 
  8237 ;;		 -> STR_54(3), STR_49(3), STR_46(3), STR_43(3), 
  8238 ;;		 -> STR_40(3), STR_37(3), STR_34(3), 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  t1              1    8[BANK0 ] unsigned char 
  8241 ;;  t2              1    7[BANK0 ] unsigned char 
  8242 ;;  t0              1    6[BANK0 ] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  2    0[BANK0 ] int 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8247 ;; Tracked objects:
  8248 ;;		On entry : F/0
  8249 ;;		On exit  : F/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8252 ;;      Params:         0       4       0       0       0       0       0       0       0
  8253 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8254 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8255 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8256 ;;Total ram usage:        9 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:   11
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_moteJoiningProcess
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text24
  8267  0052AA                     __ptext24:
  8268                           	opt stack 0
  8269  0052AA                     _strcmp:
  8270                           	opt stack 17
  8271  0052AA                     l9013:
  8272                           
  8273                           ; BSR set to: 0
  8274  0052AA  C0C0  FFD9         	movff	strcmp@s1,fsr2l
  8275  0052AE  C0C1  FFDA         	movff	strcmp@s1+1,fsr2h
  8276  0052B2  50DF               	movf	indf2,w,c
  8277  0052B4  6FC6               	movwf	strcmp@t0& (0+255),b
  8278                           
  8279                           ; BSR set to: 0
  8280  0052B6  C0C2  FFF6         	movff	strcmp@s2,tblptrl
  8281  0052BA  C0C3  FFF7         	movff	strcmp@s2+1,tblptrh
  8282  0052BE                     	if	0	;tblptru may be non-zero
  8283  0052BE                     	endif
  8284  0052BE                     	if	0	;tblptru may be non-zero
  8285  0052BE                     	endif
  8286  0052BE  0008               	tblrd		*
  8287  0052C0  CFF5 F0C8          	movff	tablat,strcmp@t1
  8288                           
  8289                           ; BSR set to: 0
  8290  0052C4  51C6               	movf	strcmp@t0& (0+255),w,b
  8291  0052C6  E02C               	bz	l9043
  8292                           
  8293                           ; BSR set to: 0
  8294  0052C8  0E02               	movlw	2
  8295  0052CA  27C0               	addwf	strcmp@s1& (0+255),f,b
  8296  0052CC  0E00               	movlw	0
  8297  0052CE  23C1               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8298  0052D0  51C8               	movf	strcmp@t1& (0+255),w,b
  8299  0052D2  19C6               	xorwf	strcmp@t0& (0+255),w,b
  8300  0052D4  E125               	bnz	l9043
  8301                           
  8302                           ; BSR set to: 0
  8303  0052D6  EE2F F0FF          	lfsr	2,-1
  8304  0052DA  51C0               	movf	strcmp@s1& (0+255),w,b
  8305  0052DC  26D9               	addwf	fsr2l,f,c
  8306  0052DE  51C1               	movf	(strcmp@s1+1)& (0+255),w,b
  8307  0052E0  22DA               	addwfc	fsr2h,f,c
  8308  0052E2  50DF               	movf	indf2,w,c
  8309  0052E4  6FC7               	movwf	strcmp@t2& (0+255),b
  8310                           
  8311                           ; BSR set to: 0
  8312  0052E6  29C2               	incf	strcmp@s2& (0+255),w,b
  8313  0052E8  6FC4               	movwf	??_strcmp& (0+255),b
  8314  0052EA  0E00               	movlw	0
  8315  0052EC  21C3               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8316  0052EE  6FC5               	movwf	(??_strcmp+1)& (0+255),b
  8317  0052F0  C0C4  FFF6         	movff	??_strcmp,tblptrl
  8318  0052F4  C0C5  FFF7         	movff	??_strcmp+1,tblptrh
  8319  0052F8                     	if	0	;tblptru may be non-zero
  8320  0052F8                     	endif
  8321  0052F8                     	if	0	;tblptru may be non-zero
  8322  0052F8                     	endif
  8323  0052F8  0008               	tblrd		*
  8324  0052FA  CFF5 F0C8          	movff	tablat,strcmp@t1
  8325                           
  8326                           ; BSR set to: 0
  8327  0052FE  51C7               	movf	strcmp@t2& (0+255),w,b
  8328  005300  E107               	bnz	l9035
  8329  005302                     l9031:
  8330                           
  8331                           ; BSR set to: 0
  8332  005302  51C8               	movf	strcmp@t1& (0+255),w,b
  8333  005304  5DC7               	subwf	strcmp@t2& (0+255),w,b
  8334  005306  6FC0               	movwf	?_strcmp& (0+255),b
  8335  005308  6BC1               	clrf	(?_strcmp+1)& (0+255),b
  8336  00530A  A0D8               	btfss	status,0,c
  8337  00530C  07C1               	decf	(?_strcmp+1)& (0+255),f,b
  8338  00530E  0012               	return	
  8339  005310                     l9035:
  8340                           
  8341                           ; BSR set to: 0
  8342  005310  0E02               	movlw	2
  8343  005312  27C2               	addwf	strcmp@s2& (0+255),f,b
  8344  005314  0E00               	movlw	0
  8345  005316  23C3               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8346  005318  51C7               	movf	strcmp@t2& (0+255),w,b
  8347  00531A  19C8               	xorwf	strcmp@t1& (0+255),w,b
  8348  00531C  E1F2               	bnz	l9031
  8349  00531E  D7C5               	goto	l9013
  8350  005320                     l9043:
  8351                           
  8352                           ; BSR set to: 0
  8353  005320  51C8               	movf	strcmp@t1& (0+255),w,b
  8354  005322  5DC6               	subwf	strcmp@t0& (0+255),w,b
  8355  005324  6FC0               	movwf	?_strcmp& (0+255),b
  8356  005326  6BC1               	clrf	(?_strcmp+1)& (0+255),b
  8357  005328  A0D8               	btfss	status,0,c
  8358  00532A  07C1               	decf	(?_strcmp+1)& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 0
  8361  00532C  0012               	return		;funcret
  8362  00532E                     __end_of_strcmp:
  8363                           	opt stack 0
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           intcon	equ	0xFF2
  8369                           postinc0	equ	0xFEE
  8370                           wreg	equ	0xFE8
  8371                           indf2	equ	0xFDF
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _sprintf *****************
  8377 ;; Defined at:
  8378 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8381 ;;		 -> cmd(64), 
  8382 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8383 ;;		 -> STR_72(24), STR_50(24), 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  idx             1   24[BANK0 ] unsigned char 
  8386 ;;  tmpval          4    0        struct .
  8387 ;;  width           2   34[BANK0 ] int 
  8388 ;;  val             2   31[BANK0 ] unsigned int 
  8389 ;;  len             2   29[BANK0 ] unsigned int 
  8390 ;;  cp              2   26[BANK0 ] PTR const unsigned char 
  8391 ;;		 -> STR_101(7), STR_52(4), STR_51(3), 
  8392 ;;  c               1   36[BANK0 ] char 
  8393 ;;  flag            1   33[BANK0 ] unsigned char 
  8394 ;;  ap              1   28[BANK0 ] PTR void [1]
  8395 ;;		 -> ?_sprintf(2), 
  8396 ;;  prec            1   25[BANK0 ] char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2   12[BANK0 ] int 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : F/0
  8403 ;;		On exit  : F/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8406 ;;      Params:         0       8       0       0       0       0       0       0       0
  8407 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8408 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8409 ;;      Totals:         0      25       0       0       0       0       0       0       0
  8410 ;;Total ram usage:       25 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   12
  8413 ;; This function calls:
  8414 ;;		___lwdiv
  8415 ;;		___lwmod
  8416 ;;		___wmul
  8417 ;;		_isdigit
  8418 ;; This function is called by:
  8419 ;;		_moteJoiningProcess
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           	psect	text25
  8424  006C6E                     __ptext25:
  8425                           	opt stack 0
  8426  006C6E                     _sprintf:
  8427                           	opt stack 16
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;doprnt.c: 494: va_list ap;
  8431                           ;doprnt.c: 499: signed char c;
  8432                           ;doprnt.c: 501: int width;
  8433                           ;doprnt.c: 506: signed char prec;
  8434                           ;doprnt.c: 508: unsigned char flag;
  8435                           ;doprnt.c: 523: union {
  8436                           ;doprnt.c: 524: unsigned long vd;
  8437                           ;doprnt.c: 525: double integ;
  8438                           ;doprnt.c: 526: } tmpval;
  8439                           ;doprnt.c: 528: unsigned int val;
  8440                           ;doprnt.c: 529: unsigned len;
  8441                           ;doprnt.c: 530: const char * cp;
  8442                           ;doprnt.c: 533: *ap = __va_start();
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;incstack = 0
  8446  006C6E  0ED0               	movlw	low (?_sprintf+4)
  8447  006C70  6FDC               	movwf	sprintf@ap& (0+255),b
  8448                           
  8449                           ;doprnt.c: 536: while(c = *f++) {
  8450  006C72  D1C1               	goto	l9213
  8451  006C74                     l9049:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;doprnt.c: 538: if(c != '%')
  8455  006C74  0E25               	movlw	37
  8456  006C76  19E4               	xorwf	sprintf@c& (0+255),w,b
  8457  006C78  E009               	bz	l1835
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;doprnt.c: 540: {
  8461                           ;doprnt.c: 541: ((*sp++ = (c)));
  8462  006C7A  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  8463  006C7E  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  8464  006C82  C0E4  FFDF         	movff	sprintf@c,indf2
  8465                           
  8466                           ; BSR set to: 0
  8467  006C86  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  8468  006C88  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  8469                           
  8470                           ;doprnt.c: 542: continue;
  8471  006C8A  D1B5               	goto	l9213
  8472  006C8C                     l1835:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;doprnt.c: 543: }
  8476                           ;doprnt.c: 546: width = 0;
  8477  006C8C  6BE2               	clrf	sprintf@width& (0+255),b
  8478  006C8E  6BE3               	clrf	(sprintf@width+1)& (0+255),b
  8479                           
  8480                           ;doprnt.c: 548: flag = 0;
  8481  006C90  6BE1               	clrf	sprintf@flag& (0+255),b
  8482  006C92  D003               	goto	l9059
  8483  006C94                     l9055:
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;doprnt.c: 580: flag |= 0x04;
  8487  006C94  85E1               	bsf	sprintf@flag& (0+255),2,b
  8488                           
  8489                           ;doprnt.c: 581: f++;
  8490  006C96  4BCE               	infsnz	sprintf@f& (0+255),f,b
  8491  006C98  2BCF               	incf	(sprintf@f+1)& (0+255),f,b
  8492  006C9A                     l9059:
  8493                           
  8494                           ; BSR set to: 0
  8495  006C9A  C0CE  FFF6         	movff	sprintf@f,tblptrl
  8496  006C9E  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  8497  006CA2                     	if	0	;tblptru may be non-zero
  8498  006CA2                     	endif
  8499  006CA2                     	if	0	;tblptru may be non-zero
  8500  006CA2                     	endif
  8501  006CA2  0008               	tblrd		*
  8502  006CA4  50F5               	movf	tablat,w,c
  8503                           
  8504                           ; Switch size 1, requested type "speed"
  8505                           ; Number of cases is 1, Range of values is 48 to 48
  8506                           ; switch strategies available:
  8507                           ; Name         Instructions Cycles
  8508                           ; simple_byte            4     3 (average)
  8509                           ;	Chosen strategy is simple_byte
  8510  006CA6  0A30               	xorlw	48	; case 48
  8511  006CA8  E0F5               	bz	l9055
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8515  006CAA  C0CE  FFF6         	movff	sprintf@f,tblptrl
  8516  006CAE  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  8517  006CB2                     	if	0	;tblptru may be non-zero
  8518  006CB2                     	endif
  8519  006CB2                     	if	0	;tblptru may be non-zero
  8520  006CB2                     	endif
  8521  006CB2  0008               	tblrd		*
  8522  006CB4  50F5               	movf	tablat,w,c
  8523  006CB6  ECFB  F022         	call	_isdigit
  8524  006CBA  E201 D087          	bnc	l9109
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;doprnt.c: 598: width = 0;
  8528  006CBE  6BE2               	clrf	sprintf@width& (0+255),b
  8529  006CC0  6BE3               	clrf	(sprintf@width+1)& (0+255),b
  8530  006CC2                     l9065:
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;doprnt.c: 600: width *= 10;
  8534  006CC2  C0E2  F0C0         	movff	sprintf@width,___wmul@multiplier
  8535  006CC6  C0E3  F0C1         	movff	sprintf@width+1,___wmul@multiplier+1
  8536  006CCA  6BC3               	clrf	(___wmul@multiplicand+1)& (0+255),b
  8537  006CCC  0E0A               	movlw	10
  8538  006CCE  6FC2               	movwf	___wmul@multiplicand& (0+255),b
  8539  006CD0  EC4D  F023         	call	___wmul	;wreg free
  8540  006CD4  C0C0  F0E2         	movff	?___wmul,sprintf@width
  8541  006CD8  C0C1  F0E3         	movff	?___wmul+1,sprintf@width+1
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;doprnt.c: 601: width += *f++ - '0';
  8545  006CDC  0ED0               	movlw	208
  8546  006CDE  6FD4               	movwf	??_sprintf& (0+255),b
  8547  006CE0  69D5               	setf	(??_sprintf+1)& (0+255),b
  8548  006CE2  C0CE  FFF6         	movff	sprintf@f,tblptrl
  8549  006CE6  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  8550  006CEA                     	if	0	;tblptru may be non-zero
  8551  006CEA                     	endif
  8552  006CEA                     	if	0	;tblptru may be non-zero
  8553  006CEA                     	endif
  8554  006CEA  0008               	tblrd		*
  8555  006CEC  50F5               	movf	tablat,w,c
  8556  006CEE  6FD6               	movwf	(??_sprintf+2)& (0+255),b
  8557  006CF0  6BD7               	clrf	(??_sprintf+3)& (0+255),b
  8558  006CF2  51D4               	movf	??_sprintf& (0+255),w,b
  8559  006CF4  27D6               	addwf	(??_sprintf+2)& (0+255),f,b
  8560  006CF6  51D5               	movf	(??_sprintf+1)& (0+255),w,b
  8561  006CF8  23D7               	addwfc	(??_sprintf+3)& (0+255),f,b
  8562  006CFA  51D6               	movf	(??_sprintf+2)& (0+255),w,b
  8563  006CFC  27E2               	addwf	sprintf@width& (0+255),f,b
  8564  006CFE  51D7               	movf	(??_sprintf+3)& (0+255),w,b
  8565  006D00  23E3               	addwfc	(sprintf@width+1)& (0+255),f,b
  8566                           
  8567                           ; BSR set to: 0
  8568  006D02  4BCE               	infsnz	sprintf@f& (0+255),f,b
  8569  006D04  2BCF               	incf	(sprintf@f+1)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8573  006D06  C0CE  FFF6         	movff	sprintf@f,tblptrl
  8574  006D0A  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  8575  006D0E                     	if	0	;tblptru may be non-zero
  8576  006D0E                     	endif
  8577  006D0E                     	if	0	;tblptru may be non-zero
  8578  006D0E                     	endif
  8579  006D0E  0008               	tblrd		*
  8580  006D10  50F5               	movf	tablat,w,c
  8581  006D12  ECFB  F022         	call	_isdigit
  8582  006D16  E35A               	bnc	l9109
  8583  006D18  D7D4               	goto	l9065
  8584  006D1A                     l9073:
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;doprnt.c: 718: case 'x':
  8588                           ;doprnt.c: 721: flag |= 0x80;
  8589  006D1A  8FE1               	bsf	sprintf@flag& (0+255),7,b
  8590                           
  8591                           ;doprnt.c: 723: break;
  8592  006D1C  D06E               	goto	l1850
  8593  006D1E                     l9075:
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  8597  006D1E  51DC               	movf	sprintf@ap& (0+255),w,b
  8598  006D20  6ED9               	movwf	fsr2l,c
  8599  006D22  6ADA               	clrf	fsr2h,c
  8600  006D24  CFDE F0DA          	movff	postinc2,sprintf@cp
  8601  006D28  CFDD F0DB          	movff	postdec2,sprintf@cp+1
  8602                           
  8603                           ; BSR set to: 0
  8604  006D2C  0E02               	movlw	2
  8605  006D2E  27DC               	addwf	sprintf@ap& (0+255),f,b
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;doprnt.c: 740: if(!cp)
  8609  006D30  51DA               	movf	sprintf@cp& (0+255),w,b
  8610  006D32  11DB               	iorwf	(sprintf@cp+1)& (0+255),w,b
  8611  006D34  E104               	bnz	l9083
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;doprnt.c: 741: cp = "(null)";
  8615  006D36  0EBF               	movlw	low STR_101
  8616  006D38  6FDA               	movwf	sprintf@cp& (0+255),b
  8617  006D3A  0E7F               	movlw	high STR_101
  8618  006D3C  6FDB               	movwf	(sprintf@cp+1)& (0+255),b
  8619  006D3E                     l9083:
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;doprnt.c: 745: len = 0;
  8623  006D3E  6BDD               	clrf	sprintf@len& (0+255),b
  8624  006D40  6BDE               	clrf	(sprintf@len+1)& (0+255),b
  8625                           
  8626                           ;doprnt.c: 746: while(cp[len])
  8627  006D42  D002               	goto	l9087
  8628  006D44                     l9085:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;doprnt.c: 747: len++;
  8632  006D44  4BDD               	infsnz	sprintf@len& (0+255),f,b
  8633  006D46  2BDE               	incf	(sprintf@len+1)& (0+255),f,b
  8634  006D48                     l9087:
  8635                           
  8636                           ; BSR set to: 0
  8637  006D48  51DD               	movf	sprintf@len& (0+255),w,b
  8638  006D4A  25DA               	addwf	sprintf@cp& (0+255),w,b
  8639  006D4C  6FD4               	movwf	??_sprintf& (0+255),b
  8640  006D4E  51DE               	movf	(sprintf@len+1)& (0+255),w,b
  8641  006D50  21DB               	addwfc	(sprintf@cp+1)& (0+255),w,b
  8642  006D52  6FD5               	movwf	(??_sprintf+1)& (0+255),b
  8643  006D54  C0D4  FFF6         	movff	??_sprintf,tblptrl
  8644  006D58  C0D5  FFF7         	movff	??_sprintf+1,tblptrh
  8645  006D5C                     	if	0	;tblptru may be non-zero
  8646  006D5C                     	endif
  8647  006D5C                     	if	0	;tblptru may be non-zero
  8648  006D5C                     	endif
  8649  006D5C  0008               	tblrd		*
  8650  006D5E  50F5               	movf	tablat,w,c
  8651  006D60  E1F1               	bnz	l9085
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;doprnt.c: 757: if(width > len)
  8655  006D62  51E2               	movf	sprintf@width& (0+255),w,b
  8656  006D64  5DDD               	subwf	sprintf@len& (0+255),w,b
  8657  006D66  51E3               	movf	(sprintf@width+1)& (0+255),w,b
  8658  006D68  59DE               	subwfb	(sprintf@len+1)& (0+255),w,b
  8659  006D6A  E205               	bc	l1858
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;doprnt.c: 758: width -= len;
  8663  006D6C  51DD               	movf	sprintf@len& (0+255),w,b
  8664  006D6E  5FE2               	subwf	sprintf@width& (0+255),f,b
  8665  006D70  51DE               	movf	(sprintf@len+1)& (0+255),w,b
  8666  006D72  5BE3               	subwfb	(sprintf@width+1)& (0+255),f,b
  8667  006D74  D00B               	goto	l9097
  8668  006D76                     l1858:
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;doprnt.c: 759: else
  8672                           ;doprnt.c: 760: width = 0;
  8673  006D76  6BE2               	clrf	sprintf@width& (0+255),b
  8674  006D78  6BE3               	clrf	(sprintf@width+1)& (0+255),b
  8675  006D7A  D008               	goto	l9097
  8676  006D7C                     l9093:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;doprnt.c: 765: ((*sp++ = (' ')));
  8680  006D7C  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  8681  006D80  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  8682  006D84  0E20               	movlw	32
  8683  006D86  6EDF               	movwf	indf2,c
  8684                           
  8685                           ; BSR set to: 0
  8686  006D88  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  8687  006D8A  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  8688  006D8C                     l9097:
  8689                           
  8690                           ; BSR set to: 0
  8691  006D8C  07E2               	decf	sprintf@width& (0+255),f,b
  8692  006D8E  A0D8               	btfss	status,0,c
  8693  006D90  07E3               	decf	(sprintf@width+1)& (0+255),f,b
  8694  006D92  29E2               	incf	sprintf@width& (0+255),w,b
  8695  006D94  E1F3               	bnz	l9093
  8696  006D96  29E3               	incf	(sprintf@width+1)& (0+255),w,b
  8697  006D98  E010               	bz	l9105
  8698  006D9A  D7F0               	goto	l9093
  8699  006D9C                     l9099:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  8703  006D9C  C0DA  FFF6         	movff	sprintf@cp,tblptrl
  8704  006DA0  C0DB  FFF7         	movff	sprintf@cp+1,tblptrh
  8705  006DA4                     	if	0	;tblptru may be non-zero
  8706  006DA4                     	endif
  8707  006DA4                     	if	0	;tblptru may be non-zero
  8708  006DA4                     	endif
  8709  006DA4  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  8710  006DA8  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  8711  006DAC  0008               	tblrd		*
  8712  006DAE  CFF5 FFDF          	movff	tablat,indf2
  8713                           
  8714                           ; BSR set to: 0
  8715  006DB2  4BDA               	infsnz	sprintf@cp& (0+255),f,b
  8716  006DB4  2BDB               	incf	(sprintf@cp+1)& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  006DB6  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  8720  006DB8  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  8721  006DBA                     l9105:
  8722                           
  8723                           ; BSR set to: 0
  8724  006DBA  07DD               	decf	sprintf@len& (0+255),f,b
  8725  006DBC  A0D8               	btfss	status,0,c
  8726  006DBE  07DE               	decf	(sprintf@len+1)& (0+255),f,b
  8727  006DC0  29DD               	incf	sprintf@len& (0+255),w,b
  8728  006DC2  E1EC               	bnz	l9099
  8729  006DC4  29DE               	incf	(sprintf@len+1)& (0+255),w,b
  8730  006DC6  E101 D116          	bz	l9213
  8731  006DCA  D7E8               	goto	l9099
  8732  006DCC                     l9109:
  8733                           
  8734                           ; BSR set to: 0
  8735  006DCC  C0CE  FFF6         	movff	sprintf@f,tblptrl
  8736  006DD0  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  8737  006DD4  4BCE               	infsnz	sprintf@f& (0+255),f,b
  8738  006DD6  2BCF               	incf	(sprintf@f+1)& (0+255),f,b
  8739  006DD8                     	if	0	;tblptru may be non-zero
  8740  006DD8                     	endif
  8741  006DD8                     	if	0	;tblptru may be non-zero
  8742  006DD8                     	endif
  8743  006DD8  0008               	tblrd		*
  8744  006DDA  CFF5 F0E4          	movff	tablat,sprintf@c
  8745  006DDE  51E4               	movf	sprintf@c& (0+255),w,b
  8746                           
  8747                           ; Switch size 1, requested type "speed"
  8748                           ; Number of cases is 6, Range of values is 0 to 120
  8749                           ; switch strategies available:
  8750                           ; Name         Instructions Cycles
  8751                           ; simple_byte           19    10 (average)
  8752                           ;	Chosen strategy is simple_byte
  8753  006DE0  E101 D115          	bz	l9215
  8754  006DE4  0A58               	xorlw	88	; case 88
  8755  006DE6  E099               	bz	l9073
  8756  006DE8  0A3C               	xorlw	60	; case 100
  8757  006DEA  E007               	bz	l1850
  8758  006DEC  0A0D               	xorlw	13	; case 105
  8759  006DEE  E005               	bz	l1850
  8760  006DF0  0A1A               	xorlw	26	; case 115
  8761  006DF2  E095               	bz	l9075
  8762  006DF4  0A0B               	xorlw	11	; case 120
  8763  006DF6  E091               	bz	l9073
  8764  006DF8  D0FE               	goto	l9213
  8765  006DFA                     l1850:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  8769  006DFA  BFE1               	btfsc	sprintf@flag& (0+255),7,b
  8770  006DFC  D012               	goto	l9121
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;doprnt.c: 1253: {
  8774                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8775  006DFE  51DC               	movf	sprintf@ap& (0+255),w,b
  8776  006E00  6ED9               	movwf	fsr2l,c
  8777  006E02  6ADA               	clrf	fsr2h,c
  8778  006E04  CFDE F0DF          	movff	postinc2,sprintf@val
  8779  006E08  CFDD F0E0          	movff	postdec2,sprintf@val+1
  8780                           
  8781                           ; BSR set to: 0
  8782  006E0C  0E02               	movlw	2
  8783  006E0E  27DC               	addwf	sprintf@ap& (0+255),f,b
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;doprnt.c: 1261: if((int)val < 0) {
  8787  006E10  AFE0               	btfss	(sprintf@val+1)& (0+255),7,b
  8788  006E12  D03D               	goto	l9155
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;doprnt.c: 1262: flag |= 0x03;
  8792  006E14  0E03               	movlw	3
  8793  006E16  13E1               	iorwf	sprintf@flag& (0+255),f,b
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;doprnt.c: 1263: val = -val;
  8797  006E18  6DDF               	negf	sprintf@val& (0+255),b
  8798  006E1A  1FE0               	comf	(sprintf@val+1)& (0+255),f,b
  8799  006E1C  B0D8               	btfsc	status,0,c
  8800  006E1E  2BE0               	incf	(sprintf@val+1)& (0+255),f,b
  8801  006E20  D036               	goto	l9155
  8802  006E22                     l9121:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;doprnt.c: 1268: else
  8806                           ;doprnt.c: 1273: {
  8807                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8808  006E22  51DC               	movf	sprintf@ap& (0+255),w,b
  8809  006E24  6ED9               	movwf	fsr2l,c
  8810  006E26  6ADA               	clrf	fsr2h,c
  8811  006E28  CFDE F0DF          	movff	postinc2,sprintf@val
  8812  006E2C  CFDD F0E0          	movff	postdec2,sprintf@val+1
  8813                           
  8814                           ; BSR set to: 0
  8815  006E30  0E02               	movlw	2
  8816  006E32  27DC               	addwf	sprintf@ap& (0+255),f,b
  8817  006E34  D02C               	goto	l9155
  8818  006E36                     l9125:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8822  006E36  0E01               	movlw	1
  8823  006E38  6FE4               	movwf	sprintf@c& (0+255),b
  8824  006E3A                     l9131:
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;doprnt.c: 1306: if(val < dpowers[c])
  8828  006E3A  51E4               	movf	sprintf@c& (0+255),w,b
  8829  006E3C  0D02               	mullw	2
  8830  006E3E  0EA5               	movlw	low _dpowers
  8831  006E40  24F3               	addwf	prodl,w,c
  8832  006E42  6EF6               	movwf	tblptrl,c
  8833  006E44  0E77               	movlw	high _dpowers
  8834  006E46  20F4               	addwfc	prodh,w,c
  8835  006E48  6EF7               	movwf	tblptrh,c
  8836  006E4A                     	if	0	;There are less than 3 active tblptr bytes
  8837  006E4A                     	endif
  8838  006E4A  0009               	tblrd		*+
  8839  006E4C  50F5               	movf	tablat,w,c
  8840  006E4E  5DDF               	subwf	sprintf@val& (0+255),w,b
  8841  006E50  0009               	tblrd		*+
  8842  006E52  50F5               	movf	tablat,w,c
  8843  006E54  59E0               	subwfb	(sprintf@val+1)& (0+255),w,b
  8844  006E56  E320               	bnc	l9157
  8845                           
  8846                           ; BSR set to: 0
  8847  006E58  2BE4               	incf	sprintf@c& (0+255),f,b
  8848                           
  8849                           ; BSR set to: 0
  8850  006E5A  0E05               	movlw	5
  8851  006E5C  19E4               	xorwf	sprintf@c& (0+255),w,b
  8852  006E5E  E01C               	bz	l9157
  8853  006E60  D7EC               	goto	l9131
  8854  006E62                     l9139:
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  8858  006E62  0E01               	movlw	1
  8859  006E64  6FE4               	movwf	sprintf@c& (0+255),b
  8860  006E66                     l9145:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;doprnt.c: 1317: if(val < hexpowers[c])
  8864  006E66  51E4               	movf	sprintf@c& (0+255),w,b
  8865  006E68  0D02               	mullw	2
  8866  006E6A  0EAF               	movlw	low _hexpowers
  8867  006E6C  24F3               	addwf	prodl,w,c
  8868  006E6E  6EF6               	movwf	tblptrl,c
  8869  006E70  0E77               	movlw	high _hexpowers
  8870  006E72  20F4               	addwfc	prodh,w,c
  8871  006E74  6EF7               	movwf	tblptrh,c
  8872  006E76                     	if	0	;There are less than 3 active tblptr bytes
  8873  006E76                     	endif
  8874  006E76  0009               	tblrd		*+
  8875  006E78  50F5               	movf	tablat,w,c
  8876  006E7A  5DDF               	subwf	sprintf@val& (0+255),w,b
  8877  006E7C  0009               	tblrd		*+
  8878  006E7E  50F5               	movf	tablat,w,c
  8879  006E80  59E0               	subwfb	(sprintf@val+1)& (0+255),w,b
  8880  006E82  E30A               	bnc	l9157
  8881                           
  8882                           ; BSR set to: 0
  8883  006E84  2BE4               	incf	sprintf@c& (0+255),f,b
  8884                           
  8885                           ; BSR set to: 0
  8886  006E86  0E04               	movlw	4
  8887  006E88  19E4               	xorwf	sprintf@c& (0+255),w,b
  8888  006E8A  E006               	bz	l9157
  8889  006E8C  D7EC               	goto	l9145
  8890  006E8E                     l9155:
  8891                           
  8892                           ; BSR set to: 0
  8893  006E8E  51E1               	movf	sprintf@flag& (0+255),w,b
  8894  006E90  0B80               	andlw	128
  8895                           
  8896                           ; Switch size 1, requested type "speed"
  8897                           ; Number of cases is 2, Range of values is 0 to 128
  8898                           ; switch strategies available:
  8899                           ; Name         Instructions Cycles
  8900                           ; simple_byte            7     4 (average)
  8901                           ;	Chosen strategy is simple_byte
  8902  006E92  E0D1               	bz	l9125
  8903  006E94  0A80               	xorlw	128	; case 128
  8904  006E96  E0E5               	bz	l9139
  8905  006E98                     l9157:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8909  006E98  51E2               	movf	sprintf@width& (0+255),w,b
  8910  006E9A  11E3               	iorwf	(sprintf@width+1)& (0+255),w,b
  8911  006E9C  E008               	bz	l9163
  8912                           
  8913                           ; BSR set to: 0
  8914  006E9E  C0E1  F0D4         	movff	sprintf@flag,??_sprintf
  8915  006EA2  0E03               	movlw	3
  8916  006EA4  17D4               	andwf	??_sprintf& (0+255),f,b
  8917  006EA6  E003               	bz	l9163
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;doprnt.c: 1346: width--;
  8921  006EA8  07E2               	decf	sprintf@width& (0+255),f,b
  8922  006EAA  A0D8               	btfss	status,0,c
  8923  006EAC  07E3               	decf	(sprintf@width+1)& (0+255),f,b
  8924  006EAE                     l9163:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;doprnt.c: 1381: if(width > c)
  8928  006EAE  0E80               	movlw	128
  8929  006EB0  BFE4               	btfsc	sprintf@c& (0+255),7,b
  8930  006EB2  0E7F               	movlw	127
  8931  006EB4  6FD4               	movwf	??_sprintf& (0+255),b
  8932  006EB6  51E2               	movf	sprintf@width& (0+255),w,b
  8933  006EB8  5DE4               	subwf	sprintf@c& (0+255),w,b
  8934  006EBA  51E3               	movf	(sprintf@width+1)& (0+255),w,b
  8935  006EBC  0A80               	xorlw	128
  8936  006EBE  59D4               	subwfb	??_sprintf& (0+255),w,b
  8937  006EC0  E207               	bc	l1881
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;doprnt.c: 1382: width -= c;
  8941  006EC2  51E4               	movf	sprintf@c& (0+255),w,b
  8942  006EC4  5FE2               	subwf	sprintf@width& (0+255),f,b
  8943  006EC6  0E00               	movlw	0
  8944  006EC8  BFE4               	btfsc	sprintf@c& (0+255),7,b
  8945  006ECA  0EFF               	movlw	255
  8946  006ECC  5BE3               	subwfb	(sprintf@width+1)& (0+255),f,b
  8947  006ECE  D002               	goto	l1882
  8948  006ED0                     l1881:
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;doprnt.c: 1383: else
  8952                           ;doprnt.c: 1384: width = 0;
  8953  006ED0  6BE2               	clrf	sprintf@width& (0+255),b
  8954  006ED2  6BE3               	clrf	(sprintf@width+1)& (0+255),b
  8955  006ED4                     l1882:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;doprnt.c: 1387: if(flag & 0x04) {
  8959  006ED4  A5E1               	btfss	sprintf@flag& (0+255),2,b
  8960  006ED6  D01C               	goto	l9181
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;doprnt.c: 1392: if(flag & 0x03)
  8964  006ED8  C0E1  F0D4         	movff	sprintf@flag,??_sprintf
  8965  006EDC  0E03               	movlw	3
  8966  006EDE  17D4               	andwf	??_sprintf& (0+255),f,b
  8967  006EE0  E008               	bz	l9173
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  8971  006EE2  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  8972  006EE6  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  8973  006EEA  0E2D               	movlw	45
  8974  006EEC  6EDF               	movwf	indf2,c
  8975                           
  8976                           ; BSR set to: 0
  8977  006EEE  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  8978  006EF0  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  8979  006EF2                     l9173:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;doprnt.c: 1415: if(width)
  8983  006EF2  51E2               	movf	sprintf@width& (0+255),w,b
  8984  006EF4  11E3               	iorwf	(sprintf@width+1)& (0+255),w,b
  8985  006EF6  E02A               	bz	l9195
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8989  006EF8  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  8990  006EFC  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  8991  006F00  0E30               	movlw	48
  8992  006F02  6EDF               	movwf	indf2,c
  8993                           
  8994                           ; BSR set to: 0
  8995  006F04  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  8996  006F06  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;doprnt.c: 1418: while(--width);
  9000  006F08  07E2               	decf	sprintf@width& (0+255),f,b
  9001  006F0A  A0D8               	btfss	status,0,c
  9002  006F0C  07E3               	decf	(sprintf@width+1)& (0+255),f,b
  9003  006F0E  D7F1               	goto	l9173
  9004  006F10                     l9181:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;doprnt.c: 1422: {
  9008                           ;doprnt.c: 1424: if(width
  9009                           ;doprnt.c: 1428: )
  9010  006F10  51E2               	movf	sprintf@width& (0+255),w,b
  9011  006F12  11E3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9012  006F14  E00E               	bz	l9189
  9013  006F16                     l9183:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9017  006F16  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  9018  006F1A  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  9019  006F1E  0E20               	movlw	32
  9020  006F20  6EDF               	movwf	indf2,c
  9021                           
  9022                           ; BSR set to: 0
  9023  006F22  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  9024  006F24  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;doprnt.c: 1431: while(--width);
  9028  006F26  07E2               	decf	sprintf@width& (0+255),f,b
  9029  006F28  A0D8               	btfss	status,0,c
  9030  006F2A  07E3               	decf	(sprintf@width+1)& (0+255),f,b
  9031  006F2C  51E2               	movf	sprintf@width& (0+255),w,b
  9032  006F2E  11E3               	iorwf	(sprintf@width+1)& (0+255),w,b
  9033  006F30  E1F2               	bnz	l9183
  9034  006F32                     l9189:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;doprnt.c: 1438: if(flag & 0x03)
  9038  006F32  C0E1  F0D4         	movff	sprintf@flag,??_sprintf
  9039  006F36  0E03               	movlw	3
  9040  006F38  17D4               	andwf	??_sprintf& (0+255),f,b
  9041  006F3A  E008               	bz	l9195
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9045  006F3C  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  9046  006F40  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  9047  006F44  0E2D               	movlw	45
  9048  006F46  6EDF               	movwf	indf2,c
  9049                           
  9050                           ; BSR set to: 0
  9051  006F48  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  9052  006F4A  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  9053  006F4C                     l9195:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;doprnt.c: 1469: }
  9057                           ;doprnt.c: 1472: prec = c;
  9058  006F4C  C0E4  F0D9         	movff	sprintf@c,sprintf@prec
  9059                           
  9060                           ;doprnt.c: 1474: while(prec--) {
  9061  006F50  D04F               	goto	l9211
  9062  006F52                     l9197:
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9066  006F52  51D9               	movf	sprintf@prec& (0+255),w,b
  9067  006F54  0D02               	mullw	2
  9068  006F56  0EA5               	movlw	low _dpowers
  9069  006F58  24F3               	addwf	prodl,w,c
  9070  006F5A  6EF6               	movwf	tblptrl,c
  9071  006F5C  0E77               	movlw	high _dpowers
  9072  006F5E  20F4               	addwfc	prodh,w,c
  9073  006F60  6EF7               	movwf	tblptrh,c
  9074  006F62                     	if	0	;There are less than 3 active tblptr bytes
  9075  006F62                     	endif
  9076  006F62  0009               	tblrd		*+
  9077  006F64  CFF5 F0C2          	movff	tablat,___lwdiv@divisor
  9078  006F68  000A               	tblrd		*-
  9079  006F6A  CFF5 F0C3          	movff	tablat,___lwdiv@divisor+1
  9080  006F6E  C0DF  F0C0         	movff	sprintf@val,___lwdiv@dividend
  9081  006F72  C0E0  F0C1         	movff	sprintf@val+1,___lwdiv@dividend+1
  9082  006F76  EC9F  F025         	call	___lwdiv	;wreg free
  9083  006F7A  C0C0  F0C7         	movff	?___lwdiv,___lwmod@dividend
  9084  006F7E  C0C1  F0C8         	movff	?___lwdiv+1,___lwmod@dividend+1
  9085  006F82  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9086  006F84  0E0A               	movlw	10
  9087  006F86  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9088  006F88  EC37  F025         	call	___lwmod	;wreg free
  9089  006F8C  51C7               	movf	?___lwmod& (0+255),w,b
  9090  006F8E  0F30               	addlw	48
  9091  006F90  6FE4               	movwf	sprintf@c& (0+255),b
  9092                           
  9093                           ;doprnt.c: 1491: break;
  9094  006F92  D026               	goto	l9207
  9095  006F94                     l9199:
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;doprnt.c: 1499: {
  9099                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9100  006F94  C0DF  F0C0         	movff	sprintf@val,___lwdiv@dividend
  9101  006F98  C0E0  F0C1         	movff	sprintf@val+1,___lwdiv@dividend+1
  9102  006F9C  51D9               	movf	sprintf@prec& (0+255),w,b
  9103  006F9E  0D02               	mullw	2
  9104  006FA0  0EAF               	movlw	low _hexpowers
  9105  006FA2  24F3               	addwf	prodl,w,c
  9106  006FA4  6EF6               	movwf	tblptrl,c
  9107  006FA6  0E77               	movlw	high _hexpowers
  9108  006FA8  20F4               	addwfc	prodh,w,c
  9109  006FAA  6EF7               	movwf	tblptrh,c
  9110  006FAC                     	if	0	;There are less than 3 active tblptr bytes
  9111  006FAC                     	endif
  9112  006FAC  0009               	tblrd		*+
  9113  006FAE  CFF5 F0C2          	movff	tablat,___lwdiv@divisor
  9114  006FB2  000A               	tblrd		*-
  9115  006FB4  CFF5 F0C3          	movff	tablat,___lwdiv@divisor+1
  9116  006FB8  EC9F  F025         	call	___lwdiv	;wreg free
  9117  006FBC  51C0               	movf	?___lwdiv& (0+255),w,b
  9118  006FBE  0B0F               	andlw	15
  9119  006FC0  6FD8               	movwf	sprintf@idx& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9123  006FC2  0ED7               	movlw	low STR_102
  9124  006FC4  25D8               	addwf	sprintf@idx& (0+255),w,b
  9125  006FC6  6EF6               	movwf	tblptrl,c
  9126  006FC8  6AF7               	clrf	tblptrh,c
  9127  006FCA  0E7C               	movlw	high STR_102
  9128  006FCC  22F7               	addwfc	tblptrh,f,c
  9129  006FCE                     	if	0	;There are less than 3 active tblptr bytes
  9130  006FCE                     	endif
  9131  006FCE  0008               	tblrd		*
  9132  006FD0  CFF5 F0E4          	movff	tablat,sprintf@c
  9133                           
  9134                           ;doprnt.c: 1508: }
  9135                           ;doprnt.c: 1510: break;
  9136  006FD4  D005               	goto	l9207
  9137  006FD6                     l9205:
  9138                           
  9139                           ; BSR set to: 0
  9140  006FD6  51E1               	movf	sprintf@flag& (0+255),w,b
  9141  006FD8  0B80               	andlw	128
  9142                           
  9143                           ; Switch size 1, requested type "speed"
  9144                           ; Number of cases is 2, Range of values is 0 to 128
  9145                           ; switch strategies available:
  9146                           ; Name         Instructions Cycles
  9147                           ; simple_byte            7     4 (average)
  9148                           ;	Chosen strategy is simple_byte
  9149  006FDA  E0BB               	bz	l9197
  9150  006FDC  0A80               	xorlw	128	; case 128
  9151  006FDE  E0DA               	bz	l9199
  9152  006FE0                     l9207:
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9156  006FE0  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  9157  006FE4  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  9158  006FE8  C0E4  FFDF         	movff	sprintf@c,indf2
  9159                           
  9160                           ; BSR set to: 0
  9161  006FEC  4BCC               	infsnz	sprintf@sp& (0+255),f,b
  9162  006FEE  2BCD               	incf	(sprintf@sp+1)& (0+255),f,b
  9163  006FF0                     l9211:
  9164                           
  9165                           ; BSR set to: 0
  9166  006FF0  07D9               	decf	sprintf@prec& (0+255),f,b
  9167  006FF2  29D9               	incf	sprintf@prec& (0+255),w,b
  9168  006FF4  E1F0               	bnz	l9205
  9169  006FF6                     l9213:
  9170                           
  9171                           ; BSR set to: 0
  9172  006FF6  C0CE  FFF6         	movff	sprintf@f,tblptrl
  9173  006FFA  C0CF  FFF7         	movff	sprintf@f+1,tblptrh
  9174  006FFE  4BCE               	infsnz	sprintf@f& (0+255),f,b
  9175  007000  2BCF               	incf	(sprintf@f+1)& (0+255),f,b
  9176  007002                     	if	0	;tblptru may be non-zero
  9177  007002                     	endif
  9178  007002                     	if	0	;tblptru may be non-zero
  9179  007002                     	endif
  9180  007002  0008               	tblrd		*
  9181  007004  CFF5 F0E4          	movff	tablat,sprintf@c
  9182  007008  51E4               	movf	sprintf@c& (0+255),w,b
  9183  00700A  E001 D633          	bnz	l9049
  9184  00700E                     l9215:
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;doprnt.c: 1538: *sp = 0;
  9188  00700E  C0CC  FFD9         	movff	sprintf@sp,fsr2l
  9189  007012  C0CD  FFDA         	movff	sprintf@sp+1,fsr2h
  9190  007016  6ADF               	clrf	indf2,c
  9191                           
  9192                           ; BSR set to: 0
  9193  007018  0C00               	retlw	0	;funcret
  9194  00701A                     __end_of_sprintf:
  9195                           	opt stack 0
  9196                           tblptru	equ	0xFF8
  9197                           tblptrh	equ	0xFF7
  9198                           tblptrl	equ	0xFF6
  9199                           tablat	equ	0xFF5
  9200                           prodh	equ	0xFF4
  9201                           prodl	equ	0xFF3
  9202                           intcon	equ	0xFF2
  9203                           postinc0	equ	0xFEE
  9204                           wreg	equ	0xFE8
  9205                           indf2	equ	0xFDF
  9206                           postinc2	equ	0xFDE
  9207                           postdec2	equ	0xFDD
  9208                           fsr2h	equ	0xFDA
  9209                           fsr2l	equ	0xFD9
  9210                           status	equ	0xFD8
  9211                           
  9212 ;; *************** function _isdigit *****************
  9213 ;; Defined at:
  9214 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/isdigit.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  c               1    wreg     unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  c               1    2[BANK0 ] unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;		None               void
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : F/0
  9225 ;;		On exit  : F/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0
  9229 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9230 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9231 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9232 ;;Total ram usage:        3 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:   11
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text26
  9243  0045F6                     __ptext26:
  9244                           	opt stack 0
  9245  0045F6                     _isdigit:
  9246                           	opt stack 16
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250                           ;isdigit@c stored from wreg
  9251  0045F6  6FC2               	movwf	isdigit@c& (0+255),b
  9252  0045F8  0100               	movlb	0	; () banked
  9253  0045FA  6BC1               	clrf	_isdigit$5885& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256  0045FC  0E3A               	movlw	58
  9257  0045FE  61C2               	cpfslt	isdigit@c& (0+255),b
  9258  004600  D005               	goto	l8877
  9259                           
  9260                           ; BSR set to: 0
  9261  004602  0E2F               	movlw	47
  9262  004604  65C2               	cpfsgt	isdigit@c& (0+255),b
  9263  004606  D002               	goto	l8877
  9264                           
  9265                           ; BSR set to: 0
  9266  004608  0E01               	movlw	1
  9267  00460A  6FC1               	movwf	_isdigit$5885& (0+255),b
  9268  00460C                     l8877:
  9269                           
  9270                           ; BSR set to: 0
  9271  00460C  C0C1  F0C0         	movff	_isdigit$5885,??_isdigit
  9272  004610  31C0               	rrcf	??_isdigit& (0+255),w,b
  9273                           
  9274                           ; BSR set to: 0
  9275  004612  0012               	return		;funcret
  9276  004614                     __end_of_isdigit:
  9277                           	opt stack 0
  9278                           tblptru	equ	0xFF8
  9279                           tblptrh	equ	0xFF7
  9280                           tblptrl	equ	0xFF6
  9281                           tablat	equ	0xFF5
  9282                           prodh	equ	0xFF4
  9283                           prodl	equ	0xFF3
  9284                           intcon	equ	0xFF2
  9285                           postinc0	equ	0xFEE
  9286                           wreg	equ	0xFE8
  9287                           indf2	equ	0xFDF
  9288                           postinc2	equ	0xFDE
  9289                           postdec2	equ	0xFDD
  9290                           fsr2h	equ	0xFDA
  9291                           fsr2l	equ	0xFD9
  9292                           status	equ	0xFD8
  9293                           
  9294 ;; *************** function ___wmul *****************
  9295 ;; Defined at:
  9296 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9299 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  product         2    4[BANK0 ] unsigned int 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  2    0[BANK0 ] unsigned int 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2, status,0, prodl, prodh
  9306 ;; Tracked objects:
  9307 ;;		On entry : F/0
  9308 ;;		On exit  : F/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9311 ;;      Params:         0       4       0       0       0       0       0       0       0
  9312 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9314 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9315 ;;Total ram usage:        6 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:   11
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		_sprintf
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text27
  9326  00469A                     __ptext27:
  9327                           	opt stack 0
  9328  00469A                     ___wmul:
  9329                           	opt stack 16
  9330                           
  9331                           ; BSR set to: 0
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;incstack = 0
  9335  00469A  51C0               	movf	___wmul@multiplier& (0+255),w,b
  9336  00469C  03C2               	mulwf	___wmul@multiplicand& (0+255),b
  9337  00469E  CFF3 F0C4          	movff	prodl,___wmul@product
  9338  0046A2  CFF4 F0C5          	movff	prodh,___wmul@product+1
  9339  0046A6  51C0               	movf	___wmul@multiplier& (0+255),w,b
  9340  0046A8  03C3               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9341  0046AA  50F3               	movf	prodl,w,c
  9342  0046AC  27C5               	addwf	(___wmul@product+1)& (0+255),f,b
  9343  0046AE  51C1               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9344  0046B0  03C2               	mulwf	___wmul@multiplicand& (0+255),b
  9345  0046B2  50F3               	movf	prodl,w,c
  9346  0046B4  27C5               	addwf	(___wmul@product+1)& (0+255),f,b
  9347                           
  9348                           ; BSR set to: 0
  9349  0046B6  C0C4  F0C0         	movff	___wmul@product,?___wmul
  9350  0046BA  C0C5  F0C1         	movff	___wmul@product+1,?___wmul+1
  9351                           
  9352                           ; BSR set to: 0
  9353  0046BE  0012               	return		;funcret
  9354  0046C0                     __end_of___wmul:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           postinc0	equ	0xFEE
  9364                           wreg	equ	0xFE8
  9365                           indf2	equ	0xFDF
  9366                           postinc2	equ	0xFDE
  9367                           postdec2	equ	0xFDD
  9368                           fsr2h	equ	0xFDA
  9369                           fsr2l	equ	0xFD9
  9370                           status	equ	0xFD8
  9371                           
  9372 ;; *************** function _sendCommand *****************
  9373 ;; Defined at:
  9374 ;;		line 909 in file "../Includes/Board/MOTEapp.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9377 ;;		 -> STR_97(26), STR_96(26), STR_95(26), STR_94(26), 
  9378 ;;		 -> STR_93(1), STR_92(9), STR_91(13), STR_90(13), 
  9379 ;;		 -> STR_89(13), STR_88(13), STR_87(13), STR_86(13), 
  9380 ;;		 -> STR_85(13), STR_84(13), STR_83(16), STR_82(15), 
  9381 ;;		 -> STR_60(24), STR_55(13), cmd(64), STR_47(24), 
  9382 ;;		 -> STR_44(16), STR_41(16), STR_38(49), STR_35(49), 
  9383 ;;		 -> STR_32(25), STR_29(12), STR_22(20), STR_21(2), 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : F/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9395 ;;      Params:         0       2       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        2 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:   13
  9402 ;; This function calls:
  9403 ;;		_EUSART_Write
  9404 ;;		_EndLine
  9405 ;; This function is called by:
  9406 ;;		_modemResync
  9407 ;;		_modemSleep
  9408 ;;		_moteJoiningProcess
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text28
  9413  004D64                     __ptext28:
  9414                           	opt stack 0
  9415  004D64                     _sendCommand:
  9416                           	opt stack 13
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;MOTEapp.c: 912: while (*string)
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;incstack = 0
  9423  004D64  D015               	goto	l8625
  9424  004D66                     l8621:
  9425                           
  9426                           ;MOTEapp.c: 913: {
  9427                           ;MOTEapp.c: 914: EUSART_Write(*string++);
  9428  004D66  C0C1  FFF6         	movff	sendCommand@string,tblptrl
  9429  004D6A  C0C2  FFF7         	movff	sendCommand@string+1,tblptrh
  9430  004D6E  6AF8               	clrf	tblptru,c
  9431  004D70  0E07               	movlw	(high __ramtop+-1)
  9432  004D72  64F7               	cpfsgt	tblptrh,c
  9433  004D74  D003               	bra	u6687
  9434  004D76  0008               	tblrd		*
  9435  004D78  50F5               	movf	tablat,w,c
  9436  004D7A  D005               	bra	u6680
  9437  004D7C                     u6687:
  9438  004D7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9439  004D80  CFF7 FFE2          	movff	tblptrh,fsr1h
  9440  004D84  50E7               	movf	indf1,w,c
  9441  004D86                     u6680:
  9442  004D86  EC72  F024         	call	_EUSART_Write
  9443  004D8A  0100               	movlb	0	; () banked
  9444  004D8C  4BC1               	infsnz	sendCommand@string& (0+255),f,b
  9445  004D8E  2BC2               	incf	(sendCommand@string+1)& (0+255),f,b
  9446  004D90                     l8625:
  9447                           
  9448                           ; BSR set to: 0
  9449  004D90  C0C1  FFF6         	movff	sendCommand@string,tblptrl
  9450  004D94  C0C2  FFF7         	movff	sendCommand@string+1,tblptrh
  9451  004D98  6AF8               	clrf	tblptru,c
  9452  004D9A  0E07               	movlw	(high __ramtop+-1)
  9453  004D9C  64F7               	cpfsgt	tblptrh,c
  9454  004D9E  D003               	bra	u6697
  9455  004DA0  0008               	tblrd		*
  9456  004DA2  50F5               	movf	tablat,w,c
  9457  004DA4  D005               	bra	u6690
  9458  004DA6                     u6697:
  9459  004DA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  9460  004DAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  9461  004DAE  50E7               	movf	indf1,w,c
  9462  004DB0                     u6690:
  9463  004DB0  0900               	iorlw	0
  9464  004DB2  E1D9               	bnz	l8621
  9465                           
  9466                           ;MOTEapp.c: 915: }
  9467                           ;MOTEapp.c: 916: EndLine();
  9468  004DB4  EF33  F022         	goto	_EndLine	;wreg free
  9469  004DB8                     __end_of_sendCommand:
  9470                           	opt stack 0
  9471                           tblptru	equ	0xFF8
  9472                           tblptrh	equ	0xFF7
  9473                           tblptrl	equ	0xFF6
  9474                           tablat	equ	0xFF5
  9475                           prodh	equ	0xFF4
  9476                           prodl	equ	0xFF3
  9477                           intcon	equ	0xFF2
  9478                           postinc0	equ	0xFEE
  9479                           wreg	equ	0xFE8
  9480                           indf1	equ	0xFE7
  9481                           fsr1h	equ	0xFE2
  9482                           fsr1l	equ	0xFE1
  9483                           indf2	equ	0xFDF
  9484                           postinc2	equ	0xFDE
  9485                           postdec2	equ	0xFDD
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function _EndLine *****************
  9491 ;; Defined at:
  9492 ;;		line 903 in file "../Includes/Board/MOTEapp.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:   12
  9513 ;; This function calls:
  9514 ;;		_EUSART_Write
  9515 ;; This function is called by:
  9516 ;;		_sendCommand
  9517 ;;		_sendDataCommand
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text29
  9522  004466                     __ptext29:
  9523                           	opt stack 0
  9524  004466                     _EndLine:
  9525                           	opt stack 15
  9526                           
  9527                           ;MOTEapp.c: 905: EUSART_Write(0x0D);
  9528                           
  9529                           ;incstack = 0
  9530  004466  0E0D               	movlw	13
  9531  004468  EC72  F024         	call	_EUSART_Write
  9532                           
  9533                           ;MOTEapp.c: 906: EUSART_Write(0x0A);
  9534  00446C  0E0A               	movlw	10
  9535  00446E  EF72  F024         	goto	_EUSART_Write
  9536  004472                     __end_of_EndLine:
  9537                           	opt stack 0
  9538                           tblptru	equ	0xFF8
  9539                           tblptrh	equ	0xFF7
  9540                           tblptrl	equ	0xFF6
  9541                           tablat	equ	0xFF5
  9542                           prodh	equ	0xFF4
  9543                           prodl	equ	0xFF3
  9544                           intcon	equ	0xFF2
  9545                           postinc0	equ	0xFEE
  9546                           wreg	equ	0xFE8
  9547                           indf1	equ	0xFE7
  9548                           fsr1h	equ	0xFE2
  9549                           fsr1l	equ	0xFE1
  9550                           indf2	equ	0xFDF
  9551                           postinc2	equ	0xFDE
  9552                           postdec2	equ	0xFDD
  9553                           fsr2h	equ	0xFDA
  9554                           fsr2l	equ	0xFD9
  9555                           status	equ	0xFD8
  9556                           
  9557 ;; *************** function _oled_putUint16 *****************
  9558 ;; Defined at:
  9559 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  number          2   18[BANK0 ] unsigned int 
  9562 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9563 ;;  start_page      1   21[BANK0 ] unsigned char 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  numData         6   22[BANK0 ] struct .
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  1    wreg      void 
  9568 ;; Registers used:
  9569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : F/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9575 ;;      Params:         0       4       0       0       0       0       0       0       0
  9576 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9578 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9579 ;;Total ram usage:       10 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:   16
  9582 ;; This function calls:
  9583 ;;		___lwdiv
  9584 ;;		___lwmod
  9585 ;;		_oled_putString
  9586 ;; This function is called by:
  9587 ;;		_moteJoiningProcess
  9588 ;;		_moteRunningProcess
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text30
  9593  00612A                     __ptext30:
  9594                           	opt stack 0
  9595  00612A                     _oled_putUint16:
  9596                           	opt stack 12
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;SSD1306oLED.c: 242: display_data_t numData;
  9600                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9601                           
  9602                           ;incstack = 0
  9603  00612A  C0D2  F0C7         	movff	oled_putUint16@number,___lwmod@dividend
  9604  00612E  C0D3  F0C8         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9605  006132  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9606  006134  0E0A               	movlw	10
  9607  006136  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9608  006138  EC37  F025         	call	___lwmod	;wreg free
  9609  00613C  51C7               	movf	?___lwmod& (0+255),w,b
  9610  00613E  0F30               	addlw	48
  9611  006140  6FDA               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9612                           
  9613                           ;SSD1306oLED.c: 244: number /= 10;
  9614  006142  C0D2  F0C0         	movff	oled_putUint16@number,___lwdiv@dividend
  9615  006146  C0D3  F0C1         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9616  00614A  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9617  00614C  0E0A               	movlw	10
  9618  00614E  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  9619  006150  EC9F  F025         	call	___lwdiv	;wreg free
  9620  006154  C0C0  F0D2         	movff	?___lwdiv,oled_putUint16@number
  9621  006158  C0C1  F0D3         	movff	?___lwdiv+1,oled_putUint16@number+1
  9622                           
  9623                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9624  00615C  C0D2  F0C7         	movff	oled_putUint16@number,___lwmod@dividend
  9625  006160  C0D3  F0C8         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9626  006164  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9627  006166  0E0A               	movlw	10
  9628  006168  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9629  00616A  EC37  F025         	call	___lwmod	;wreg free
  9630  00616E  51C7               	movf	?___lwmod& (0+255),w,b
  9631  006170  0F30               	addlw	48
  9632  006172  6FD9               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9633                           
  9634                           ;SSD1306oLED.c: 246: number /= 10;
  9635  006174  C0D2  F0C0         	movff	oled_putUint16@number,___lwdiv@dividend
  9636  006178  C0D3  F0C1         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9637  00617C  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9638  00617E  0E0A               	movlw	10
  9639  006180  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  9640  006182  EC9F  F025         	call	___lwdiv	;wreg free
  9641  006186  C0C0  F0D2         	movff	?___lwdiv,oled_putUint16@number
  9642  00618A  C0C1  F0D3         	movff	?___lwdiv+1,oled_putUint16@number+1
  9643                           
  9644                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9645  00618E  C0D2  F0C7         	movff	oled_putUint16@number,___lwmod@dividend
  9646  006192  C0D3  F0C8         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9647  006196  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9648  006198  0E0A               	movlw	10
  9649  00619A  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9650  00619C  EC37  F025         	call	___lwmod	;wreg free
  9651  0061A0  51C7               	movf	?___lwmod& (0+255),w,b
  9652  0061A2  0F30               	addlw	48
  9653  0061A4  6FD8               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9654                           
  9655                           ;SSD1306oLED.c: 248: number /= 10;
  9656  0061A6  C0D2  F0C0         	movff	oled_putUint16@number,___lwdiv@dividend
  9657  0061AA  C0D3  F0C1         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9658  0061AE  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9659  0061B0  0E0A               	movlw	10
  9660  0061B2  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  9661  0061B4  EC9F  F025         	call	___lwdiv	;wreg free
  9662  0061B8  C0C0  F0D2         	movff	?___lwdiv,oled_putUint16@number
  9663  0061BC  C0C1  F0D3         	movff	?___lwdiv+1,oled_putUint16@number+1
  9664                           
  9665                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9666  0061C0  C0D2  F0C7         	movff	oled_putUint16@number,___lwmod@dividend
  9667  0061C4  C0D3  F0C8         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9668  0061C8  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9669  0061CA  0E0A               	movlw	10
  9670  0061CC  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9671  0061CE  EC37  F025         	call	___lwmod	;wreg free
  9672  0061D2  51C7               	movf	?___lwmod& (0+255),w,b
  9673  0061D4  0F30               	addlw	48
  9674  0061D6  6FD7               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9675                           
  9676                           ;SSD1306oLED.c: 250: number /= 10;
  9677  0061D8  C0D2  F0C0         	movff	oled_putUint16@number,___lwdiv@dividend
  9678  0061DC  C0D3  F0C1         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9679  0061E0  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9680  0061E2  0E0A               	movlw	10
  9681  0061E4  6FC2               	movwf	___lwdiv@divisor& (0+255),b
  9682  0061E6  EC9F  F025         	call	___lwdiv	;wreg free
  9683  0061EA  C0C0  F0D2         	movff	?___lwdiv,oled_putUint16@number
  9684  0061EE  C0C1  F0D3         	movff	?___lwdiv+1,oled_putUint16@number+1
  9685                           
  9686                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  9687  0061F2  C0D2  F0C7         	movff	oled_putUint16@number,___lwmod@dividend
  9688  0061F6  C0D3  F0C8         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9689  0061FA  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
  9690  0061FC  0E0A               	movlw	10
  9691  0061FE  6FC9               	movwf	___lwmod@divisor& (0+255),b
  9692  006200  EC37  F025         	call	___lwmod	;wreg free
  9693  006204  51C7               	movf	?___lwmod& (0+255),w,b
  9694  006206  0F30               	addlw	48
  9695  006208  6FD6               	movwf	oled_putUint16@numData& (0+255),b
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  9699  00620A  6BDB               	clrf	(oled_putUint16@numData+5)& (0+255),b
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  9703  00620C  0ED6               	movlw	low oled_putUint16@numData
  9704  00620E  6FCD               	movwf	oled_putString@string& (0+255),b
  9705  006210  6BCE               	clrf	(oled_putString@string+1)& (0+255),b
  9706  006212  C0D4  F0CF         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9707  006216  C0D5  F0D0         	movff	oled_putUint16@start_page,oled_putString@start_page
  9708  00621A  EFC8  F027         	goto	_oled_putString	;wreg free
  9709  00621E                     __end_of_oled_putUint16:
  9710                           	opt stack 0
  9711                           tblptru	equ	0xFF8
  9712                           tblptrh	equ	0xFF7
  9713                           tblptrl	equ	0xFF6
  9714                           tablat	equ	0xFF5
  9715                           prodh	equ	0xFF4
  9716                           prodl	equ	0xFF3
  9717                           intcon	equ	0xFF2
  9718                           postinc0	equ	0xFEE
  9719                           wreg	equ	0xFE8
  9720                           indf1	equ	0xFE7
  9721                           fsr1h	equ	0xFE2
  9722                           fsr1l	equ	0xFE1
  9723                           indf2	equ	0xFDF
  9724                           postinc2	equ	0xFDE
  9725                           postdec2	equ	0xFDD
  9726                           fsr2h	equ	0xFDA
  9727                           fsr2l	equ	0xFD9
  9728                           status	equ	0xFD8
  9729                           
  9730 ;; *************** function _moteApp_delayms *****************
  9731 ;; Defined at:
  9732 ;;		line 1099 in file "../Includes/Board/MOTEapp.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  length          2    0[BANK0 ] unsigned int 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  counter         2    3[BANK0 ] unsigned int 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0
  9741 ;; Tracked objects:
  9742 ;;		On entry : F/0
  9743 ;;		On exit  : F/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9746 ;;      Params:         0       2       0       0       0       0       0       0       0
  9747 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9748 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9749 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9750 ;;Total ram usage:        5 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:   11
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_main
  9757 ;;		_modemResync
  9758 ;;		_modemSleep
  9759 ;;		_moteHandler
  9760 ;;		_moteJoiningProcess
  9761 ;;		_moteRunningProcess
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           	psect	text31
  9766  004736                     __ptext31:
  9767                           	opt stack 0
  9768  004736                     _moteApp_delayms:
  9769                           	opt stack 17
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;MOTEapp.c: 1101: uint16_t counter;
  9773                           ;MOTEapp.c: 1102: for(counter = 0; counter < length; counter++)
  9774                           
  9775                           ;incstack = 0
  9776  004736  6BC3               	clrf	moteApp_delayms@counter& (0+255),b
  9777  004738  6BC4               	clrf	(moteApp_delayms@counter+1)& (0+255),b
  9778  00473A  D00B               	goto	l593
  9779  00473C                     l8613:
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;MOTEapp.c: 1103: {
  9783                           ;MOTEapp.c: 1104: _delay((unsigned long)((1)*(48000000/4000.0)));
  9784  00473C  0E10               	movlw	16
  9785  00473E  6FC2               	movwf	??_moteApp_delayms& (0+255),b
  9786  004740  0E94               	movlw	148
  9787  004742                     u8617:
  9788  004742  2EE8               	decfsz	wreg,f,c
  9789  004744  D7FE               	goto	u8617
  9790  004746  2FC2               	decfsz	??_moteApp_delayms& (0+255),f,b
  9791  004748  D7FC               	goto	u8617
  9792  00474A  D000               	nop2	
  9793  00474C  0100               	movlb	0	; () banked
  9794  00474E  4BC3               	infsnz	moteApp_delayms@counter& (0+255),f,b
  9795  004750  2BC4               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
  9796  004752                     l593:
  9797                           
  9798                           ; BSR set to: 0
  9799  004752  51C0               	movf	moteApp_delayms@length& (0+255),w,b
  9800  004754  5DC3               	subwf	moteApp_delayms@counter& (0+255),w,b
  9801  004756  51C1               	movf	(moteApp_delayms@length+1)& (0+255),w,b
  9802  004758  59C4               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
  9803  00475A  E3F0               	bnc	l8613
  9804                           
  9805                           ; BSR set to: 0
  9806  00475C  0012               	return		;funcret
  9807  00475E                     __end_of_moteApp_delayms:
  9808                           	opt stack 0
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           postinc0	equ	0xFEE
  9817                           wreg	equ	0xFE8
  9818                           indf1	equ	0xFE7
  9819                           fsr1h	equ	0xFE2
  9820                           fsr1l	equ	0xFE1
  9821                           indf2	equ	0xFDF
  9822                           postinc2	equ	0xFDE
  9823                           postdec2	equ	0xFDD
  9824                           fsr2h	equ	0xFDA
  9825                           fsr2l	equ	0xFD9
  9826                           status	equ	0xFD8
  9827                           
  9828 ;; *************** function _MOTEapp_getModemResponse *****************
  9829 ;; Defined at:
  9830 ;;		line 870 in file "../Includes/Board/MOTEapp.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  bufferByte      1    2[BANK0 ] unsigned char 
  9835 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      unsigned char 
  9838 ;; Registers used:
  9839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : F/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9845 ;;      Params:         0       0       0       0       0       0       0       0       0
  9846 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9848 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9849 ;;Total ram usage:        2 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:   12
  9852 ;; This function calls:
  9853 ;;		_EUSART_Read
  9854 ;; This function is called by:
  9855 ;;		_modemResync
  9856 ;;		_moteHandler
  9857 ;;		_moteJoiningProcess
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text32
  9862  004B88                     __ptext32:
  9863                           	opt stack 0
  9864  004B88                     _MOTEapp_getModemResponse:
  9865                           	opt stack 14
  9866                           
  9867                           ;MOTEapp.c: 872: bool terminatorReceived = 0;
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;incstack = 0
  9871  004B88  0100               	movlb	0	; () banked
  9872  004B8A  6BC1               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;MOTEapp.c: 873: if ((eusartRxCount))
  9876  004B8C  5023               	movf	_eusartRxCount,w,c	;volatile
  9877  004B8E  E01F               	bz	l8653
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;MOTEapp.c: 876: bufferByte = EUSART_Read();
  9881                           
  9882                           ; BSR set to: 0
  9883  004B90  EC5B  F024         	call	_EUSART_Read	;wreg free
  9884  004B94  6FC2               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;MOTEapp.c: 878: if (bufferByte == 0x0D)
  9888  004B96  0E0D               	movlw	13
  9889  004B98  19C2               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  9890  004B9A  E10B               	bnz	l8645
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;MOTEapp.c: 879: {
  9894                           ;MOTEapp.c: 880: modemResonseBuffer[modemBufferIndex] = 0x00;
  9895  004B9C  0E98               	movlw	low _modemResonseBuffer
  9896  004B9E  2429               	addwf	_modemBufferIndex,w,c
  9897  004BA0  6ED9               	movwf	fsr2l,c
  9898  004BA2  6ADA               	clrf	fsr2h,c
  9899  004BA4  0E01               	movlw	high _modemResonseBuffer
  9900  004BA6  22DA               	addwfc	fsr2h,f,c
  9901  004BA8  6ADF               	clrf	indf2,c
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;MOTEapp.c: 881: terminatorReceived = 1;
  9905  004BAA  0E01               	movlw	1
  9906  004BAC  6FC1               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;MOTEapp.c: 882: modemBufferIndex = 0;
  9910  004BAE  6A29               	clrf	_modemBufferIndex,c
  9911                           
  9912                           ;MOTEapp.c: 883: }
  9913  004BB0  D00E               	goto	l8653
  9914  004BB2                     l8645:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;MOTEapp.c: 884: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
  9918  004BB2  51C2               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  9919  004BB4  E00C               	bz	l8653
  9920                           
  9921                           ; BSR set to: 0
  9922  004BB6  0E0A               	movlw	10
  9923  004BB8  19C2               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  9924  004BBA  E009               	bz	l8653
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;MOTEapp.c: 888: else
  9928                           ;MOTEapp.c: 889: {
  9929                           ;MOTEapp.c: 890: modemResonseBuffer[modemBufferIndex] = bufferByte;
  9930  004BBC  0E98               	movlw	low _modemResonseBuffer
  9931  004BBE  2429               	addwf	_modemBufferIndex,w,c
  9932  004BC0  6ED9               	movwf	fsr2l,c
  9933  004BC2  6ADA               	clrf	fsr2h,c
  9934  004BC4  0E01               	movlw	high _modemResonseBuffer
  9935  004BC6  22DA               	addwfc	fsr2h,f,c
  9936  004BC8  C0C2  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;MOTEapp.c: 892: modemBufferIndex++;
  9940  004BCC  2A29               	incf	_modemBufferIndex,f,c
  9941  004BCE                     l8653:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;MOTEapp.c: 893: }
  9945                           ;MOTEapp.c: 894: }
  9946                           ;MOTEapp.c: 895: return terminatorReceived;
  9947  004BCE  51C1               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
  9948                           
  9949                           ; BSR set to: 0
  9950  004BD0  0012               	return		;funcret
  9951  004BD2                     __end_of_MOTEapp_getModemResponse:
  9952                           	opt stack 0
  9953                           tblptru	equ	0xFF8
  9954                           tblptrh	equ	0xFF7
  9955                           tblptrl	equ	0xFF6
  9956                           tablat	equ	0xFF5
  9957                           prodh	equ	0xFF4
  9958                           prodl	equ	0xFF3
  9959                           intcon	equ	0xFF2
  9960                           postinc0	equ	0xFEE
  9961                           wreg	equ	0xFE8
  9962                           indf1	equ	0xFE7
  9963                           fsr1h	equ	0xFE2
  9964                           fsr1l	equ	0xFE1
  9965                           indf2	equ	0xFDF
  9966                           postinc2	equ	0xFDE
  9967                           postdec2	equ	0xFDD
  9968                           fsr2h	equ	0xFDA
  9969                           fsr2l	equ	0xFD9
  9970                           status	equ	0xFD8
  9971                           
  9972 ;; *************** function _DATAEE_WriteByte *****************
  9973 ;; Defined at:
  9974 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  bAdd            1    wreg     unsigned char 
  9977 ;;  bData           1    0[BANK0 ] unsigned char 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  bAdd            1    1[BANK0 ] unsigned char 
  9980 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      void 
  9983 ;; Registers used:
  9984 ;;		wreg, status,2
  9985 ;; Tracked objects:
  9986 ;;		On entry : F/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9990 ;;      Params:         0       1       0       0       0       0       0       0       0
  9991 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9993 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9994 ;;Total ram usage:        3 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:   11
  9997 ;; This function calls:
  9998 ;;		Nothing
  9999 ;; This function is called by:
 10000 ;;		_moteJoiningProcess
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text33
 10005  0049F6                     __ptext33:
 10006                           	opt stack 0
 10007  0049F6                     _DATAEE_WriteByte:
 10008                           	opt stack 17
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;incstack = 0
 10012                           ;DATAEE_WriteByte@bAdd stored from wreg
 10013  0049F6  6FC1               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 10014                           
 10015                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 10016  0049F8  0E00               	movlw	0
 10017  0049FA  BEF2               	btfsc	intcon,7,c	;volatile
 10018  0049FC  0E01               	movlw	1
 10019  0049FE  0100               	movlb	0	; () banked
 10020  004A00  6FC2               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 10024  004A02  C0C1  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;memory.c: 171: EEDATA = bData;
 10028  004A06  C0C0  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 10032  004A0A  9EA6               	bcf	4006,7,c	;volatile
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;memory.c: 173: EECON1bits.CFGS = 0;
 10036  004A0C  9CA6               	bcf	4006,6,c	;volatile
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;memory.c: 174: EECON1bits.WREN = 1;
 10040  004A0E  84A6               	bsf	4006,2,c	;volatile
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;memory.c: 175: INTCONbits.GIE = 0;
 10044  004A10  9EF2               	bcf	intcon,7,c	;volatile
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;memory.c: 176: EECON2 = 0x55;
 10048  004A12  0E55               	movlw	85
 10049  004A14  6EA7               	movwf	4007,c	;volatile
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;memory.c: 177: EECON2 = 0xAA;
 10053  004A16  0EAA               	movlw	170
 10054  004A18  6EA7               	movwf	4007,c	;volatile
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;memory.c: 178: EECON1bits.WR = 1;
 10058  004A1A  82A6               	bsf	4006,1,c	;volatile
 10059  004A1C                     l1216:
 10060  004A1C  B2A6               	btfsc	4006,1,c	;volatile
 10061  004A1E  D7FE               	goto	l1216
 10062                           
 10063                           ;memory.c: 182: }
 10064                           ;memory.c: 184: EECON1bits.WREN = 0;
 10065  004A20  94A6               	bcf	4006,2,c	;volatile
 10066                           
 10067                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 10068  004A22  0100               	movlb	0	; () banked
 10069  004A24  B1C2               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 10070  004A26  D002               	bra	u7395
 10071  004A28  9EF2               	bcf	intcon,7,c	;volatile
 10072  004A2A  D001               	bra	u7396
 10073  004A2C                     u7395:
 10074  004A2C  8EF2               	bsf	intcon,7,c	;volatile
 10075  004A2E                     u7396:
 10076  004A2E  0012               	return		;funcret
 10077  004A30                     __end_of_DATAEE_WriteByte:
 10078                           	opt stack 0
 10079                           tblptru	equ	0xFF8
 10080                           tblptrh	equ	0xFF7
 10081                           tblptrl	equ	0xFF6
 10082                           tablat	equ	0xFF5
 10083                           prodh	equ	0xFF4
 10084                           prodl	equ	0xFF3
 10085                           intcon	equ	0xFF2
 10086                           postinc0	equ	0xFEE
 10087                           wreg	equ	0xFE8
 10088                           indf1	equ	0xFE7
 10089                           fsr1h	equ	0xFE2
 10090                           fsr1l	equ	0xFE1
 10091                           indf2	equ	0xFDF
 10092                           postinc2	equ	0xFDE
 10093                           postdec2	equ	0xFDD
 10094                           fsr2h	equ	0xFDA
 10095                           fsr2l	equ	0xFD9
 10096                           status	equ	0xFD8
 10097                           
 10098 ;; *************** function _ADC_TempConversion *****************
 10099 ;; Defined at:
 10100 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  tempRaw         1    wreg     enum E6179
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  tempRaw         1    7[BANK0 ] enum E6179
 10105 ;;  temp            1    8[BANK0 ] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      unsigned char 
 10108 ;; Registers used:
 10109 ;;		wreg, status,2, status,0, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : F/0
 10112 ;;		On exit  : F/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0
 10116 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10118 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10119 ;;Total ram usage:        2 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:   12
 10122 ;; This function calls:
 10123 ;;		___lwdiv
 10124 ;; This function is called by:
 10125 ;;		_moteHandler
 10126 ;;		_moteJoiningProcess
 10127 ;;		_moteRunningProcess
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text34
 10132  004656                     __ptext34:
 10133                           	opt stack 0
 10134  004656                     _ADC_TempConversion:
 10135                           	opt stack 16
 10136                           
 10137                           ;incstack = 0
 10138                           ;ADC_TempConversion@tempRaw stored from wreg
 10139  004656  6FC7               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 10140                           
 10141                           ;adc.c: 138: uint8_t temp;
 10142                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 10143  004658  0E06               	movlw	6
 10144  00465A  0100               	movlb	0	; () banked
 10145  00465C  25C7               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 10146  00465E  6FC0               	movwf	___lwdiv@dividend& (0+255),b
 10147  004660  6BC1               	clrf	(___lwdiv@dividend+1)& (0+255),b
 10148  004662  0EFF               	movlw	255
 10149  004664  23C1               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 10150  004666  6BC3               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10151  004668  0E05               	movlw	5
 10152  00466A  6FC2               	movwf	___lwdiv@divisor& (0+255),b
 10153  00466C  EC9F  F025         	call	___lwdiv	;wreg free
 10154  004670  51C0               	movf	?___lwdiv& (0+255),w,b
 10155  004672  6FC8               	movwf	ADC_TempConversion@temp& (0+255),b
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;adc.c: 141: return temp;
 10159  004674  51C8               	movf	ADC_TempConversion@temp& (0+255),w,b
 10160                           
 10161                           ; BSR set to: 0
 10162  004676  0012               	return		;funcret
 10163  004678                     __end_of_ADC_TempConversion:
 10164                           	opt stack 0
 10165                           tblptru	equ	0xFF8
 10166                           tblptrh	equ	0xFF7
 10167                           tblptrl	equ	0xFF6
 10168                           tablat	equ	0xFF5
 10169                           prodh	equ	0xFF4
 10170                           prodl	equ	0xFF3
 10171                           intcon	equ	0xFF2
 10172                           postinc0	equ	0xFEE
 10173                           wreg	equ	0xFE8
 10174                           indf1	equ	0xFE7
 10175                           fsr1h	equ	0xFE2
 10176                           fsr1l	equ	0xFE1
 10177                           indf2	equ	0xFDF
 10178                           postinc2	equ	0xFDE
 10179                           postdec2	equ	0xFDD
 10180                           fsr2h	equ	0xFDA
 10181                           fsr2l	equ	0xFD9
 10182                           status	equ	0xFD8
 10183                           
 10184 ;; *************** function ___lwdiv *****************
 10185 ;; Defined at:
 10186 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  dividend        2    0[BANK0 ] unsigned int 
 10189 ;;  divisor         2    2[BANK0 ] unsigned int 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  quotient        2    5[BANK0 ] unsigned int 
 10192 ;;  counter         1    4[BANK0 ] unsigned char 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  2    0[BANK0 ] unsigned int 
 10195 ;; Registers used:
 10196 ;;		wreg, status,2, status,0
 10197 ;; Tracked objects:
 10198 ;;		On entry : F/0
 10199 ;;		On exit  : F/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10202 ;;      Params:         0       4       0       0       0       0       0       0       0
 10203 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10205 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10206 ;;Total ram usage:        7 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:   11
 10209 ;; This function calls:
 10210 ;;		Nothing
 10211 ;; This function is called by:
 10212 ;;		_moteApp_add16bToDataBuffer
 10213 ;;		_oled_putUint16
 10214 ;;		_ADC_TempConversion
 10215 ;;		_sprintf
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text35
 10220  004B3E                     __ptext35:
 10221                           	opt stack 0
 10222  004B3E                     ___lwdiv:
 10223                           	opt stack 16
 10224                           
 10225                           ; BSR set to: 0
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;incstack = 0
 10229  004B3E  6BC5               	clrf	___lwdiv@quotient& (0+255),b
 10230  004B40  6BC6               	clrf	(___lwdiv@quotient+1)& (0+255),b
 10231                           
 10232                           ; BSR set to: 0
 10233  004B42  51C2               	movf	___lwdiv@divisor& (0+255),w,b
 10234  004B44  11C3               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10235  004B46  E01B               	bz	l2303
 10236                           
 10237                           ; BSR set to: 0
 10238  004B48  0E01               	movlw	1
 10239  004B4A  6FC4               	movwf	___lwdiv@counter& (0+255),b
 10240  004B4C  D004               	goto	l8939
 10241  004B4E                     l8937:
 10242                           
 10243                           ; BSR set to: 0
 10244  004B4E  90D8               	bcf	status,0,c
 10245  004B50  37C2               	rlcf	___lwdiv@divisor& (0+255),f,b
 10246  004B52  37C3               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10247  004B54  2BC4               	incf	___lwdiv@counter& (0+255),f,b
 10248  004B56                     l8939:
 10249                           
 10250                           ; BSR set to: 0
 10251  004B56  AFC3               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10252  004B58  D7FA               	goto	l8937
 10253  004B5A                     l8941:
 10254                           
 10255                           ; BSR set to: 0
 10256  004B5A  90D8               	bcf	status,0,c
 10257  004B5C  37C5               	rlcf	___lwdiv@quotient& (0+255),f,b
 10258  004B5E  37C6               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10259                           
 10260                           ; BSR set to: 0
 10261  004B60  51C2               	movf	___lwdiv@divisor& (0+255),w,b
 10262  004B62  5DC0               	subwf	___lwdiv@dividend& (0+255),w,b
 10263  004B64  51C3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10264  004B66  59C1               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10265  004B68  E305               	bnc	l8949
 10266                           
 10267                           ; BSR set to: 0
 10268  004B6A  51C2               	movf	___lwdiv@divisor& (0+255),w,b
 10269  004B6C  5FC0               	subwf	___lwdiv@dividend& (0+255),f,b
 10270  004B6E  51C3               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10271  004B70  5BC1               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  004B72  81C5               	bsf	___lwdiv@quotient& (0+255),0,b
 10275  004B74                     l8949:
 10276                           
 10277                           ; BSR set to: 0
 10278  004B74  90D8               	bcf	status,0,c
 10279  004B76  33C3               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10280  004B78  33C2               	rrcf	___lwdiv@divisor& (0+255),f,b
 10281                           
 10282                           ; BSR set to: 0
 10283  004B7A  2FC4               	decfsz	___lwdiv@counter& (0+255),f,b
 10284  004B7C  D7EE               	goto	l8941
 10285  004B7E                     l2303:
 10286                           
 10287                           ; BSR set to: 0
 10288  004B7E  C0C5  F0C0         	movff	___lwdiv@quotient,?___lwdiv
 10289  004B82  C0C6  F0C1         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10290                           
 10291                           ; BSR set to: 0
 10292  004B86  0012               	return		;funcret
 10293  004B88                     __end_of___lwdiv:
 10294                           	opt stack 0
 10295                           tblptru	equ	0xFF8
 10296                           tblptrh	equ	0xFF7
 10297                           tblptrl	equ	0xFF6
 10298                           tablat	equ	0xFF5
 10299                           prodh	equ	0xFF4
 10300                           prodl	equ	0xFF3
 10301                           intcon	equ	0xFF2
 10302                           postinc0	equ	0xFEE
 10303                           wreg	equ	0xFE8
 10304                           indf1	equ	0xFE7
 10305                           fsr1h	equ	0xFE2
 10306                           fsr1l	equ	0xFE1
 10307                           indf2	equ	0xFDF
 10308                           postinc2	equ	0xFDE
 10309                           postdec2	equ	0xFDD
 10310                           fsr2h	equ	0xFDA
 10311                           fsr2l	equ	0xFD9
 10312                           status	equ	0xFD8
 10313                           
 10314 ;; *************** function _ADC_GetConversion *****************
 10315 ;; Defined at:
 10316 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  channel         1    wreg     enum E6179
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;  channel         1    4[BANK0 ] enum E6179
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  2    0[BANK0 ] unsigned int 
 10323 ;; Registers used:
 10324 ;;		wreg, status,2, status,0
 10325 ;; Tracked objects:
 10326 ;;		On entry : F/0
 10327 ;;		On exit  : F/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10330 ;;      Params:         0       2       0       0       0       0       0       0       0
 10331 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10332 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10333 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10334 ;;Total ram usage:        5 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:   11
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_moteHandler
 10341 ;;		_moteJoiningProcess
 10342 ;;		_moteRunningProcess
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text36
 10347  0049BC                     __ptext36:
 10348                           	opt stack 0
 10349  0049BC                     _ADC_GetConversion:
 10350                           	opt stack 17
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;incstack = 0
 10354                           ;ADC_GetConversion@channel stored from wreg
 10355  0049BC  6FC4               	movwf	ADC_GetConversion@channel& (0+255),b
 10356                           
 10357                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10358  0049BE  C0C4  F0C2         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 10359  0049C2  0100               	movlb	0	; () banked
 10360  0049C4  47C2               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10361  0049C6  47C2               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10362  0049C8  50C2               	movf	4034,w,c	;volatile
 10363  0049CA  19C2               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10364  0049CC  0B83               	andlw	-125
 10365  0049CE  19C2               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10366  0049D0  6EC2               	movwf	4034,c	;volatile
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10370  0049D2  80C2               	bsf	4034,0,c	;volatile
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 10374  0049D4  0E14               	movlw	20
 10375  0049D6                     u8627:
 10376  0049D6  2EE8               	decfsz	wreg,f,c
 10377  0049D8  D7FE               	goto	u8627
 10378                           
 10379                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 10380  0049DA  82C2               	bsf	4034,1,c	;volatile
 10381  0049DC                     l1044:
 10382  0049DC  B2C2               	btfsc	4034,1,c	;volatile
 10383  0049DE  D7FE               	goto	l1044
 10384                           
 10385                           ;adc.c: 130: }
 10386                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 10387  0049E0  50C4               	movf	4036,w,c	;volatile
 10388  0049E2  0100               	movlb	0	; () banked
 10389  0049E4  6FC3               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 10390  0049E6  6BC2               	clrf	??_ADC_GetConversion& (0+255),b
 10391  0049E8  50C3               	movf	4035,w,c	;volatile
 10392  0049EA  25C2               	addwf	??_ADC_GetConversion& (0+255),w,b
 10393  0049EC  6FC0               	movwf	?_ADC_GetConversion& (0+255),b
 10394  0049EE  0E00               	movlw	0
 10395  0049F0  21C3               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 10396  0049F2  6FC1               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 10397                           
 10398                           ; BSR set to: 0
 10399  0049F4  0012               	return		;funcret
 10400  0049F6                     __end_of_ADC_GetConversion:
 10401                           	opt stack 0
 10402                           tblptru	equ	0xFF8
 10403                           tblptrh	equ	0xFF7
 10404                           tblptrl	equ	0xFF6
 10405                           tablat	equ	0xFF5
 10406                           prodh	equ	0xFF4
 10407                           prodl	equ	0xFF3
 10408                           intcon	equ	0xFF2
 10409                           postinc0	equ	0xFEE
 10410                           wreg	equ	0xFE8
 10411                           indf1	equ	0xFE7
 10412                           fsr1h	equ	0xFE2
 10413                           fsr1l	equ	0xFE1
 10414                           indf2	equ	0xFDF
 10415                           postinc2	equ	0xFDE
 10416                           postdec2	equ	0xFDD
 10417                           fsr2h	equ	0xFDA
 10418                           fsr2l	equ	0xFD9
 10419                           status	equ	0xFD8
 10420                           
 10421 ;; *************** function _TMRapp_Handler *****************
 10422 ;; Defined at:
 10423 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : F/0
 10434 ;;		On exit  : F/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10437 ;;      Params:         0       0       0       0       0       0       0       0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10440 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10441 ;;Total ram usage:        0 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:   12
 10444 ;; This function calls:
 10445 ;;		___lwmod
 10446 ;; This function is called by:
 10447 ;;		_moteHandler
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text37
 10452  005F68                     __ptext37:
 10453                           	opt stack 0
 10454  005F68                     _TMRapp_Handler:
 10455                           	opt stack 17
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;TMRapp.c: 25: timerMsTickCount++;
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;incstack = 0
 10462  005F68  4B89               	infsnz	_timerMsTickCount& (0+255),f,b
 10463  005F6A  2B8A               	incf	(_timerMsTickCount+1)& (0+255),f,b
 10464                           
 10465                           ; BSR set to: 0
 10466                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 10467  005F6C  C089  F0C7         	movff	_timerMsTickCount,___lwmod@dividend
 10468  005F70  C08A  F0C8         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10469  005F74  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
 10470  005F76  0E0A               	movlw	10
 10471  005F78  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10472  005F7A  EC37  F025         	call	___lwmod	;wreg free
 10473  005F7E  51C7               	movf	?___lwmod& (0+255),w,b
 10474  005F80  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10475  005F82  A4D8               	btfss	status,2,c
 10476  005F84  0012               	return	
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;TMRapp.c: 28: {
 10480                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 10481  005F86  8395               	bsf	_appTimer& (0+255),1,b
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 10485  005F88  C089  F0C7         	movff	_timerMsTickCount,___lwmod@dividend
 10486  005F8C  C08A  F0C8         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10487  005F90  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
 10488  005F92  0E64               	movlw	100
 10489  005F94  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10490  005F96  EC37  F025         	call	___lwmod	;wreg free
 10491  005F9A  51C7               	movf	?___lwmod& (0+255),w,b
 10492  005F9C  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10493  005F9E  A4D8               	btfss	status,2,c
 10494  005FA0  0012               	return	
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;TMRapp.c: 31: {
 10498                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 10499  005FA2  8595               	bsf	_appTimer& (0+255),2,b
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 10503  005FA4  C089  F0C7         	movff	_timerMsTickCount,___lwmod@dividend
 10504  005FA8  C08A  F0C8         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10505  005FAC  0E03               	movlw	3
 10506  005FAE  6FCA               	movwf	(___lwmod@divisor+1)& (0+255),b
 10507  005FB0  0EE8               	movlw	232
 10508  005FB2  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10509  005FB4  EC37  F025         	call	___lwmod	;wreg free
 10510  005FB8  51C7               	movf	?___lwmod& (0+255),w,b
 10511  005FBA  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10512  005FBC  A4D8               	btfss	status,2,c
 10513  005FBE  0012               	return	
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;TMRapp.c: 34: {
 10517                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 10518  005FC0  8795               	bsf	_appTimer& (0+255),3,b
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 10522  005FC2  C089  F0C7         	movff	_timerMsTickCount,___lwmod@dividend
 10523  005FC6  C08A  F0C8         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10524  005FCA  0EEA               	movlw	234
 10525  005FCC  6FCA               	movwf	(___lwmod@divisor+1)& (0+255),b
 10526  005FCE  0E60               	movlw	96
 10527  005FD0  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10528  005FD2  EC37  F025         	call	___lwmod	;wreg free
 10529  005FD6  51C7               	movf	?___lwmod& (0+255),w,b
 10530  005FD8  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10531  005FDA  A4D8               	btfss	status,2,c
 10532  005FDC  0012               	return	
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;TMRapp.c: 37: {
 10536                           ;TMRapp.c: 38: timerMinTickCount++;
 10537  005FDE  4B87               	infsnz	_timerMinTickCount& (0+255),f,b
 10538  005FE0  2B88               	incf	(_timerMinTickCount+1)& (0+255),f,b
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 10542  005FE2  8995               	bsf	_appTimer& (0+255),4,b
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 10546  005FE4  C087  F0C7         	movff	_timerMinTickCount,___lwmod@dividend
 10547  005FE8  C088  F0C8         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10548  005FEC  6BCA               	clrf	(___lwmod@divisor+1)& (0+255),b
 10549  005FEE  0E3C               	movlw	60
 10550  005FF0  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10551  005FF2  EC37  F025         	call	___lwmod	;wreg free
 10552  005FF6  51C7               	movf	?___lwmod& (0+255),w,b
 10553  005FF8  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10554  005FFA  A4D8               	btfss	status,2,c
 10555  005FFC  0012               	return	
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;TMRapp.c: 41: {
 10559                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 10560  005FFE  8B95               	bsf	_appTimer& (0+255),5,b
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 10564  006000  C087  F0C7         	movff	_timerMinTickCount,___lwmod@dividend
 10565  006004  C088  F0C8         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10566  006008  0E02               	movlw	2
 10567  00600A  6FCA               	movwf	(___lwmod@divisor+1)& (0+255),b
 10568  00600C  0ED0               	movlw	208
 10569  00600E  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10570  006010  EC37  F025         	call	___lwmod	;wreg free
 10571  006014  51C7               	movf	?___lwmod& (0+255),w,b
 10572  006016  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10573  006018  A4D8               	btfss	status,2,c
 10574  00601A  0012               	return	
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;TMRapp.c: 44: {
 10578                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 10579  00601C  8D95               	bsf	_appTimer& (0+255),6,b
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 10583  00601E  C087  F0C7         	movff	_timerMinTickCount,___lwmod@dividend
 10584  006022  C088  F0C8         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10585  006026  0E05               	movlw	5
 10586  006028  6FCA               	movwf	(___lwmod@divisor+1)& (0+255),b
 10587  00602A  0EA0               	movlw	160
 10588  00602C  6FC9               	movwf	___lwmod@divisor& (0+255),b
 10589  00602E  EC37  F025         	call	___lwmod	;wreg free
 10590  006032  51C7               	movf	?___lwmod& (0+255),w,b
 10591  006034  11C8               	iorwf	(?___lwmod+1)& (0+255),w,b
 10592  006036  A4D8               	btfss	status,2,c
 10593  006038  0012               	return	
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;TMRapp.c: 47: {
 10597                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 10598  00603A  8F95               	bsf	_appTimer& (0+255),7,b
 10599                           
 10600                           ;TMRapp.c: 50: timerMsTickCount = 0;
 10601  00603C  6B89               	clrf	_timerMsTickCount& (0+255),b
 10602  00603E  6B8A               	clrf	(_timerMsTickCount+1)& (0+255),b
 10603                           
 10604                           ;TMRapp.c: 51: timerMinTickCount = 0;
 10605  006040  6B87               	clrf	_timerMinTickCount& (0+255),b
 10606  006042  6B88               	clrf	(_timerMinTickCount+1)& (0+255),b
 10607  006044  0012               	return	
 10608  006046                     __end_of_TMRapp_Handler:
 10609                           	opt stack 0
 10610                           tblptru	equ	0xFF8
 10611                           tblptrh	equ	0xFF7
 10612                           tblptrl	equ	0xFF6
 10613                           tablat	equ	0xFF5
 10614                           prodh	equ	0xFF4
 10615                           prodl	equ	0xFF3
 10616                           intcon	equ	0xFF2
 10617                           postinc0	equ	0xFEE
 10618                           wreg	equ	0xFE8
 10619                           indf1	equ	0xFE7
 10620                           fsr1h	equ	0xFE2
 10621                           fsr1l	equ	0xFE1
 10622                           indf2	equ	0xFDF
 10623                           postinc2	equ	0xFDE
 10624                           postdec2	equ	0xFDD
 10625                           fsr2h	equ	0xFDA
 10626                           fsr2l	equ	0xFD9
 10627                           status	equ	0xFD8
 10628                           
 10629 ;; *************** function ___lwmod *****************
 10630 ;; Defined at:
 10631 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  dividend        2    7[BANK0 ] unsigned int 
 10634 ;;  divisor         2    9[BANK0 ] unsigned int 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;  counter         1   11[BANK0 ] unsigned char 
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  2    7[BANK0 ] unsigned int 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2, status,0
 10641 ;; Tracked objects:
 10642 ;;		On entry : F/0
 10643 ;;		On exit  : F/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10646 ;;      Params:         0       4       0       0       0       0       0       0       0
 10647 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10649 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10650 ;;Total ram usage:        5 bytes
 10651 ;; Hardware stack levels used:    1
 10652 ;; Hardware stack levels required when called:   11
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_moteApp_add16bToDataBuffer
 10657 ;;		_TMRapp_Handler
 10658 ;;		_oled_putUint16
 10659 ;;		_sprintf
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text38
 10664  004A6E                     __ptext38:
 10665                           	opt stack 0
 10666  004A6E                     ___lwmod:
 10667                           	opt stack 16
 10668                           
 10669                           ; BSR set to: 0
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;incstack = 0
 10673  004A6E  51C9               	movf	___lwmod@divisor& (0+255),w,b
 10674  004A70  11CA               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 10675  004A72  E017               	bz	l2313
 10676                           
 10677                           ; BSR set to: 0
 10678  004A74  0E01               	movlw	1
 10679  004A76  6FCB               	movwf	___lwmod@counter& (0+255),b
 10680  004A78  D004               	goto	l8959
 10681  004A7A                     l8957:
 10682                           
 10683                           ; BSR set to: 0
 10684  004A7A  90D8               	bcf	status,0,c
 10685  004A7C  37C9               	rlcf	___lwmod@divisor& (0+255),f,b
 10686  004A7E  37CA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 10687  004A80  2BCB               	incf	___lwmod@counter& (0+255),f,b
 10688  004A82                     l8959:
 10689                           
 10690                           ; BSR set to: 0
 10691  004A82  AFCA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 10692  004A84  D7FA               	goto	l8957
 10693  004A86                     l8961:
 10694                           
 10695                           ; BSR set to: 0
 10696  004A86  51C9               	movf	___lwmod@divisor& (0+255),w,b
 10697  004A88  5DC7               	subwf	___lwmod@dividend& (0+255),w,b
 10698  004A8A  51CA               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10699  004A8C  59C8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 10700  004A8E  E304               	bnc	l8965
 10701                           
 10702                           ; BSR set to: 0
 10703  004A90  51C9               	movf	___lwmod@divisor& (0+255),w,b
 10704  004A92  5FC7               	subwf	___lwmod@dividend& (0+255),f,b
 10705  004A94  51CA               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10706  004A96  5BC8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 10707  004A98                     l8965:
 10708                           
 10709                           ; BSR set to: 0
 10710  004A98  90D8               	bcf	status,0,c
 10711  004A9A  33CA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 10712  004A9C  33C9               	rrcf	___lwmod@divisor& (0+255),f,b
 10713                           
 10714                           ; BSR set to: 0
 10715  004A9E  2FCB               	decfsz	___lwmod@counter& (0+255),f,b
 10716  004AA0  D7F2               	goto	l8961
 10717  004AA2                     l2313:
 10718                           
 10719                           ; BSR set to: 0
 10720  004AA2  C0C7  F0C7         	movff	___lwmod@dividend,?___lwmod
 10721  004AA6  C0C8  F0C8         	movff	___lwmod@dividend+1,?___lwmod+1
 10722                           
 10723                           ; BSR set to: 0
 10724  004AAA  0012               	return		;funcret
 10725  004AAC                     __end_of___lwmod:
 10726                           	opt stack 0
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           postinc0	equ	0xFEE
 10735                           wreg	equ	0xFE8
 10736                           indf1	equ	0xFE7
 10737                           fsr1h	equ	0xFE2
 10738                           fsr1l	equ	0xFE1
 10739                           indf2	equ	0xFDF
 10740                           postinc2	equ	0xFDE
 10741                           postdec2	equ	0xFDD
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           
 10746 ;; *************** function _TMRapp_ClearBitFlags *****************
 10747 ;; Defined at:
 10748 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		None
 10757 ;; Tracked objects:
 10758 ;;		On entry : F/0
 10759 ;;		On exit  : F/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:   11
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_moteHandler
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text39
 10777  00441A                     __ptext39:
 10778                           	opt stack 0
 10779  00441A                     _TMRapp_ClearBitFlags:
 10780                           	opt stack 18
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;incstack = 0
 10787  00441A  6B95               	clrf	_appTimer& (0+255),b
 10788                           
 10789                           ; BSR set to: 0
 10790  00441C  0012               	return		;funcret
 10791  00441E                     __end_of_TMRapp_ClearBitFlags:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           indf1	equ	0xFE7
 10803                           fsr1h	equ	0xFE2
 10804                           fsr1l	equ	0xFE1
 10805                           indf2	equ	0xFDF
 10806                           postinc2	equ	0xFDE
 10807                           postdec2	equ	0xFDD
 10808                           fsr2h	equ	0xFDA
 10809                           fsr2l	equ	0xFD9
 10810                           status	equ	0xFD8
 10811                           
 10812 ;; *************** function _MOTEapp_TimerBasedTask *****************
 10813 ;; Defined at:
 10814 ;;		line 831 in file "../Includes/Board/MOTEapp.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  timerTask       1    wreg     struct .
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;  timerTask       1    0[BANK0 ] struct .
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, status,2, status,0
 10823 ;; Tracked objects:
 10824 ;;		On entry : F/0
 10825 ;;		On exit  : F/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10828 ;;      Params:         0       0       0       0       0       0       0       0       0
 10829 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10831 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10832 ;;Total ram usage:        1 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:   11
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_moteHandler
 10839 ;; This function uses a non-reentrant model
 10840 ;;
 10841                           
 10842                           	psect	text40
 10843  004480                     __ptext40:
 10844                           	opt stack 0
 10845  004480                     _MOTEapp_TimerBasedTask:
 10846                           	opt stack 18
 10847                           
 10848                           ; BSR set to: 0
 10849                           ;incstack = 0
 10850                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 10851  004480  6FC0               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 10852                           
 10853                           ;MOTEapp.c: 836: if (timerTask.mSecTenTick)
 10854  004482  0100               	movlb	0	; () banked
 10855  004484  B3C0               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;MOTEapp.c: 837: {
 10859                           ;MOTEapp.c: 839: m10SecTicker++;
 10860  004486  2B99               	incf	_m10SecTicker& (0+255),f,b
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;MOTEapp.c: 845: }
 10864                           ;MOTEapp.c: 846: if (timerTask.SecTick)
 10865  004488  B7C0               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;MOTEapp.c: 847: {
 10869                           ;MOTEapp.c: 849: secTicker++;
 10870  00448A  2B9D               	incf	_secTicker& (0+255),f,b
 10871  00448C  0012               	return	
 10872  00448E                     __end_of_MOTEapp_TimerBasedTask:
 10873                           	opt stack 0
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           intcon	equ	0xFF2
 10881                           postinc0	equ	0xFEE
 10882                           wreg	equ	0xFE8
 10883                           indf1	equ	0xFE7
 10884                           fsr1h	equ	0xFE2
 10885                           fsr1l	equ	0xFE1
 10886                           indf2	equ	0xFDF
 10887                           postinc2	equ	0xFDE
 10888                           postdec2	equ	0xFDD
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8
 10892                           
 10893 ;; *************** function _USBapp_handlerState *****************
 10894 ;; Defined at:
 10895 ;;		line 63 in file "../Includes/Board/USBapp.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  state           1    wreg     enum E6263
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  state           1    0[BANK0 ] enum E6263
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  1    wreg      void 
 10902 ;; Registers used:
 10903 ;;		wreg
 10904 ;; Tracked objects:
 10905 ;;		On entry : F/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0
 10910 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10912 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10913 ;;Total ram usage:        1 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:   11
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_main
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text41
 10924  004432                     __ptext41:
 10925                           	opt stack 0
 10926  004432                     _USBapp_handlerState:
 10927                           	opt stack 19
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;incstack = 0
 10931                           ;USBapp_handlerState@state stored from wreg
 10932  004432  6FC0               	movwf	USBapp_handlerState@state& (0+255),b
 10933                           
 10934                           ;USBapp.c: 65: usbState = state;
 10935  004434  C0C0  F09F         	movff	USBapp_handlerState@state,_usbState
 10936  004438  0012               	return		;funcret
 10937  00443A                     __end_of_USBapp_handlerState:
 10938                           	opt stack 0
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           intcon	equ	0xFF2
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           indf1	equ	0xFE7
 10949                           fsr1h	equ	0xFE2
 10950                           fsr1l	equ	0xFE1
 10951                           indf2	equ	0xFDF
 10952                           postinc2	equ	0xFDE
 10953                           postdec2	equ	0xFDD
 10954                           fsr2h	equ	0xFDA
 10955                           fsr2l	equ	0xFD9
 10956                           status	equ	0xFD8
 10957                           
 10958 ;; *************** function _USBapp_Handler *****************
 10959 ;; Defined at:
 10960 ;;		line 68 in file "../Includes/Board/USBapp.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;		None
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;		None
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0
 10975 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10977 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10978 ;;Total ram usage:        0 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:   17
 10981 ;; This function calls:
 10982 ;;		_USBapp_DeviceCdcEmulatorHandler
 10983 ;;		_oled_clear
 10984 ;;		_oled_putString
 10985 ;; This function is called by:
 10986 ;;		_main
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text42
 10991  0051B6                     __ptext42:
 10992                           	opt stack 0
 10993  0051B6                     _USBapp_Handler:
 10994                           	opt stack 13
 10995                           
 10996                           ;USBapp.c: 72: {
 10997                           ;USBapp.c: 73: switch(usbState)
 10998                           
 10999                           ;incstack = 0
 11000                           ;USBapp.c: 71: do
 11001  0051B6  D02E               	goto	l10281
 11002  0051B8                     l677:
 11003                           
 11004                           ; BSR set to: 0
 11005  0051B8  D7FF               	goto	l677
 11006  0051BA                     l10261:
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;USBapp.c: 80: oled_clear();
 11010  0051BA  ECA6  F022         	call	_oled_clear	;wreg free
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 11014  0051BE  0E3E               	movlw	low STR_98
 11015  0051C0  6FCD               	movwf	oled_putString@string& (0+255),b
 11016  0051C2  0E7F               	movlw	high STR_98
 11017  0051C4  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
 11018  0051C6  0E01               	movlw	1
 11019  0051C8  6FCF               	movwf	oled_putString@station_dot& (0+255),b
 11020  0051CA  6BD0               	clrf	oled_putString@start_page& (0+255),b
 11021  0051CC  ECC8  F027         	call	_oled_putString	;wreg free
 11022                           
 11023                           ;USBapp.c: 82: oled_putString("Command",2,1);
 11024  0051D0  0E8F               	movlw	low STR_99
 11025  0051D2  0100               	movlb	0	; () banked
 11026  0051D4  6FCD               	movwf	oled_putString@string& (0+255),b
 11027  0051D6  0E7F               	movlw	high STR_99
 11028  0051D8  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
 11029  0051DA  0E02               	movlw	2
 11030  0051DC  6FCF               	movwf	oled_putString@station_dot& (0+255),b
 11031  0051DE  0E01               	movlw	1
 11032  0051E0  6FD0               	movwf	oled_putString@start_page& (0+255),b
 11033  0051E2  ECC8  F027         	call	_oled_putString	;wreg free
 11034                           
 11035                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 11036  0051E6  0EA1               	movlw	low STR_100
 11037  0051E8  0100               	movlb	0	; () banked
 11038  0051EA  6FCD               	movwf	oled_putString@string& (0+255),b
 11039  0051EC  0E7E               	movlw	high STR_100
 11040  0051EE  6FCE               	movwf	(oled_putString@string+1)& (0+255),b
 11041  0051F0  6BCF               	clrf	oled_putString@station_dot& (0+255),b
 11042  0051F2  0E02               	movlw	2
 11043  0051F4  6FD0               	movwf	oled_putString@start_page& (0+255),b
 11044  0051F6  ECC8  F027         	call	_oled_putString	;wreg free
 11045                           
 11046                           ;USBapp.c: 85: usbState = USB_RUNNING;
 11047  0051FA  0E01               	movlw	1
 11048  0051FC  0100               	movlb	0	; () banked
 11049  0051FE  D005               	goto	L15
 11050  005200                     l10271:
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 11054  005200  0E20               	movlw	32
 11055  005202  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 11056  005204  D001               	goto	l10275
 11057  005206  D00E               	goto	l684
 11058  005208                     l10275:
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;USBapp.c: 93: }
 11062                           ;USBapp.c: 94: usbState = USB_CDC;
 11063  005208  0E02               	movlw	2
 11064  00520A                     L15:
 11065  00520A  6F9F               	movwf	_usbState& (0+255),b
 11066                           
 11067                           ;USBapp.c: 95: break;
 11068  00520C  D00B               	goto	l684
 11069  00520E                     l10277:
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 11073  00520E  EC93  F02C         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 11074                           
 11075                           ;USBapp.c: 101: break;
 11076  005212  D008               	goto	l684
 11077  005214                     l10281:
 11078  005214  0100               	movlb	0	; () banked
 11079  005216  519F               	movf	_usbState& (0+255),w,b
 11080                           
 11081                           ; Switch size 1, requested type "speed"
 11082                           ; Number of cases is 3, Range of values is 0 to 2
 11083                           ; switch strategies available:
 11084                           ; Name         Instructions Cycles
 11085                           ; simple_byte           10     6 (average)
 11086                           ;	Chosen strategy is simple_byte
 11087  005218  E0D0               	bz	l10261
 11088  00521A  0A01               	xorlw	1	; case 1
 11089  00521C  E0F1               	bz	l10271
 11090  00521E  0A03               	xorlw	3	; case 2
 11091  005220  E0F6               	bz	l10277
 11092  005222  D7CA               	goto	l677
 11093  005224                     l684:
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 11097  005224  B080               	btfsc	3968,0,c	;volatile
 11098  005226  D7F6               	goto	l10281
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;USBapp.c: 104: __nop();
 11102  005228  F000               	nop	
 11103  00522A  0012               	return		;funcret
 11104  00522C                     __end_of_USBapp_Handler:
 11105                           	opt stack 0
 11106                           tblptru	equ	0xFF8
 11107                           tblptrh	equ	0xFF7
 11108                           tblptrl	equ	0xFF6
 11109                           tablat	equ	0xFF5
 11110                           prodh	equ	0xFF4
 11111                           prodl	equ	0xFF3
 11112                           intcon	equ	0xFF2
 11113                           postinc0	equ	0xFEE
 11114                           wreg	equ	0xFE8
 11115                           indf1	equ	0xFE7
 11116                           fsr1h	equ	0xFE2
 11117                           fsr1l	equ	0xFE1
 11118                           indf2	equ	0xFDF
 11119                           postinc2	equ	0xFDE
 11120                           postdec2	equ	0xFDD
 11121                           fsr2h	equ	0xFDA
 11122                           fsr2l	equ	0xFD9
 11123                           status	equ	0xFD8
 11124                           
 11125 ;; *************** function _oled_putString *****************
 11126 ;; Defined at:
 11127 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 11130 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_100(12), STR_99(8), 
 11131 ;;		 -> STR_98(9), STR_80(2), STR_79(16), STR_78(13), 
 11132 ;;		 -> STR_77(12), STR_76(17), STR_75(7), STR_73(7), 
 11133 ;;		 -> STR_71(7), STR_70(2), STR_69(7), STR_68(7), 
 11134 ;;		 -> STR_67(16), STR_66(8), STR_65(10), STR_64(15), 
 11135 ;;		 -> STR_62(17), STR_61(7), STR_58(17), STR_56(9), 
 11136 ;;		 -> STR_53(7), cmd(64), STR_48(8), STR_45(9), 
 11137 ;;		 -> STR_42(8), STR_39(12), STR_36(12), STR_33(12), 
 11138 ;;		 -> modemResonseBuffer(64), STR_30(8), STR_28(17), STR_27(17), 
 11139 ;;		 -> STR_26(17), STR_25(17), STR_24(9), STR_23(10), 
 11140 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 11141 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 11142 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 11143 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 11144 ;;		 -> STR_4(9), STR_3(16), STR_2(10), STR_1(14), 
 11145 ;;  station_dot     1   15[BANK0 ] unsigned char 
 11146 ;;  start_page      1   16[BANK0 ] unsigned char 
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;  index           1   17[BANK0 ] unsigned char 
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  1    wreg      void 
 11151 ;; Registers used:
 11152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11153 ;; Tracked objects:
 11154 ;;		On entry : F/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11158 ;;      Params:         0       4       0       0       0       0       0       0       0
 11159 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11161 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11162 ;;Total ram usage:        5 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:   15
 11165 ;; This function calls:
 11166 ;;		_oled_putChar
 11167 ;; This function is called by:
 11168 ;;		_main
 11169 ;;		_moteHandler
 11170 ;;		_moteJoiningProcess
 11171 ;;		_moteRunningProcess
 11172 ;;		_USBapp_Handler
 11173 ;;		_oled_putUint8
 11174 ;;		_oled_putUint16
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text43
 11179  004F90                     __ptext43:
 11180                           	opt stack 0
 11181  004F90                     _oled_putString:
 11182                           	opt stack 15
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;SSD1306oLED.c: 275: uint8_t index;
 11186                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 11187                           
 11188                           ;incstack = 0
 11189  004F90  C0CF  F0D1         	movff	oled_putString@station_dot,oled_putString@index
 11190  004F94                     l8761:
 11191                           
 11192                           ; BSR set to: 0
 11193  004F94  0E0F               	movlw	15
 11194  004F96  65D1               	cpfsgt	oled_putString@index& (0+255),b
 11195  004F98  D001               	goto	l8765
 11196  004F9A  0C0F               	retlw	15
 11197  004F9C                     l8765:
 11198                           
 11199                           ; BSR set to: 0
 11200                           ;SSD1306oLED.c: 277: {
 11201                           ;SSD1306oLED.c: 278: if (*string != 0)
 11202  004F9C  C0CD  FFF6         	movff	oled_putString@string,tblptrl
 11203  004FA0  C0CE  FFF7         	movff	oled_putString@string+1,tblptrh
 11204  004FA4  6AF8               	clrf	tblptru,c
 11205  004FA6  0E07               	movlw	(high __ramtop+-1)
 11206  004FA8  64F7               	cpfsgt	tblptrh,c
 11207  004FAA  D003               	bra	u6817
 11208  004FAC  0008               	tblrd		*
 11209  004FAE  50F5               	movf	tablat,w,c
 11210  004FB0  D005               	bra	u6810
 11211  004FB2                     u6817:
 11212  004FB2  CFF6 FFE1          	movff	tblptrl,fsr1l
 11213  004FB6  CFF7 FFE2          	movff	tblptrh,fsr1h
 11214  004FBA  50E7               	movf	indf1,w,c
 11215  004FBC                     u6810:
 11216  004FBC  0900               	iorlw	0
 11217  004FBE  B4D8               	btfsc	status,2,c
 11218  004FC0  0012               	return	
 11219                           
 11220                           ;SSD1306oLED.c: 279: {
 11221                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 11222  004FC2  C0D1  F0C3         	movff	oled_putString@index,oled_putChar@station_dot
 11223  004FC6  C0D0  F0C4         	movff	oled_putString@start_page,oled_putChar@start_page
 11224  004FCA  C0CD  FFF6         	movff	oled_putString@string,tblptrl
 11225  004FCE  C0CE  FFF7         	movff	oled_putString@string+1,tblptrh
 11226  004FD2  6AF8               	clrf	tblptru,c
 11227  004FD4  0E07               	movlw	(high __ramtop+-1)
 11228  004FD6  64F7               	cpfsgt	tblptrh,c
 11229  004FD8  D003               	bra	u6837
 11230  004FDA  0008               	tblrd		*
 11231  004FDC  50F5               	movf	tablat,w,c
 11232  004FDE  D005               	bra	u6830
 11233  004FE0                     u6837:
 11234  004FE0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11235  004FE4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11236  004FE8  50E7               	movf	indf1,w,c
 11237  004FEA                     u6830:
 11238  004FEA  ECA0  F028         	call	_oled_putChar
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;SSD1306oLED.c: 281: *string++;
 11242  004FEE  4BCD               	infsnz	oled_putString@string& (0+255),f,b
 11243  004FF0  2BCE               	incf	(oled_putString@string+1)& (0+255),f,b
 11244                           
 11245                           ; BSR set to: 0
 11246                           
 11247                           ;SSD1306oLED.c: 282: }
 11248  004FF2  2BD1               	incf	oled_putString@index& (0+255),f,b
 11249  004FF4  D7CF               	goto	l8761
 11250  004FF6                     __end_of_oled_putString:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           intcon	equ	0xFF2
 11259                           postinc0	equ	0xFEE
 11260                           wreg	equ	0xFE8
 11261                           indf1	equ	0xFE7
 11262                           fsr1h	equ	0xFE2
 11263                           fsr1l	equ	0xFE1
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           postdec2	equ	0xFDD
 11267                           fsr2h	equ	0xFDA
 11268                           fsr2l	equ	0xFD9
 11269                           status	equ	0xFD8
 11270                           
 11271 ;; *************** function _oled_clear *****************
 11272 ;; Defined at:
 11273 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;		None
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : F/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11287 ;;      Params:         0       0       0       0       0       0       0       0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11290 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11291 ;;Total ram usage:        0 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:   16
 11294 ;; This function calls:
 11295 ;;		_oled_clearRow
 11296 ;; This function is called by:
 11297 ;;		_main
 11298 ;;		_moteHandler
 11299 ;;		_moteJoiningProcess
 11300 ;;		_moteRunningProcess
 11301 ;;		_USBapp_Handler
 11302 ;;		_oled_init
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text44
 11307  00454C                     __ptext44:
 11308                           	opt stack 0
 11309  00454C                     _oled_clear:
 11310                           	opt stack 13
 11311                           
 11312                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 11313                           
 11314                           ;incstack = 0
 11315  00454C  0E00               	movlw	0
 11316  00454E  ECEC  F022         	call	_oled_clearRow
 11317                           
 11318                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 11319  004552  0E01               	movlw	1
 11320  004554  ECEC  F022         	call	_oled_clearRow
 11321                           
 11322                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 11323  004558  0E02               	movlw	2
 11324  00455A  ECEC  F022         	call	_oled_clearRow
 11325                           
 11326                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 11327  00455E  0E03               	movlw	3
 11328  004560  EFEC  F022         	goto	_oled_clearRow
 11329  004564                     __end_of_oled_clear:
 11330                           	opt stack 0
 11331                           tblptru	equ	0xFF8
 11332                           tblptrh	equ	0xFF7
 11333                           tblptrl	equ	0xFF6
 11334                           tablat	equ	0xFF5
 11335                           prodh	equ	0xFF4
 11336                           prodl	equ	0xFF3
 11337                           intcon	equ	0xFF2
 11338                           postinc0	equ	0xFEE
 11339                           wreg	equ	0xFE8
 11340                           indf1	equ	0xFE7
 11341                           fsr1h	equ	0xFE2
 11342                           fsr1l	equ	0xFE1
 11343                           indf2	equ	0xFDF
 11344                           postinc2	equ	0xFDE
 11345                           postdec2	equ	0xFDD
 11346                           fsr2h	equ	0xFDA
 11347                           fsr2l	equ	0xFD9
 11348                           status	equ	0xFD8
 11349                           
 11350 ;; *************** function _oled_clearRow *****************
 11351 ;; Defined at:
 11352 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  page            1    wreg     unsigned char 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  page            1   13[BANK0 ] unsigned char 
 11357 ;;  index           1   14[BANK0 ] unsigned char 
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : F/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0
 11368 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11370 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11371 ;;Total ram usage:        2 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:   15
 11374 ;; This function calls:
 11375 ;;		_oled_putChar
 11376 ;; This function is called by:
 11377 ;;		_oled_clear
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text45
 11382  0045D8                     __ptext45:
 11383                           	opt stack 0
 11384  0045D8                     _oled_clearRow:
 11385                           	opt stack 13
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;incstack = 0
 11389                           ;oled_clearRow@page stored from wreg
 11390  0045D8  0100               	movlb	0	; () banked
 11391  0045DA  6FCD               	movwf	oled_clearRow@page& (0+255),b
 11392                           
 11393                           ;SSD1306oLED.c: 300: uint8_t index;
 11394                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 11395  0045DC  6BCE               	clrf	oled_clearRow@index& (0+255),b
 11396  0045DE                     l8605:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;SSD1306oLED.c: 303: {
 11400                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 11401  0045DE  C0CE  F0C3         	movff	oled_clearRow@index,oled_putChar@station_dot
 11402  0045E2  C0CD  F0C4         	movff	oled_clearRow@page,oled_putChar@start_page
 11403  0045E6  0E20               	movlw	32
 11404  0045E8  ECA0  F028         	call	_oled_putChar
 11405                           
 11406                           ; BSR set to: 0
 11407  0045EC  2BCE               	incf	oled_clearRow@index& (0+255),f,b
 11408                           
 11409                           ; BSR set to: 0
 11410  0045EE  0E0F               	movlw	15
 11411  0045F0  65CE               	cpfsgt	oled_clearRow@index& (0+255),b
 11412  0045F2  D7F5               	goto	l8605
 11413  0045F4  0C0F               	retlw	15
 11414  0045F6                     __end_of_oled_clearRow:
 11415                           	opt stack 0
 11416                           tblptru	equ	0xFF8
 11417                           tblptrh	equ	0xFF7
 11418                           tblptrl	equ	0xFF6
 11419                           tablat	equ	0xFF5
 11420                           prodh	equ	0xFF4
 11421                           prodl	equ	0xFF3
 11422                           intcon	equ	0xFF2
 11423                           postinc0	equ	0xFEE
 11424                           wreg	equ	0xFE8
 11425                           indf1	equ	0xFE7
 11426                           fsr1h	equ	0xFE2
 11427                           fsr1l	equ	0xFE1
 11428                           indf2	equ	0xFDF
 11429                           postinc2	equ	0xFDE
 11430                           postdec2	equ	0xFDD
 11431                           fsr2h	equ	0xFDA
 11432                           fsr2l	equ	0xFD9
 11433                           status	equ	0xFD8
 11434                           
 11435 ;; *************** function _oled_putChar *****************
 11436 ;; Defined at:
 11437 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  k               1    wreg     unsigned char 
 11440 ;;  station_dot     1    3[BANK0 ] unsigned char 
 11441 ;;  start_page      1    4[BANK0 ] unsigned char 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;  k               1   11[BANK0 ] unsigned char 
 11444 ;;  index           1   12[BANK0 ] unsigned char 
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      void 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : F/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11454 ;;      Params:         0       2       0       0       0       0       0       0       0
 11455 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11456 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11457 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11458 ;;Total ram usage:       10 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:   14
 11461 ;; This function calls:
 11462 ;;		_Set_Column_Address
 11463 ;;		_Set_Page_Address
 11464 ;;		_oled_writeData
 11465 ;; This function is called by:
 11466 ;;		_oled_putString
 11467 ;;		_oled_clearRow
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text46
 11472  005140                     __ptext46:
 11473                           	opt stack 0
 11474  005140                     _oled_putChar:
 11475                           	opt stack 15
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;incstack = 0
 11479                           ;oled_putChar@k stored from wreg
 11480  005140  0100               	movlb	0	; () banked
 11481  005142  6FCB               	movwf	oled_putChar@k& (0+255),b
 11482                           
 11483                           ;SSD1306oLED.c: 260: uint8_t index;
 11484                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 11485  005144  51C4               	movf	oled_putChar@start_page& (0+255),w,b
 11486  005146  EC7C  F022         	call	_Set_Page_Address
 11487                           
 11488                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 11489  00514A  0100               	movlb	0	; () banked
 11490  00514C  51C3               	movf	oled_putChar@station_dot& (0+255),w,b
 11491  00514E  0D08               	mullw	8
 11492  005150  50F3               	movf	prodl,w,c
 11493  005152  ECDD  F022         	call	_Set_Column_Address
 11494                           
 11495                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 11496  005156  988A               	bcf	3978,4,c	;volatile
 11497                           
 11498                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 11499  005158  0100               	movlb	0	; () banked
 11500  00515A  6BCC               	clrf	oled_putChar@index& (0+255),b
 11501  00515C                     l8553:
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;SSD1306oLED.c: 267: {
 11505                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 11506  00515C  6BC5               	clrf	??_oled_putChar& (0+255),b
 11507  00515E  69C6               	setf	(??_oled_putChar+1)& (0+255),b
 11508  005160  51CB               	movf	oled_putChar@k& (0+255),w,b
 11509  005162  6FC7               	movwf	(??_oled_putChar+2)& (0+255),b
 11510  005164  6BC8               	clrf	(??_oled_putChar+3)& (0+255),b
 11511  005166  90D8               	bcf	status,0,c
 11512  005168  37C7               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11513  00516A  37C8               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11514  00516C  90D8               	bcf	status,0,c
 11515  00516E  37C7               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11516  005170  37C8               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11517  005172  90D8               	bcf	status,0,c
 11518  005174  37C7               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11519  005176  37C8               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11520  005178  C0FB  F0C9         	movff	_selectedFont,??_oled_putChar+4
 11521  00517C  C0FC  F0CA         	movff	_selectedFont+1,??_oled_putChar+5
 11522  005180  51C7               	movf	(??_oled_putChar+2)& (0+255),w,b
 11523  005182  27C9               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11524  005184  51C8               	movf	(??_oled_putChar+3)& (0+255),w,b
 11525  005186  23CA               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11526  005188  51CC               	movf	oled_putChar@index& (0+255),w,b
 11527  00518A  27C9               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11528  00518C  0E00               	movlw	0
 11529  00518E  23CA               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11530  005190  51C5               	movf	??_oled_putChar& (0+255),w,b
 11531  005192  27C9               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11532  005194  51C6               	movf	(??_oled_putChar+1)& (0+255),w,b
 11533  005196  23CA               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11534  005198  C0C9  FFF6         	movff	??_oled_putChar+4,tblptrl
 11535  00519C  C0CA  FFF7         	movff	??_oled_putChar+5,tblptrh
 11536  0051A0                     	if	0	;tblptru may be non-zero
 11537  0051A0                     	endif
 11538  0051A0                     	if	0	;tblptru may be non-zero
 11539  0051A0                     	endif
 11540  0051A0  0008               	tblrd		*
 11541  0051A2  50F5               	movf	tablat,w,c
 11542  0051A4  EC2D  F022         	call	_oled_writeData
 11543  0051A8  0100               	movlb	0	; () banked
 11544  0051AA  2BCC               	incf	oled_putChar@index& (0+255),f,b
 11545                           
 11546                           ; BSR set to: 0
 11547  0051AC  0E07               	movlw	7
 11548  0051AE  65CC               	cpfsgt	oled_putChar@index& (0+255),b
 11549  0051B0  D7D5               	goto	l8553
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;SSD1306oLED.c: 269: }
 11553                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 11554  0051B2  888A               	bsf	3978,4,c	;volatile
 11555                           
 11556                           ; BSR set to: 0
 11557  0051B4  0C07               	retlw	7	;funcret
 11558  0051B6                     __end_of_oled_putChar:
 11559                           	opt stack 0
 11560                           tblptru	equ	0xFF8
 11561                           tblptrh	equ	0xFF7
 11562                           tblptrl	equ	0xFF6
 11563                           tablat	equ	0xFF5
 11564                           prodh	equ	0xFF4
 11565                           prodl	equ	0xFF3
 11566                           intcon	equ	0xFF2
 11567                           postinc0	equ	0xFEE
 11568                           wreg	equ	0xFE8
 11569                           indf1	equ	0xFE7
 11570                           fsr1h	equ	0xFE2
 11571                           fsr1l	equ	0xFE1
 11572                           indf2	equ	0xFDF
 11573                           postinc2	equ	0xFDE
 11574                           postdec2	equ	0xFDD
 11575                           fsr2h	equ	0xFDA
 11576                           fsr2l	equ	0xFD9
 11577                           status	equ	0xFD8
 11578                           
 11579 ;; *************** function _oled_writeData *****************
 11580 ;; Defined at:
 11581 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  data            1    wreg     unsigned char 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  data            1    1[BANK0 ] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, status,2, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : F/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0
 11596 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11598 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11599 ;;Total ram usage:        1 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:   12
 11602 ;; This function calls:
 11603 ;;		_SPI_Exchange8bit
 11604 ;; This function is called by:
 11605 ;;		_oled_putChar
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text47
 11610  00445A                     __ptext47:
 11611                           	opt stack 0
 11612  00445A                     _oled_writeData:
 11613                           	opt stack 16
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;incstack = 0
 11617                           ;oled_writeData@data stored from wreg
 11618  00445A  6FC1               	movwf	oled_writeData@data& (0+255),b
 11619                           
 11620                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 11621  00445C  8A8A               	bsf	3978,5,c	;volatile
 11622                           
 11623                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 11624  00445E  0100               	movlb	0	; () banked
 11625  004460  51C1               	movf	oled_writeData@data& (0+255),w,b
 11626  004462  EF4F  F022         	goto	_SPI_Exchange8bit
 11627  004466                     __end_of_oled_writeData:
 11628                           	opt stack 0
 11629                           tblptru	equ	0xFF8
 11630                           tblptrh	equ	0xFF7
 11631                           tblptrl	equ	0xFF6
 11632                           tablat	equ	0xFF5
 11633                           prodh	equ	0xFF4
 11634                           prodl	equ	0xFF3
 11635                           intcon	equ	0xFF2
 11636                           postinc0	equ	0xFEE
 11637                           wreg	equ	0xFE8
 11638                           indf1	equ	0xFE7
 11639                           fsr1h	equ	0xFE2
 11640                           fsr1l	equ	0xFE1
 11641                           indf2	equ	0xFDF
 11642                           postinc2	equ	0xFDE
 11643                           postdec2	equ	0xFDD
 11644                           fsr2h	equ	0xFDA
 11645                           fsr2l	equ	0xFD9
 11646                           status	equ	0xFD8
 11647                           
 11648 ;; *************** function _Set_Page_Address *****************
 11649 ;; Defined at:
 11650 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  address         1    wreg     unsigned char 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  address         1    2[BANK0 ] unsigned char 
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      void 
 11657 ;; Registers used:
 11658 ;;		wreg, status,2, status,0, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : F/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0
 11665 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11667 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11668 ;;Total ram usage:        1 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:   13
 11671 ;; This function calls:
 11672 ;;		_oled_writeCommand
 11673 ;; This function is called by:
 11674 ;;		_oled_putChar
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text48
 11679  0044F8                     __ptext48:
 11680                           	opt stack 0
 11681  0044F8                     _Set_Page_Address:
 11682                           	opt stack 15
 11683                           
 11684                           ;incstack = 0
 11685                           ;Set_Page_Address@address stored from wreg
 11686  0044F8  6FC2               	movwf	Set_Page_Address@address& (0+255),b
 11687                           
 11688                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 11689  0044FA  0EB0               	movlw	176
 11690  0044FC  0100               	movlb	0	; () banked
 11691  0044FE  13C2               	iorwf	Set_Page_Address@address& (0+255),f,b
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 11695  004500  988A               	bcf	3978,4,c	;volatile
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 11699  004502  51C2               	movf	Set_Page_Address@address& (0+255),w,b
 11700  004504  EC27  F022         	call	_oled_writeCommand
 11701                           
 11702                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 11703  004508  888A               	bsf	3978,4,c	;volatile
 11704  00450A  0012               	return		;funcret
 11705  00450C                     __end_of_Set_Page_Address:
 11706                           	opt stack 0
 11707                           tblptru	equ	0xFF8
 11708                           tblptrh	equ	0xFF7
 11709                           tblptrl	equ	0xFF6
 11710                           tablat	equ	0xFF5
 11711                           prodh	equ	0xFF4
 11712                           prodl	equ	0xFF3
 11713                           intcon	equ	0xFF2
 11714                           postinc0	equ	0xFEE
 11715                           wreg	equ	0xFE8
 11716                           indf1	equ	0xFE7
 11717                           fsr1h	equ	0xFE2
 11718                           fsr1l	equ	0xFE1
 11719                           indf2	equ	0xFDF
 11720                           postinc2	equ	0xFDE
 11721                           postdec2	equ	0xFDD
 11722                           fsr2h	equ	0xFDA
 11723                           fsr2l	equ	0xFD9
 11724                           status	equ	0xFD8
 11725                           
 11726 ;; *************** function _Set_Column_Address *****************
 11727 ;; Defined at:
 11728 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;  address         1    wreg     unsigned char 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;  address         1    2[BANK0 ] unsigned char 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  1    wreg      void 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : F/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11742 ;;      Params:         0       0       0       0       0       0       0       0       0
 11743 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11745 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11746 ;;Total ram usage:        1 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:   13
 11749 ;; This function calls:
 11750 ;;		_oled_writeCommand
 11751 ;; This function is called by:
 11752 ;;		_oled_putChar
 11753 ;; This function uses a non-reentrant model
 11754 ;;
 11755                           
 11756                           	psect	text49
 11757  0045BA                     __ptext49:
 11758                           	opt stack 0
 11759  0045BA                     _Set_Column_Address:
 11760                           	opt stack 15
 11761                           
 11762                           ;incstack = 0
 11763                           ;Set_Column_Address@address stored from wreg
 11764  0045BA  6FC2               	movwf	Set_Column_Address@address& (0+255),b
 11765                           
 11766                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 11767  0045BC  988A               	bcf	3978,4,c	;volatile
 11768                           
 11769                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 11770  0045BE  0100               	movlb	0	; () banked
 11771  0045C0  39C2               	swapf	Set_Column_Address@address& (0+255),w,b
 11772  0045C2  0B0F               	andlw	15
 11773  0045C4  0910               	iorlw	16
 11774  0045C6  EC27  F022         	call	_oled_writeCommand
 11775                           
 11776                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 11777  0045CA  0100               	movlb	0	; () banked
 11778  0045CC  51C2               	movf	Set_Column_Address@address& (0+255),w,b
 11779  0045CE  0B0F               	andlw	15
 11780  0045D0  EC27  F022         	call	_oled_writeCommand
 11781                           
 11782                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 11783  0045D4  888A               	bsf	3978,4,c	;volatile
 11784  0045D6  0012               	return		;funcret
 11785  0045D8                     __end_of_Set_Column_Address:
 11786                           	opt stack 0
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           intcon	equ	0xFF2
 11794                           postinc0	equ	0xFEE
 11795                           wreg	equ	0xFE8
 11796                           indf1	equ	0xFE7
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           indf2	equ	0xFDF
 11800                           postinc2	equ	0xFDE
 11801                           postdec2	equ	0xFDD
 11802                           fsr2h	equ	0xFDA
 11803                           fsr2l	equ	0xFD9
 11804                           status	equ	0xFD8
 11805                           
 11806 ;; *************** function _oled_writeCommand *****************
 11807 ;; Defined at:
 11808 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  command         1    wreg     unsigned char 
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;  command         1    1[BANK0 ] unsigned char 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		wreg, status,2, cstack
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11822 ;;      Params:         0       0       0       0       0       0       0       0       0
 11823 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11825 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11826 ;;Total ram usage:        1 bytes
 11827 ;; Hardware stack levels used:    1
 11828 ;; Hardware stack levels required when called:   12
 11829 ;; This function calls:
 11830 ;;		_SPI_Exchange8bit
 11831 ;; This function is called by:
 11832 ;;		_Set_Page_Address
 11833 ;;		_Set_Column_Address
 11834 ;;		_oled_devInit
 11835 ;;		_oled_setDisplay
 11836 ;;		_oled_displayOff
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text50
 11841  00444E                     __ptext50:
 11842                           	opt stack 0
 11843  00444E                     _oled_writeCommand:
 11844                           	opt stack 15
 11845                           
 11846                           ;incstack = 0
 11847                           ;oled_writeCommand@command stored from wreg
 11848  00444E  0100               	movlb	0	; () banked
 11849  004450  6FC1               	movwf	oled_writeCommand@command& (0+255),b
 11850                           
 11851                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 11852  004452  9A8A               	bcf	3978,5,c	;volatile
 11853                           
 11854                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 11855  004454  51C1               	movf	oled_writeCommand@command& (0+255),w,b
 11856  004456  EF4F  F022         	goto	_SPI_Exchange8bit
 11857  00445A                     __end_of_oled_writeCommand:
 11858                           	opt stack 0
 11859                           tblptru	equ	0xFF8
 11860                           tblptrh	equ	0xFF7
 11861                           tblptrl	equ	0xFF6
 11862                           tablat	equ	0xFF5
 11863                           prodh	equ	0xFF4
 11864                           prodl	equ	0xFF3
 11865                           intcon	equ	0xFF2
 11866                           postinc0	equ	0xFEE
 11867                           wreg	equ	0xFE8
 11868                           indf1	equ	0xFE7
 11869                           fsr1h	equ	0xFE2
 11870                           fsr1l	equ	0xFE1
 11871                           indf2	equ	0xFDF
 11872                           postinc2	equ	0xFDE
 11873                           postdec2	equ	0xFDD
 11874                           fsr2h	equ	0xFDA
 11875                           fsr2l	equ	0xFD9
 11876                           status	equ	0xFD8
 11877                           
 11878 ;; *************** function _SPI_Exchange8bit *****************
 11879 ;; Defined at:
 11880 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  data            1    wreg     unsigned char 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;  data            1    0[BANK0 ] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      unsigned char 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2
 11889 ;; Tracked objects:
 11890 ;;		On entry : F/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0
 11895 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11897 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11898 ;;Total ram usage:        1 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:   11
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		_oled_writeCommand
 11905 ;;		_oled_writeData
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text51
 11910  00449E                     __ptext51:
 11911                           	opt stack 0
 11912  00449E                     _SPI_Exchange8bit:
 11913                           	opt stack 16
 11914                           
 11915                           ;incstack = 0
 11916                           ;SPI_Exchange8bit@data stored from wreg
 11917  00449E  6FC0               	movwf	SPI_Exchange8bit@data& (0+255),b
 11918                           
 11919                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 11920  0044A0  9EC6               	bcf	4038,7,c	;volatile
 11921                           
 11922                           ;spi.c: 86: SSPBUF = data;
 11923  0044A2  C0C0  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 11924  0044A6                     l1072:
 11925  0044A6  A0C7               	btfss	4039,0,c	;volatile
 11926  0044A8  D7FE               	goto	l1072
 11927                           
 11928                           ;spi.c: 90: }
 11929                           ;spi.c: 92: return (SSPBUF);
 11930  0044AA  50C9               	movf	4041,w,c	;volatile
 11931  0044AC  0012               	return		;funcret
 11932  0044AE                     __end_of_SPI_Exchange8bit:
 11933                           	opt stack 0
 11934                           tblptru	equ	0xFF8
 11935                           tblptrh	equ	0xFF7
 11936                           tblptrl	equ	0xFF6
 11937                           tablat	equ	0xFF5
 11938                           prodh	equ	0xFF4
 11939                           prodl	equ	0xFF3
 11940                           intcon	equ	0xFF2
 11941                           postinc0	equ	0xFEE
 11942                           wreg	equ	0xFE8
 11943                           indf1	equ	0xFE7
 11944                           fsr1h	equ	0xFE2
 11945                           fsr1l	equ	0xFE1
 11946                           indf2	equ	0xFDF
 11947                           postinc2	equ	0xFDE
 11948                           postdec2	equ	0xFDD
 11949                           fsr2h	equ	0xFDA
 11950                           fsr2l	equ	0xFD9
 11951                           status	equ	0xFD8
 11952                           
 11953 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 11954 ;; Defined at:
 11955 ;;		line 125 in file "../Includes/Board/USBapp.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;		None
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : F/0
 11966 ;;		On exit  : F/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11969 ;;      Params:         0       0       0       0       0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11971 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11972 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11973 ;;Total ram usage:        1 bytes
 11974 ;; Hardware stack levels used:    1
 11975 ;; Hardware stack levels required when called:   13
 11976 ;; This function calls:
 11977 ;;		_CDCTxService
 11978 ;;		_EUSART_Read
 11979 ;;		_EUSART_Write
 11980 ;;		_MOTEapp_setResponseReady
 11981 ;;		_USBapp_getrxByteFlag
 11982 ;;		_getsUSBUSART
 11983 ;;		_putUSBUSART
 11984 ;; This function is called by:
 11985 ;;		_USBapp_Handler
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text52
 11990  005926                     __ptext52:
 11991                           	opt stack 0
 11992  005926                     _USBapp_DeviceCdcEmulatorHandler:
 11993                           	opt stack 16
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11997                           
 11998                           ;incstack = 0
 11999  005926  0E1F               	movlw	31
 12000  005928  6591               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 12001  00592A  0C1F               	retlw	31
 12002                           
 12003                           ; BSR set to: 0
 12004  00592C  B260               	btfsc	3936,1,c	;volatile
 12005  00592E  0C1F               	retlw	31
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 12009  005930  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12010  005932  E10E               	bnz	l699
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;USBapp.c: 132: {
 12014                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 12015  005934  0E18               	movlw	low _USB_Buffer
 12016  005936  6FC7               	movwf	getsUSBUSART@buffer& (0+255),b
 12017  005938  0E01               	movlw	high _USB_Buffer
 12018  00593A  6FC8               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 12019  00593C  0E40               	movlw	64
 12020  00593E  6FC9               	movwf	getsUSBUSART@len& (0+255),b
 12021  005940  EC66  F02A         	call	_getsUSBUSART	;wreg free
 12022  005944  6E19               	movwf	_LastRS232Out,c
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;USBapp.c: 134: if(LastRS232Out > 0)
 12026  005946  5019               	movf	_LastRS232Out,w,c
 12027  005948  E003               	bz	l699
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;USBapp.c: 135: {
 12031                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 12032  00594A  0E01               	movlw	1
 12033  00594C  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;USBapp.c: 137: RS232cp = 0;
 12037  00594E  6A1C               	clrf	_RS232cp,c
 12038  005950                     l699:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;USBapp.c: 138: }
 12042                           ;USBapp.c: 139: }
 12043                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 12044  005950  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12045  005952  E010               	bz	l10049
 12046                           
 12047                           ; BSR set to: 0
 12048  005954  A2AC               	btfss	4012,1,c	;volatile
 12049  005956  D00E               	goto	l10049
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;USBapp.c: 143: {
 12053                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 12054  005958  0E18               	movlw	low _USB_Buffer
 12055  00595A  241C               	addwf	_RS232cp,w,c
 12056  00595C  6ED9               	movwf	fsr2l,c
 12057  00595E  6ADA               	clrf	fsr2h,c
 12058  005960  0E01               	movlw	high _USB_Buffer
 12059  005962  22DA               	addwfc	fsr2h,f,c
 12060  005964  50DF               	movf	indf2,w,c
 12061  005966  EC72  F024         	call	_EUSART_Write
 12062                           
 12063                           ;USBapp.c: 146: ++RS232cp;
 12064  00596A  2A1C               	incf	_RS232cp,f,c
 12065                           
 12066                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 12067  00596C  5019               	movf	_LastRS232Out,w,c
 12068  00596E  181C               	xorwf	_RS232cp,w,c
 12069  005970  E101               	bnz	l10049
 12070                           
 12071                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 12072  005972  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 12073  005974                     l10049:
 12074                           
 12075                           ;USBapp.c: 149: }
 12076                           ;USBapp.c: 152: if ((eusartRxCount))
 12077  005974  5023               	movf	_eusartRxCount,w,c	;volatile
 12078  005976  E01C               	bz	l10065
 12079                           
 12080                           ;USBapp.c: 153: {
 12081                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 12082  005978  EC0B  F022         	call	_USBapp_getrxByteFlag	;wreg free
 12083  00597C  0900               	iorlw	0
 12084  00597E  E018               	bz	l10065
 12085  005980  0E3F               	movlw	63
 12086  005982  601A               	cpfslt	_NextUSBOut,c
 12087  005984  D015               	goto	l10065
 12088                           
 12089                           ;USBapp.c: 155: {
 12090                           ;USBapp.c: 156: __nop();
 12091  005986  F000               	nop	
 12092                           
 12093                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 12094  005988  EC5B  F024         	call	_EUSART_Read	;wreg free
 12095  00598C  6FCD               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 12096  00598E  0E18               	movlw	low _USB_Buffer
 12097  005990  241A               	addwf	_NextUSBOut,w,c
 12098  005992  6ED9               	movwf	fsr2l,c
 12099  005994  6ADA               	clrf	fsr2h,c
 12100  005996  0E01               	movlw	high _USB_Buffer
 12101  005998  22DA               	addwfc	fsr2h,f,c
 12102  00599A  C0CD  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;USBapp.c: 158: ++NextUSBOut;
 12106  00599E  2A1A               	incf	_NextUSBOut,f,c
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 12110  0059A0  0E18               	movlw	low _USB_Buffer
 12111  0059A2  241A               	addwf	_NextUSBOut,w,c
 12112  0059A4  6ED9               	movwf	fsr2l,c
 12113  0059A6  6ADA               	clrf	fsr2h,c
 12114  0059A8  0E01               	movlw	high _USB_Buffer
 12115  0059AA  22DA               	addwfc	fsr2h,f,c
 12116  0059AC  6ADF               	clrf	indf2,c
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;USBapp.c: 160: rxByteFlag = 0;
 12120  0059AE  6A2A               	clrf	_rxByteFlag,c	;volatile
 12121  0059B0                     l10065:
 12122                           
 12123                           ;USBapp.c: 161: }
 12124                           ;USBapp.c: 162: }
 12125                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 12126  0059B0  5020               	movf	_cdc_trf_state,w,c
 12127  0059B2  E002 EF8E  F031    	bnz	_CDCTxService
 12128  0059B8  501A               	movf	_NextUSBOut,w,c
 12129  0059BA  E102 EF8E  F031    	bz	_CDCTxService
 12130                           
 12131                           ;USBapp.c: 167: {
 12132                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 12133  0059C0  0E18               	movlw	low _USB_Buffer
 12134  0059C2  0100               	movlb	0	; () banked
 12135  0059C4  6FC0               	movwf	putUSBUSART@data& (0+255),b
 12136  0059C6  0E01               	movlw	high _USB_Buffer
 12137  0059C8  6FC1               	movwf	(putUSBUSART@data+1)& (0+255),b
 12138  0059CA  C01A  F0C2         	movff	_NextUSBOut,putUSBUSART@length
 12139  0059CE  ECB2  F022         	call	_putUSBUSART	;wreg free
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 12143  0059D2  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;USBapp.c: 170: NextUSBOut = 0;
 12147  0059D6  6A1A               	clrf	_NextUSBOut,c
 12148                           
 12149                           ;USBapp.c: 171: }
 12150                           ;USBapp.c: 173: CDCTxService();
 12151  0059D8  EF8E  F031         	goto	_CDCTxService	;wreg free
 12152  0059DC                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 12153                           	opt stack 0
 12154                           tblptru	equ	0xFF8
 12155                           tblptrh	equ	0xFF7
 12156                           tblptrl	equ	0xFF6
 12157                           tablat	equ	0xFF5
 12158                           prodh	equ	0xFF4
 12159                           prodl	equ	0xFF3
 12160                           intcon	equ	0xFF2
 12161                           postinc0	equ	0xFEE
 12162                           wreg	equ	0xFE8
 12163                           indf1	equ	0xFE7
 12164                           fsr1h	equ	0xFE2
 12165                           fsr1l	equ	0xFE1
 12166                           indf2	equ	0xFDF
 12167                           postinc2	equ	0xFDE
 12168                           postdec2	equ	0xFDD
 12169                           fsr2h	equ	0xFDA
 12170                           fsr2l	equ	0xFD9
 12171                           status	equ	0xFD8
 12172                           
 12173 ;; *************** function _putUSBUSART *****************
 12174 ;; Defined at:
 12175 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  data            2    0[BANK0 ] PTR unsigned char 
 12178 ;;		 -> USB_Buffer(64), 
 12179 ;;  length          1    2[BANK0 ] unsigned char 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2, status,0
 12186 ;; Tracked objects:
 12187 ;;		On entry : F/0
 12188 ;;		On exit  : F/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12191 ;;      Params:         0       3       0       0       0       0       0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12194 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12195 ;;Total ram usage:        3 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   11
 12198 ;; This function calls:
 12199 ;;		Nothing
 12200 ;; This function is called by:
 12201 ;;		_USBapp_DeviceCdcEmulatorHandler
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text53
 12206  004564                     __ptext53:
 12207                           	opt stack 0
 12208  004564                     _putUSBUSART:
 12209                           	opt stack 17
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;incstack = 0
 12216  004564  94A3               	bcf	4003,2,c	;volatile
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 12220  004566  5020               	movf	_cdc_trf_state,w,c
 12221  004568  E109               	bnz	l9449
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;usb_device_cdc.c: 530: {
 12225                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 12226  00456A  C0C0  F073         	movff	putUSBUSART@data,_pCDCSrc
 12227  00456E  C0C1  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 12228                           
 12229                           ; BSR set to: 0
 12230  004572  C0C2  F098         	movff	putUSBUSART@length,_cdc_tx_len
 12231                           
 12232                           ; BSR set to: 0
 12233  004576  0E01               	movlw	1
 12234  004578  6F96               	movwf	_cdc_mem_type& (0+255),b
 12235                           
 12236                           ; BSR set to: 0
 12237  00457A  6E20               	movwf	_cdc_trf_state,c
 12238  00457C                     l9449:
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;usb_device_cdc.c: 532: }
 12242                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 12243  00457C  84A3               	bsf	4003,2,c	;volatile
 12244                           
 12245                           ; BSR set to: 0
 12246  00457E  0012               	return		;funcret
 12247  004580                     __end_of_putUSBUSART:
 12248                           	opt stack 0
 12249                           tblptru	equ	0xFF8
 12250                           tblptrh	equ	0xFF7
 12251                           tblptrl	equ	0xFF6
 12252                           tablat	equ	0xFF5
 12253                           prodh	equ	0xFF4
 12254                           prodl	equ	0xFF3
 12255                           intcon	equ	0xFF2
 12256                           postinc0	equ	0xFEE
 12257                           wreg	equ	0xFE8
 12258                           indf1	equ	0xFE7
 12259                           fsr1h	equ	0xFE2
 12260                           fsr1l	equ	0xFE1
 12261                           indf2	equ	0xFDF
 12262                           postinc2	equ	0xFDE
 12263                           postdec2	equ	0xFDD
 12264                           fsr2h	equ	0xFDA
 12265                           fsr2l	equ	0xFD9
 12266                           status	equ	0xFD8
 12267                           
 12268 ;; *************** function _getsUSBUSART *****************
 12269 ;; Defined at:
 12270 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 12273 ;;		 -> USB_Buffer(64), 
 12274 ;;  len             1    9[BANK0 ] unsigned char 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      unsigned char 
 12279 ;; Registers used:
 12280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : F/0
 12283 ;;		On exit  : F/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12286 ;;      Params:         0       3       0       0       0       0       0       0       0
 12287 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12288 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12289 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12290 ;;Total ram usage:        6 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:   12
 12293 ;; This function calls:
 12294 ;;		_USBTransferOnePacket
 12295 ;; This function is called by:
 12296 ;;		_USBapp_DeviceCdcEmulatorHandler
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text54
 12301  0054CC                     __ptext54:
 12302                           	opt stack 0
 12303  0054CC                     _getsUSBUSART:
 12304                           	opt stack 16
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;incstack = 0
 12311  0054CC  6B97               	clrf	_cdc_rx_len& (0+255),b
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 12315  0054CE  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12316  0054D0  117C               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 12317  0054D2  E009               	bz	l1755
 12318                           
 12319                           ; BSR set to: 0
 12320  0054D4  C07B  FFD9         	movff	_CDCDataOutHandle,fsr2l
 12321  0054D8  C07C  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 12322  0054DC  0E01               	movlw	1
 12323  0054DE  AEDF               	btfss	indf2,7,c
 12324  0054E0  0E00               	movlw	0
 12325  0054E2  6FCB               	movwf	_getsUSBUSART$5507& (0+255),b
 12326  0054E4  D001               	goto	L16
 12327  0054E6                     l1755:
 12328                           
 12329                           ; BSR set to: 0
 12330  0054E6  6BCB               	clrf	_getsUSBUSART$5507& (0+255),b
 12331  0054E8                     L16:
 12332  0054E8  6BCC               	clrf	(_getsUSBUSART$5507+1)& (0+255),b
 12333                           
 12334                           ; BSR set to: 0
 12335  0054EA  51CB               	movf	_getsUSBUSART$5507& (0+255),w,b
 12336  0054EC  11CC               	iorwf	(_getsUSBUSART$5507+1)& (0+255),w,b
 12337  0054EE  E134               	bnz	l9429
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;usb_device_cdc.c: 437: {
 12341                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 12342  0054F0  EE20 F001          	lfsr	2,1
 12343  0054F4  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12344  0054F6  26D9               	addwf	fsr2l,f,c
 12345  0054F8  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12346  0054FA  22DA               	addwfc	fsr2h,f,c
 12347  0054FC  51C9               	movf	getsUSBUSART@len& (0+255),w,b
 12348  0054FE  5CDE               	subwf	postinc2,w,c
 12349  005500  E208               	bc	l9419
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 12353  005502  EE20 F001          	lfsr	2,1
 12354  005506  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12355  005508  26D9               	addwf	fsr2l,f,c
 12356  00550A  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12357  00550C  22DA               	addwfc	fsr2h,f,c
 12358  00550E  50DF               	movf	indf2,w,c
 12359  005510  6FC9               	movwf	getsUSBUSART@len& (0+255),b
 12360  005512                     l9419:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 12364  005512  6B97               	clrf	_cdc_rx_len& (0+255),b
 12365  005514  D00F               	goto	l9425
 12366  005516                     l9421:
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 12370  005516  0E40               	movlw	64
 12371  005518  2597               	addwf	_cdc_rx_len& (0+255),w,b
 12372  00551A  6ED9               	movwf	fsr2l,c
 12373  00551C  6ADA               	clrf	fsr2h,c
 12374  00551E  0E05               	movlw	5
 12375  005520  22DA               	addwfc	fsr2h,f,c
 12376  005522  5197               	movf	_cdc_rx_len& (0+255),w,b
 12377  005524  25C7               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12378  005526  6EE1               	movwf	fsr1l,c
 12379  005528  0E00               	movlw	0
 12380  00552A  21C8               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12381  00552C  6EE2               	movwf	fsr1h,c
 12382  00552E  CFDF FFE7          	movff	indf2,indf1
 12383                           
 12384                           ; BSR set to: 0
 12385  005532  2B97               	incf	_cdc_rx_len& (0+255),f,b
 12386  005534                     l9425:
 12387                           
 12388                           ; BSR set to: 0
 12389  005534  51C9               	movf	getsUSBUSART@len& (0+255),w,b
 12390  005536  5D97               	subwf	_cdc_rx_len& (0+255),w,b
 12391  005538  E3EE               	bnc	l9421
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12395  00553A  0E00               	movlw	0
 12396  00553C  6FC0               	movwf	USBTransferOnePacket@dir& (0+255),b
 12397  00553E  0E40               	movlw	64
 12398  005540  6FC1               	movwf	USBTransferOnePacket@data& (0+255),b
 12399  005542  0E05               	movlw	5
 12400  005544  6FC2               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12401  005546  0E40               	movlw	64
 12402  005548  6FC3               	movwf	USBTransferOnePacket@len& (0+255),b
 12403  00554A  0E02               	movlw	2
 12404  00554C  EC96  F02B         	call	_USBTransferOnePacket
 12405  005550  C0C0  F07B         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12406  005554  C0C1  F07C         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12407  005558                     l9429:
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;usb_device_cdc.c: 457: }
 12411                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 12412  005558  5197               	movf	_cdc_rx_len& (0+255),w,b
 12413                           
 12414                           ; BSR set to: 0
 12415  00555A  0012               	return		;funcret
 12416  00555C                     __end_of_getsUSBUSART:
 12417                           	opt stack 0
 12418                           tblptru	equ	0xFF8
 12419                           tblptrh	equ	0xFF7
 12420                           tblptrl	equ	0xFF6
 12421                           tablat	equ	0xFF5
 12422                           prodh	equ	0xFF4
 12423                           prodl	equ	0xFF3
 12424                           intcon	equ	0xFF2
 12425                           postinc0	equ	0xFEE
 12426                           wreg	equ	0xFE8
 12427                           indf1	equ	0xFE7
 12428                           fsr1h	equ	0xFE2
 12429                           fsr1l	equ	0xFE1
 12430                           indf2	equ	0xFDF
 12431                           postinc2	equ	0xFDE
 12432                           postdec2	equ	0xFDD
 12433                           fsr2h	equ	0xFDA
 12434                           fsr2l	equ	0xFD9
 12435                           status	equ	0xFD8
 12436                           
 12437 ;; *************** function _USBapp_getrxByteFlag *****************
 12438 ;; Defined at:
 12439 ;;		line 231 in file "../Includes/Board/USBapp.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;		None
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;		None
 12444 ;; Return value:  Size  Location     Type
 12445 ;;                  1    wreg      unsigned char 
 12446 ;; Registers used:
 12447 ;;		wreg, status,2
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12453 ;;      Params:         0       0       0       0       0       0       0       0       0
 12454 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12455 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12456 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12457 ;;Total ram usage:        0 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:   11
 12460 ;; This function calls:
 12461 ;;		Nothing
 12462 ;; This function is called by:
 12463 ;;		_USBapp_DeviceCdcEmulatorHandler
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text55
 12468  004416                     __ptext55:
 12469                           	opt stack 0
 12470  004416                     _USBapp_getrxByteFlag:
 12471                           	opt stack 17
 12472                           
 12473                           ;USBapp.c: 233: return rxByteFlag;
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;incstack = 0
 12477  004416  502A               	movf	_rxByteFlag,w,c	;volatile
 12478  004418  0012               	return		;funcret
 12479  00441A                     __end_of_USBapp_getrxByteFlag:
 12480                           	opt stack 0
 12481                           tblptru	equ	0xFF8
 12482                           tblptrh	equ	0xFF7
 12483                           tblptrl	equ	0xFF6
 12484                           tablat	equ	0xFF5
 12485                           prodh	equ	0xFF4
 12486                           prodl	equ	0xFF3
 12487                           intcon	equ	0xFF2
 12488                           postinc0	equ	0xFEE
 12489                           wreg	equ	0xFE8
 12490                           indf1	equ	0xFE7
 12491                           fsr1h	equ	0xFE2
 12492                           fsr1l	equ	0xFE1
 12493                           indf2	equ	0xFDF
 12494                           postinc2	equ	0xFDE
 12495                           postdec2	equ	0xFDD
 12496                           fsr2h	equ	0xFDA
 12497                           fsr2l	equ	0xFD9
 12498                           status	equ	0xFD8
 12499                           
 12500 ;; *************** function _MOTEapp_setResponseReady *****************
 12501 ;; Defined at:
 12502 ;;		line 898 in file "../Includes/Board/MOTEapp.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;		None
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;		None
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  1    wreg      void 
 12509 ;; Registers used:
 12510 ;;		None
 12511 ;; Tracked objects:
 12512 ;;		On entry : F/0
 12513 ;;		On exit  : F/0
 12514 ;;		Unchanged: F/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12516 ;;      Params:         0       0       0       0       0       0       0       0       0
 12517 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12519 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12520 ;;Total ram usage:        0 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:   11
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_USBapp_DeviceCdcEmulatorHandler
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text56
 12531  001004                     __ptext56:
 12532                           	opt stack 0
 12533  001004                     _MOTEapp_setResponseReady:
 12534                           	opt stack 17
 12535                           
 12536                           ; BSR set to: 0
 12537                           
 12538                           ;incstack = 0
 12539  001004  0012               	return		;funcret
 12540  001006                     __end_of_MOTEapp_setResponseReady:
 12541                           	opt stack 0
 12542                           tblptru	equ	0xFF8
 12543                           tblptrh	equ	0xFF7
 12544                           tblptrl	equ	0xFF6
 12545                           tablat	equ	0xFF5
 12546                           prodh	equ	0xFF4
 12547                           prodl	equ	0xFF3
 12548                           intcon	equ	0xFF2
 12549                           postinc0	equ	0xFEE
 12550                           wreg	equ	0xFE8
 12551                           indf1	equ	0xFE7
 12552                           fsr1h	equ	0xFE2
 12553                           fsr1l	equ	0xFE1
 12554                           indf2	equ	0xFDF
 12555                           postinc2	equ	0xFDE
 12556                           postdec2	equ	0xFDD
 12557                           fsr2h	equ	0xFDA
 12558                           fsr2l	equ	0xFD9
 12559                           status	equ	0xFD8
 12560                           
 12561 ;; *************** function _EUSART_Write *****************
 12562 ;; Defined at:
 12563 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  txData          1    wreg     unsigned char 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  txData          1    0[BANK0 ] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1    wreg      void 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0
 12578 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12580 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12581 ;;Total ram usage:        1 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:   11
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_EndLine
 12588 ;;		_sendCommand
 12589 ;;		_sendDataCommand
 12590 ;;		_USBapp_DeviceCdcEmulatorHandler
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text57
 12595  0048E4                     __ptext57:
 12596                           	opt stack 0
 12597  0048E4                     _EUSART_Write:
 12598                           	opt stack 15
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;incstack = 0
 12602                           ;EUSART_Write@txData stored from wreg
 12603  0048E4  0100               	movlb	0	; () banked
 12604  0048E6  6FC0               	movwf	EUSART_Write@txData& (0+255),b
 12605  0048E8                     l8561:
 12606  0048E8  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 12607  0048EA  E0FE               	bz	l8561
 12608                           
 12609                           ;eusart.c: 143: }
 12610                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 12611  0048EC  B89D               	btfsc	3997,4,c	;volatile
 12612  0048EE  D003               	goto	l923
 12613                           
 12614                           ;eusart.c: 146: {
 12615                           ;eusart.c: 147: TXREG = txData;
 12616  0048F0  C0C0  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 12617                           
 12618                           ;eusart.c: 148: }
 12619  0048F4  D00F               	goto	l8575
 12620  0048F6                     l923:
 12621                           
 12622                           ;eusart.c: 149: else
 12623                           ;eusart.c: 150: {
 12624                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 12625  0048F6  989D               	bcf	3997,4,c	;volatile
 12626                           
 12627                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 12628  0048F8  0E40               	movlw	low _eusartTxBuffer
 12629  0048FA  2427               	addwf	_eusartTxHead,w,c
 12630  0048FC  6ED9               	movwf	fsr2l,c
 12631  0048FE  6ADA               	clrf	fsr2h,c
 12632  004900  0E02               	movlw	high _eusartTxBuffer
 12633  004902  22DA               	addwfc	fsr2h,f,c
 12634  004904  C0C0  FFDF         	movff	EUSART_Write@txData,indf2
 12635  004908  2A27               	incf	_eusartTxHead,f,c
 12636                           
 12637                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12638  00490A  0E3F               	movlw	63
 12639  00490C  6427               	cpfsgt	_eusartTxHead,c
 12640  00490E  D001               	goto	l8573
 12641                           
 12642                           ;eusart.c: 154: {
 12643                           ;eusart.c: 155: eusartTxHead = 0;
 12644  004910  6A27               	clrf	_eusartTxHead,c
 12645  004912                     l8573:
 12646                           
 12647                           ;eusart.c: 156: }
 12648                           ;eusart.c: 157: eusartTxBufferRemaining--;
 12649  004912  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 12650  004914                     l8575:
 12651                           
 12652                           ;eusart.c: 158: }
 12653                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 12654  004914  889D               	bsf	3997,4,c	;volatile
 12655  004916  0012               	return		;funcret
 12656  004918                     __end_of_EUSART_Write:
 12657                           	opt stack 0
 12658                           tblptru	equ	0xFF8
 12659                           tblptrh	equ	0xFF7
 12660                           tblptrl	equ	0xFF6
 12661                           tablat	equ	0xFF5
 12662                           prodh	equ	0xFF4
 12663                           prodl	equ	0xFF3
 12664                           intcon	equ	0xFF2
 12665                           postinc0	equ	0xFEE
 12666                           wreg	equ	0xFE8
 12667                           indf1	equ	0xFE7
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           fsr2h	equ	0xFDA
 12674                           fsr2l	equ	0xFD9
 12675                           status	equ	0xFD8
 12676                           
 12677 ;; *************** function _EUSART_Read *****************
 12678 ;; Defined at:
 12679 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;		None
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  readValue       1    0[BANK0 ] unsigned char 
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  1    wreg      unsigned char 
 12686 ;; Registers used:
 12687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : F/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12693 ;;      Params:         0       0       0       0       0       0       0       0       0
 12694 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12696 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12697 ;;Total ram usage:        1 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:   11
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_MOTEapp_getModemResponse
 12704 ;;		_USBapp_DeviceCdcEmulatorHandler
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text58
 12709  0048B6                     __ptext58:
 12710                           	opt stack 0
 12711  0048B6                     _EUSART_Read:
 12712                           	opt stack 14
 12713                           
 12714                           ;eusart.c: 121: while(0 == eusartRxCount)
 12715                           
 12716                           ;incstack = 0
 12717  0048B6  D001               	goto	l8579
 12718  0048B8                     l914:
 12719                           
 12720                           ;eusart.c: 122: {
 12721                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 12722  0048B8  8E89               	bsf	3977,7,c	;volatile
 12723  0048BA                     l8579:
 12724  0048BA  5023               	movf	_eusartRxCount,w,c	;volatile
 12725  0048BC  E0FD               	bz	l914
 12726                           
 12727                           ;eusart.c: 124: }
 12728                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 12729  0048BE  9A9D               	bcf	3997,5,c	;volatile
 12730                           
 12731                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 12732  0048C0  0E00               	movlw	low _eusartRxBuffer
 12733  0048C2  2425               	addwf	_eusartRxTail,w,c
 12734  0048C4  6ED9               	movwf	fsr2l,c
 12735  0048C6  6ADA               	clrf	fsr2h,c
 12736  0048C8  0E02               	movlw	high _eusartRxBuffer
 12737  0048CA  22DA               	addwfc	fsr2h,f,c
 12738  0048CC  50DF               	movf	indf2,w,c
 12739  0048CE  0100               	movlb	0	; () banked
 12740  0048D0  6FC0               	movwf	EUSART_Read@readValue& (0+255),b
 12741                           
 12742                           ; BSR set to: 0
 12743  0048D2  2A25               	incf	_eusartRxTail,f,c
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 12747  0048D4  0E3F               	movlw	63
 12748  0048D6  6425               	cpfsgt	_eusartRxTail,c
 12749  0048D8  D001               	goto	l8589
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;eusart.c: 130: {
 12753                           ;eusart.c: 131: eusartRxTail = 0;
 12754  0048DA  6A25               	clrf	_eusartRxTail,c
 12755  0048DC                     l8589:
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;eusart.c: 132: }
 12759                           ;eusart.c: 133: eusartRxCount--;
 12760  0048DC  0623               	decf	_eusartRxCount,f,c	;volatile
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 12764  0048DE  8A9D               	bsf	3997,5,c	;volatile
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;eusart.c: 136: return readValue;
 12768  0048E0  51C0               	movf	EUSART_Read@readValue& (0+255),w,b
 12769                           
 12770                           ; BSR set to: 0
 12771  0048E2  0012               	return		;funcret
 12772  0048E4                     __end_of_EUSART_Read:
 12773                           	opt stack 0
 12774                           tblptru	equ	0xFF8
 12775                           tblptrh	equ	0xFF7
 12776                           tblptrl	equ	0xFF6
 12777                           tablat	equ	0xFF5
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           postinc0	equ	0xFEE
 12782                           wreg	equ	0xFE8
 12783                           indf1	equ	0xFE7
 12784                           fsr1h	equ	0xFE2
 12785                           fsr1l	equ	0xFE1
 12786                           indf2	equ	0xFDF
 12787                           postinc2	equ	0xFDE
 12788                           postdec2	equ	0xFDD
 12789                           fsr2h	equ	0xFDA
 12790                           fsr2l	equ	0xFD9
 12791                           status	equ	0xFD8
 12792                           
 12793 ;; *************** function _CDCTxService *****************
 12794 ;; Defined at:
 12795 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;		None
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 12800 ;;  i               1    9[BANK0 ] unsigned char 
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  1    wreg      void 
 12803 ;; Registers used:
 12804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : F/0
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12810 ;;      Params:         0       0       0       0       0       0       0       0       0
 12811 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12812 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12813 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12814 ;;Total ram usage:        4 bytes
 12815 ;; Hardware stack levels used:    1
 12816 ;; Hardware stack levels required when called:   12
 12817 ;; This function calls:
 12818 ;;		_USBTransferOnePacket
 12819 ;; This function is called by:
 12820 ;;		_USBapp_DeviceCdcEmulatorHandler
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           	psect	text59
 12825  00631C                     __ptext59:
 12826                           	opt stack 0
 12827  00631C                     _CDCTxService:
 12828                           	opt stack 16
 12829                           
 12830                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 12831                           ;usb_device_cdc.c: 786: uint8_t i;
 12832                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;incstack = 0
 12836  00631C  94A3               	bcf	4003,2,c	;volatile
 12837                           
 12838                           ;usb_device_cdc.c: 790: {};
 12839                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 12840  00631E  0100               	movlb	0	; () banked
 12841  006320  5179               	movf	_CDCDataInHandle& (0+255),w,b
 12842  006322  117A               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12843  006324  E009               	bz	l1785
 12844                           
 12845                           ; BSR set to: 0
 12846  006326  C079  FFD9         	movff	_CDCDataInHandle,fsr2l
 12847  00632A  C07A  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12848  00632E  0E01               	movlw	1
 12849  006330  AEDF               	btfss	indf2,7,c
 12850  006332  0E00               	movlw	0
 12851  006334  6FC7               	movwf	_CDCTxService$5555& (0+255),b
 12852  006336  D001               	goto	L17
 12853  006338                     l1785:
 12854                           
 12855                           ; BSR set to: 0
 12856  006338  6BC7               	clrf	_CDCTxService$5555& (0+255),b
 12857  00633A                     L17:
 12858  00633A  6BC8               	clrf	(_CDCTxService$5555+1)& (0+255),b
 12859                           
 12860                           ; BSR set to: 0
 12861  00633C  51C7               	movf	_CDCTxService$5555& (0+255),w,b
 12862  00633E  11C8               	iorwf	(_CDCTxService$5555+1)& (0+255),w,b
 12863  006340  E002               	bz	l9461
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;usb_device_cdc.c: 793: {
 12867                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 12868  006342  84A3               	bsf	4003,2,c	;volatile
 12869                           
 12870                           ;usb_device_cdc.c: 795: return;
 12871  006344  0012               	return	
 12872  006346                     l9461:
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;usb_device_cdc.c: 796: }
 12876                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 12877  006346  0E03               	movlw	3
 12878  006348  1820               	xorwf	_cdc_trf_state,w,c
 12879  00634A  E101               	bnz	l9465
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 12883  00634C  6A20               	clrf	_cdc_trf_state,c
 12884  00634E                     l9465:
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 12888  00634E  5020               	movf	_cdc_trf_state,w,c
 12889  006350  E102               	bnz	l9469
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;usb_device_cdc.c: 810: {
 12893                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 12894  006352  84A3               	bsf	4003,2,c	;volatile
 12895                           
 12896                           ;usb_device_cdc.c: 812: return;
 12897  006354  0012               	return	
 12898  006356                     l9469:
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;usb_device_cdc.c: 813: }
 12902                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 12903  006356  0E02               	movlw	2
 12904  006358  1820               	xorwf	_cdc_trf_state,w,c
 12905  00635A  E110               	bnz	l9475
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;usb_device_cdc.c: 819: {
 12909                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12910  00635C  0E01               	movlw	1
 12911  00635E  6FC0               	movwf	USBTransferOnePacket@dir& (0+255),b
 12912  006360  0E00               	movlw	0
 12913  006362  6FC1               	movwf	USBTransferOnePacket@data& (0+255),b
 12914  006364  6FC2               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12915  006366  6FC3               	movwf	USBTransferOnePacket@len& (0+255),b
 12916  006368  0E02               	movlw	2
 12917  00636A  EC96  F02B         	call	_USBTransferOnePacket
 12918  00636E  C0C0  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12919  006372  C0C1  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 12923  006376  0E03               	movlw	3
 12924  006378  6E20               	movwf	_cdc_trf_state,c
 12925                           
 12926                           ;usb_device_cdc.c: 823: }
 12927  00637A  D04E               	goto	l9519
 12928  00637C                     l9475:
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 12932  00637C  0420               	decf	_cdc_trf_state,w,c
 12933  00637E  E14C               	bnz	l9519
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;usb_device_cdc.c: 825: {
 12937                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 12938  006380  0E40               	movlw	64
 12939  006382  6598               	cpfsgt	_cdc_tx_len& (0+255),b
 12940  006384  D002               	goto	l1794
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 12944  006386  6FCA               	movwf	CDCTxService@byte_to_send& (0+255),b
 12945  006388  D002               	goto	l9481
 12946  00638A                     l1794:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device_cdc.c: 831: else
 12950                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 12951  00638A  C098  F0CA         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12952  00638E                     l9481:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 12956  00638E  51CA               	movf	CDCTxService@byte_to_send& (0+255),w,b
 12957  006390  5F98               	subwf	_cdc_tx_len& (0+255),f,b
 12958                           
 12959                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12960  006392  0E00               	movlw	0
 12961  006394  6F70               	movwf	_pCDCDst& (0+255),b
 12962  006396  0E05               	movlw	5
 12963  006398  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;usb_device_cdc.c: 841: i = byte_to_send;
 12967  00639A  C0CA  F0C9         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12968                           
 12969                           ; BSR set to: 0
 12970                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 12971  00639E  5196               	movf	_cdc_mem_type& (0+255),w,b
 12972  0063A0  E010               	bz	l9497
 12973  0063A2  D021               	goto	l9507
 12974  0063A4                     l9489:
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device_cdc.c: 845: {
 12978                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 12979  0063A4  C073  FFD9         	movff	_pCDCSrc,fsr2l
 12980  0063A8  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 12981  0063AC  C070  FFE1         	movff	_pCDCDst,fsr1l
 12982  0063B0  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 12983  0063B4  CFDF FFE7          	movff	indf2,indf1
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 12987  0063B8  4B70               	infsnz	_pCDCDst& (0+255),f,b
 12988  0063BA  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 12992  0063BC  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 12993  0063BE  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;usb_device_cdc.c: 849: i--;
 12997  0063C0  07C9               	decf	CDCTxService@i& (0+255),f,b
 12998  0063C2                     l9497:
 12999                           
 13000                           ; BSR set to: 0
 13001  0063C2  51C9               	movf	CDCTxService@i& (0+255),w,b
 13002  0063C4  E012               	bz	l9509
 13003  0063C6  D7EE               	goto	l9489
 13004  0063C8                     l9499:
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;usb_device_cdc.c: 855: {
 13008                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 13009  0063C8  C073  FFD9         	movff	_pCDCSrc,fsr2l
 13010  0063CC  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 13011  0063D0  C070  FFE1         	movff	_pCDCDst,fsr1l
 13012  0063D4  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 13013  0063D8  CFDF FFE7          	movff	indf2,indf1
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 13017  0063DC  4B70               	infsnz	_pCDCDst& (0+255),f,b
 13018  0063DE  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 13022  0063E0  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 13023  0063E2  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device_cdc.c: 859: i--;
 13027  0063E4  07C9               	decf	CDCTxService@i& (0+255),f,b
 13028  0063E6                     l9507:
 13029                           
 13030                           ; BSR set to: 0
 13031  0063E6  51C9               	movf	CDCTxService@i& (0+255),w,b
 13032  0063E8  E1EF               	bnz	l9499
 13033  0063EA                     l9509:
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;usb_device_cdc.c: 860: }
 13037                           ;usb_device_cdc.c: 861: }
 13038                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 13039  0063EA  5198               	movf	_cdc_tx_len& (0+255),w,b
 13040  0063EC  E106               	bnz	l9517
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;usb_device_cdc.c: 868: {
 13044                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 13045  0063EE  0E40               	movlw	64
 13046  0063F0  19CA               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 13050  0063F2  0E02               	movlw	2
 13051  0063F4  A4D8               	btfss	status,2,c
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;usb_device_cdc.c: 871: else
 13055                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 13056  0063F6  0E03               	movlw	3
 13057  0063F8  6E20               	movwf	_cdc_trf_state,c
 13058  0063FA                     l9517:
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;usb_device_cdc.c: 873: }
 13062                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13063  0063FA  0E01               	movlw	1
 13064  0063FC  6FC0               	movwf	USBTransferOnePacket@dir& (0+255),b
 13065  0063FE  0E00               	movlw	0
 13066  006400  6FC1               	movwf	USBTransferOnePacket@data& (0+255),b
 13067  006402  0E05               	movlw	5
 13068  006404  6FC2               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13069  006406  C0CA  F0C3         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13070  00640A  0E02               	movlw	2
 13071  00640C  EC96  F02B         	call	_USBTransferOnePacket
 13072  006410  C0C0  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13073  006414  C0C1  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13074  006418                     l9519:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;usb_device_cdc.c: 876: }
 13078                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 13079  006418  84A3               	bsf	4003,2,c	;volatile
 13080                           
 13081                           ; BSR set to: 0
 13082  00641A  0012               	return		;funcret
 13083  00641C                     __end_of_CDCTxService:
 13084                           	opt stack 0
 13085                           tblptru	equ	0xFF8
 13086                           tblptrh	equ	0xFF7
 13087                           tblptrl	equ	0xFF6
 13088                           tablat	equ	0xFF5
 13089                           prodh	equ	0xFF4
 13090                           prodl	equ	0xFF3
 13091                           intcon	equ	0xFF2
 13092                           postinc0	equ	0xFEE
 13093                           wreg	equ	0xFE8
 13094                           indf1	equ	0xFE7
 13095                           fsr1h	equ	0xFE2
 13096                           fsr1l	equ	0xFE1
 13097                           indf2	equ	0xFDF
 13098                           postinc2	equ	0xFDE
 13099                           postdec2	equ	0xFDD
 13100                           fsr2h	equ	0xFDA
 13101                           fsr2l	equ	0xFD9
 13102                           status	equ	0xFD8
 13103                           
 13104 ;; *************** function _USBTransferOnePacket *****************
 13105 ;; Defined at:
 13106 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  ep              1    wreg     unsigned char 
 13109 ;;  dir             1    0[BANK0 ] unsigned char 
 13110 ;;  data            2    1[BANK0 ] PTR unsigned char 
 13111 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 13112 ;;  len             1    3[BANK0 ] unsigned char 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  ep              1    4[BANK0 ] unsigned char 
 13115 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 13116 ;;		 -> BDT(48), NULL(0), 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  2    0[BANK0 ] PTR void 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13121 ;; Tracked objects:
 13122 ;;		On entry : F/0
 13123 ;;		On exit  : F/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13126 ;;      Params:         0       4       0       0       0       0       0       0       0
 13127 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13129 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13130 ;;Total ram usage:        7 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:   11
 13133 ;; This function calls:
 13134 ;;		Nothing
 13135 ;; This function is called by:
 13136 ;;		_getsUSBUSART
 13137 ;;		_CDCTxService
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text60
 13142  00572C                     __ptext60:
 13143                           	opt stack 0
 13144  00572C                     _USBTransferOnePacket:
 13145                           	opt stack 16
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;incstack = 0
 13149                           ;USBTransferOnePacket@ep stored from wreg
 13150  00572C  6FC4               	movwf	USBTransferOnePacket@ep& (0+255),b
 13151                           
 13152                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 13153                           ;usb_device.c: 762: if(dir != 0)
 13154  00572E  0100               	movlb	0	; () banked
 13155  005730  51C0               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13156  005732  E005               	bz	l8845
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;usb_device.c: 763: {
 13160                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 13161  005734  51C4               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13162  005736  0D02               	mullw	2
 13163  005738  50F3               	movf	prodl,w,c
 13164  00573A  0F0F               	addlw	low _pBDTEntryIn
 13165  00573C  D004               	goto	L19
 13166  00573E                     l8845:
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;usb_device.c: 767: else
 13170                           ;usb_device.c: 768: {
 13171                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 13172  00573E  51C4               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13173  005740  0D02               	mullw	2
 13174  005742  50F3               	movf	prodl,w,c
 13175  005744  0F60               	addlw	low _pBDTEntryOut
 13176  005746                     L19:
 13177  005746  6ED9               	movwf	fsr2l,c
 13178  005748  6ADA               	clrf	fsr2h,c
 13179  00574A  CFDE F0C5          	movff	postinc2,USBTransferOnePacket@handle
 13180  00574E  CFDD F0C6          	movff	postdec2,USBTransferOnePacket@handle+1
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;usb_device.c: 771: }
 13184                           ;usb_device.c: 775: if(handle == 0)
 13185  005752  51C5               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13186  005754  11C6               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13187  005756  E103               	bnz	l8851
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;usb_device.c: 776: {
 13191                           ;usb_device.c: 777: return 0;
 13192  005758  6BC0               	clrf	?_USBTransferOnePacket& (0+255),b
 13193  00575A  6BC1               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 13194  00575C  0012               	return	
 13195  00575E                     l8851:
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;usb_device.c: 778: }
 13199                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 13200  00575E  EE20 F002          	lfsr	2,2
 13201  005762  51C5               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13202  005764  26D9               	addwf	fsr2l,f,c
 13203  005766  51C6               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13204  005768  22DA               	addwfc	fsr2h,f,c
 13205  00576A  C0C1  FFDE         	movff	USBTransferOnePacket@data,postinc2
 13206  00576E  C0C2  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 13207                           
 13208                           ;usb_device.c: 781: handle->CNT = len;
 13209  005772  EE20 F001          	lfsr	2,1
 13210  005776  51C5               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13211  005778  26D9               	addwf	fsr2l,f,c
 13212  00577A  51C6               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13213  00577C  22DA               	addwfc	fsr2h,f,c
 13214  00577E  C0C3  FFDF         	movff	USBTransferOnePacket@len,indf2
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 13218  005782  C0C5  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13219  005786  C0C6  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13220  00578A  0E40               	movlw	64
 13221  00578C  16DF               	andwf	indf2,f,c
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 13225  00578E  C0C5  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13226  005792  C0C6  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13227  005796  0E00               	movlw	0
 13228  005798  86DB               	bsf	plusw2,3,c
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 13232  00579A  C0C5  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13233  00579E  C0C6  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13234  0057A2  8EDB               	bsf	plusw2,7,c
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;usb_device.c: 787: if(dir != 0)
 13238  0057A4  51C0               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13239  0057A6  E005               	bz	l8863
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;usb_device.c: 788: {
 13243                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 13244  0057A8  51C4               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13245  0057AA  0D02               	mullw	2
 13246  0057AC  50F3               	movf	prodl,w,c
 13247  0057AE  0F0F               	addlw	low _pBDTEntryIn
 13248  0057B0  D004               	goto	L20
 13249  0057B2                     l8863:
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;usb_device.c: 792: else
 13253                           ;usb_device.c: 793: {
 13254                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 13255  0057B2  51C4               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13256  0057B4  0D02               	mullw	2
 13257  0057B6  50F3               	movf	prodl,w,c
 13258  0057B8  0F60               	addlw	low _pBDTEntryOut
 13259  0057BA                     L20:
 13260  0057BA  6ED9               	movwf	fsr2l,c
 13261  0057BC  6ADA               	clrf	fsr2h,c
 13262  0057BE  0E04               	movlw	4
 13263  0057C0  1ADF               	xorwf	indf2,f,c
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;usb_device.c: 796: }
 13267                           ;usb_device.c: 797: return (void*)handle;
 13268  0057C2  C0C5  F0C0         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 13269  0057C6  C0C6  F0C1         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 13270                           
 13271                           ; BSR set to: 0
 13272  0057CA  0C04               	retlw	4	;funcret
 13273  0057CC                     __end_of_USBTransferOnePacket:
 13274                           	opt stack 0
 13275                           tblptru	equ	0xFF8
 13276                           tblptrh	equ	0xFF7
 13277                           tblptrl	equ	0xFF6
 13278                           tablat	equ	0xFF5
 13279                           prodh	equ	0xFF4
 13280                           prodl	equ	0xFF3
 13281                           intcon	equ	0xFF2
 13282                           postinc0	equ	0xFEE
 13283                           wreg	equ	0xFE8
 13284                           indf1	equ	0xFE7
 13285                           fsr1h	equ	0xFE2
 13286                           fsr1l	equ	0xFE1
 13287                           indf2	equ	0xFDF
 13288                           postinc2	equ	0xFDE
 13289                           postdec2	equ	0xFDD
 13290                           plusw2	equ	0xFDB
 13291                           fsr2h	equ	0xFDA
 13292                           fsr2l	equ	0xFD9
 13293                           status	equ	0xFD8
 13294                           
 13295 ;; *************** function _USBDeviceInit *****************
 13296 ;; Defined at:
 13297 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;		None
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;  i               1    8[BANK0 ] unsigned char 
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : F/0
 13308 ;;		On exit  : F/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13311 ;;      Params:         0       0       0       0       0       0       0       0       0
 13312 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13314 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13315 ;;Total ram usage:        1 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:   12
 13318 ;; This function calls:
 13319 ;;		_memset
 13320 ;; This function is called by:
 13321 ;;		_main
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text61
 13326  005CE2                     __ptext61:
 13327                           	opt stack 0
 13328  005CE2                     _USBDeviceInit:
 13329                           	opt stack 18
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;usb_device.c: 239: uint8_t i;
 13333                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;incstack = 0
 13337  005CE2  94A3               	bcf	4003,2,c	;volatile
 13338                           
 13339                           ;usb_device.c: 244: {UEIR = 0;};
 13340  005CE4  6A67               	clrf	3943,c	;volatile
 13341                           
 13342                           ;usb_device.c: 247: {UIR = 0;};
 13343  005CE6  6A65               	clrf	3941,c	;volatile
 13344                           
 13345                           ;usb_device.c: 250: UEP0 = 0;
 13346  005CE8  6A6A               	clrf	3946,c	;volatile
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 13350  005CEA  0E6B               	movlw	107
 13351  005CEC  6FC0               	movwf	memset@p1& (0+255),b
 13352  005CEE  0E0F               	movlw	15
 13353  005CF0  6FC1               	movwf	(memset@p1+1)& (0+255),b
 13354  005CF2  6BC3               	clrf	(memset@c+1)& (0+255),b
 13355  005CF4  6BC2               	clrf	memset@c& (0+255),b
 13356  005CF6  6BC5               	clrf	(memset@n+1)& (0+255),b
 13357  005CF8  0E02               	movlw	2
 13358  005CFA  6FC4               	movwf	memset@n& (0+255),b
 13359  005CFC  ECD8  F023         	call	_memset	;wreg free
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13363  005D00  0E16               	movlw	22
 13364  005D02  6E62               	movwf	3938,c	;volatile
 13365                           
 13366                           ; BSR set to: 0
 13367  005D04  0E9F               	movlw	159
 13368  005D06  6E66               	movwf	3942,c	;volatile
 13369                           
 13370                           ; BSR set to: 0
 13371  005D08  0E7B               	movlw	123
 13372  005D0A  6E64               	movwf	3940,c	;volatile
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;usb_device.c: 257: ;
 13376                           ;usb_device.c: 260: ;
 13377                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13378  005D0C  6BC8               	clrf	USBDeviceInit@i& (0+255),b
 13379  005D0E                     l10171:
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;usb_device.c: 264: {
 13383                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 13384  005D0E  51C8               	movf	USBDeviceInit@i& (0+255),w,b
 13385  005D10  0D04               	mullw	4
 13386  005D12  0E00               	movlw	0
 13387  005D14  24F3               	addwf	prodl,w,c
 13388  005D16  6ED9               	movwf	fsr2l,c
 13389  005D18  0E04               	movlw	4
 13390  005D1A  20F4               	addwfc	prodh,w,c
 13391  005D1C  6EDA               	movwf	fsr2h,c
 13392  005D1E  6ADE               	clrf	postinc2,c
 13393  005D20  6ADE               	clrf	postinc2,c
 13394  005D22  6ADE               	clrf	postinc2,c
 13395  005D24  6ADD               	clrf	postdec2,c
 13396                           
 13397                           ; BSR set to: 0
 13398  005D26  2BC8               	incf	USBDeviceInit@i& (0+255),f,b
 13399                           
 13400                           ; BSR set to: 0
 13401  005D28  0E0B               	movlw	11
 13402  005D2A  65C8               	cpfsgt	USBDeviceInit@i& (0+255),b
 13403  005D2C  D7F0               	goto	l10171
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;usb_device.c: 266: }
 13407                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 13408  005D2E  8C60               	bsf	3936,6,c	;volatile
 13409                           
 13410                           ;usb_device.c: 272: UADDR = 0x00;
 13411  005D30  6A63               	clrf	3939,c	;volatile
 13412                           
 13413                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 13414  005D32  9860               	bcf	3936,4,c	;volatile
 13415                           
 13416                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 13417  005D34  9C60               	bcf	3936,6,c	;volatile
 13418                           
 13419                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 13420  005D36  D005               	goto	l10185
 13421  005D38                     l10177:
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;usb_device.c: 282: {
 13425                           ;usb_device.c: 283: (UIR &= 0xF7);
 13426  005D38  9665               	bcf	3941,3,c	;volatile
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 13430  005D3A  6A0C               	clrf	_inPipes+3,c	;volatile
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 13434  005D3C  6A04               	clrf	_outPipes+3,c	;volatile
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 13438  005D3E  6A05               	clrf	_outPipes+4,c	;volatile
 13439  005D40  6A06               	clrf	_outPipes+5,c	;volatile
 13440  005D42                     l10185:
 13441                           
 13442                           ; BSR set to: 0
 13443  005D42  B665               	btfsc	3941,3,c	;volatile
 13444  005D44  D7F9               	goto	l10177
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;usb_device.c: 288: }
 13448                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 13449  005D46  0E01               	movlw	1
 13450  005D48  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13451                           
 13452                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 13453  005D4A  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 13457  005D4C  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 13461  005D4E  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 13465  005D50  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 13469  005D52  6BC8               	clrf	USBDeviceInit@i& (0+255),b
 13470  005D54                     l10201:
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;usb_device.c: 302: {
 13474                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 13475  005D54  51C8               	movf	USBDeviceInit@i& (0+255),w,b
 13476  005D56  0D02               	mullw	2
 13477  005D58  50F3               	movf	prodl,w,c
 13478  005D5A  0F0F               	addlw	low _pBDTEntryIn
 13479  005D5C  6ED9               	movwf	fsr2l,c
 13480  005D5E  6ADA               	clrf	fsr2h,c
 13481  005D60  6ADE               	clrf	postinc2,c
 13482  005D62  6ADD               	clrf	postdec2,c
 13483                           
 13484                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 13485  005D64  51C8               	movf	USBDeviceInit@i& (0+255),w,b
 13486  005D66  0D02               	mullw	2
 13487  005D68  50F3               	movf	prodl,w,c
 13488  005D6A  0F60               	addlw	low _pBDTEntryOut
 13489  005D6C  6ED9               	movwf	fsr2l,c
 13490  005D6E  6ADA               	clrf	fsr2h,c
 13491  005D70  6ADE               	clrf	postinc2,c
 13492  005D72  6ADD               	clrf	postdec2,c
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 13496  005D74  51C8               	movf	USBDeviceInit@i& (0+255),w,b
 13497  005D76  0F6A               	addlw	low _ep_data_in
 13498  005D78  6ED9               	movwf	fsr2l,c
 13499  005D7A  6ADA               	clrf	fsr2h,c
 13500  005D7C  6ADF               	clrf	indf2,c
 13501                           
 13502                           ; BSR set to: 0
 13503                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 13504  005D7E  51C8               	movf	USBDeviceInit@i& (0+255),w,b
 13505  005D80  0F6D               	addlw	low _ep_data_out
 13506  005D82  6ED9               	movwf	fsr2l,c
 13507  005D84  6ADA               	clrf	fsr2h,c
 13508  005D86  6ADF               	clrf	indf2,c
 13509                           
 13510                           ; BSR set to: 0
 13511  005D88  2BC8               	incf	USBDeviceInit@i& (0+255),f,b
 13512                           
 13513                           ; BSR set to: 0
 13514  005D8A  0E02               	movlw	2
 13515  005D8C  65C8               	cpfsgt	USBDeviceInit@i& (0+255),b
 13516  005D8E  D7E2               	goto	l10201
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;usb_device.c: 307: }
 13520                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13521  005D90  0E08               	movlw	8
 13522  005D92  6E0F               	movwf	_pBDTEntryIn,c
 13523  005D94  0E04               	movlw	4
 13524  005D96  6E10               	movwf	_pBDTEntryIn+1,c
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 13528  005D98  0E16               	movlw	22
 13529  005D9A  6E6A               	movwf	3946,c	;volatile
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13533  005D9C  0E04               	movlw	4
 13534  005D9E  0104               	movlb	4	; () banked
 13535  005DA0  6F03               	movwf	3,b	;volatile
 13536  005DA2  0E30               	movlw	48
 13537  005DA4  6F02               	movwf	2,b	;volatile
 13538                           
 13539                           ; BSR set to: 4
 13540                           ;usb_device.c: 315: BDT[0].CNT = 8;
 13541  005DA6  0E08               	movlw	8
 13542  005DA8  6F01               	movwf	1,b	;volatile
 13543                           
 13544                           ; BSR set to: 4
 13545                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 13546  005DAA  0E04               	movlw	4
 13547  005DAC  6F00               	movwf	0,b	;volatile
 13548                           
 13549                           ; BSR set to: 4
 13550                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 13551  005DAE  8F00               	bsf	0,7,b	;volatile
 13552                           
 13553                           ; BSR set to: 4
 13554                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 13555  005DB0  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 13556                           
 13557                           ; BSR set to: 4
 13558                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 13559  005DB2  0100               	movlb	0	; () banked
 13560  005DB4  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 13561                           
 13562                           ; BSR set to: 0
 13563  005DB6  0012               	return		;funcret
 13564  005DB8                     __end_of_USBDeviceInit:
 13565                           	opt stack 0
 13566                           tblptru	equ	0xFF8
 13567                           tblptrh	equ	0xFF7
 13568                           tblptrl	equ	0xFF6
 13569                           tablat	equ	0xFF5
 13570                           prodh	equ	0xFF4
 13571                           prodl	equ	0xFF3
 13572                           intcon	equ	0xFF2
 13573                           postinc0	equ	0xFEE
 13574                           wreg	equ	0xFE8
 13575                           indf1	equ	0xFE7
 13576                           fsr1h	equ	0xFE2
 13577                           fsr1l	equ	0xFE1
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           plusw2	equ	0xFDB
 13582                           fsr2h	equ	0xFDA
 13583                           fsr2l	equ	0xFD9
 13584                           status	equ	0xFD8
 13585                           
 13586 ;; *************** function _memset *****************
 13587 ;; Defined at:
 13588 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;  p1              2    0[BANK0 ] PTR void 
 13591 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13592 ;;  c               2    2[BANK0 ] int 
 13593 ;;  n               2    4[BANK0 ] unsigned int 
 13594 ;; Auto vars:     Size  Location     Type
 13595 ;;  p               2    6[BANK0 ] PTR unsigned char 
 13596 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  2    0[BANK0 ] PTR void 
 13599 ;; Registers used:
 13600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13601 ;; Tracked objects:
 13602 ;;		On entry : F/0
 13603 ;;		On exit  : F/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13606 ;;      Params:         0       6       0       0       0       0       0       0       0
 13607 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13609 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13610 ;;Total ram usage:        8 bytes
 13611 ;; Hardware stack levels used:    1
 13612 ;; Hardware stack levels required when called:   11
 13613 ;; This function calls:
 13614 ;;		Nothing
 13615 ;; This function is called by:
 13616 ;;		_USBDeviceInit
 13617 ;; This function uses a non-reentrant model
 13618 ;;
 13619                           
 13620                           	psect	text62
 13621  0047B0                     __ptext62:
 13622                           	opt stack 0
 13623  0047B0                     _memset:
 13624                           	opt stack 18
 13625                           
 13626                           ; BSR set to: 0
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;incstack = 0
 13630  0047B0  C0C0  F0C6         	movff	memset@p1,memset@p
 13631  0047B4  C0C1  F0C7         	movff	memset@p1+1,memset@p+1
 13632  0047B8  D008               	goto	l10137
 13633  0047BA                     l10133:
 13634                           
 13635                           ; BSR set to: 0
 13636  0047BA  C0C6  FFD9         	movff	memset@p,fsr2l
 13637  0047BE  C0C7  FFDA         	movff	memset@p+1,fsr2h
 13638  0047C2  C0C2  FFDF         	movff	memset@c,indf2
 13639                           
 13640                           ; BSR set to: 0
 13641  0047C6  4BC6               	infsnz	memset@p& (0+255),f,b
 13642  0047C8  2BC7               	incf	(memset@p+1)& (0+255),f,b
 13643  0047CA                     l10137:
 13644                           
 13645                           ; BSR set to: 0
 13646  0047CA  07C4               	decf	memset@n& (0+255),f,b
 13647  0047CC  A0D8               	btfss	status,0,c
 13648  0047CE  07C5               	decf	(memset@n+1)& (0+255),f,b
 13649  0047D0  29C4               	incf	memset@n& (0+255),w,b
 13650  0047D2  E1F3               	bnz	l10133
 13651  0047D4  29C5               	incf	(memset@n+1)& (0+255),w,b
 13652  0047D6  E1F1               	bnz	l10133
 13653                           
 13654                           ; BSR set to: 0
 13655  0047D8  0012               	return		;funcret
 13656  0047DA                     __end_of_memset:
 13657                           	opt stack 0
 13658                           tblptru	equ	0xFF8
 13659                           tblptrh	equ	0xFF7
 13660                           tblptrl	equ	0xFF6
 13661                           tablat	equ	0xFF5
 13662                           prodh	equ	0xFF4
 13663                           prodl	equ	0xFF3
 13664                           intcon	equ	0xFF2
 13665                           postinc0	equ	0xFEE
 13666                           wreg	equ	0xFE8
 13667                           indf1	equ	0xFE7
 13668                           fsr1h	equ	0xFE2
 13669                           fsr1l	equ	0xFE1
 13670                           indf2	equ	0xFDF
 13671                           postinc2	equ	0xFDE
 13672                           postdec2	equ	0xFDD
 13673                           plusw2	equ	0xFDB
 13674                           fsr2h	equ	0xFDA
 13675                           fsr2l	equ	0xFD9
 13676                           status	equ	0xFD8
 13677                           
 13678 ;; *************** function _USBDeviceAttach *****************
 13679 ;; Defined at:
 13680 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;		None
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;		None
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		wreg, status,2
 13689 ;; Tracked objects:
 13690 ;;		On entry : F/0
 13691 ;;		On exit  : F/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0
 13695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13698 ;;Total ram usage:        0 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:   11
 13701 ;; This function calls:
 13702 ;;		Nothing
 13703 ;; This function is called by:
 13704 ;;		_main
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708                           	psect	text63
 13709  00485E                     __ptext63:
 13710                           	opt stack 0
 13711  00485E                     _USBDeviceAttach:
 13712                           	opt stack 19
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;usb_device.c: 1050: {
 13716                           ;usb_device.c: 1051: if(1 == 1)
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;incstack = 0
 13720  00485E  5191               	movf	_USBDeviceState& (0+255),w,b	;volatile
 13721  004860  A4D8               	btfss	status,2,c
 13722  004862  0012               	return	
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;usb_device.c: 1052: {
 13726                           ;usb_device.c: 1054: UCON = 0;
 13727  004864  6A60               	clrf	3936,c	;volatile
 13728                           
 13729                           ;usb_device.c: 1057: UIE = 0;
 13730  004866  6A64               	clrf	3940,c	;volatile
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 13734  004868  0E16               	movlw	22
 13735  00486A  6E62               	movwf	3938,c	;volatile
 13736  00486C  0E9F               	movlw	159
 13737  00486E  6E66               	movwf	3942,c	;volatile
 13738  004870  0E7B               	movlw	123
 13739  004872  6E64               	movwf	3940,c	;volatile
 13740                           
 13741                           ; BSR set to: 0
 13742                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 13743  004874  8ED0               	bsf	4048,7,c	;volatile
 13744                           
 13745                           ; BSR set to: 0
 13746  004876  84A5               	bsf	4005,2,c	;volatile
 13747                           
 13748                           ; BSR set to: 0
 13749  004878  84A3               	bsf	4003,2,c	;volatile
 13750                           
 13751                           ; BSR set to: 0
 13752  00487A  8EF2               	bsf	intcon,7,c	;volatile
 13753                           
 13754                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 13755  00487C  D001               	goto	l1490
 13756  00487E                     l1491:
 13757                           
 13758                           ; BSR set to: 0
 13759  00487E  8660               	bsf	3936,3,c	;volatile
 13760  004880                     l1490:
 13761                           
 13762                           ; BSR set to: 0
 13763  004880  A660               	btfss	3936,3,c	;volatile
 13764  004882  D7FD               	goto	l1491
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 13768  004884  0E01               	movlw	1
 13769  004886  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 13770                           
 13771                           ; BSR set to: 0
 13772  004888  0C01               	retlw	1	;funcret
 13773  00488A                     __end_of_USBDeviceAttach:
 13774                           	opt stack 0
 13775                           tblptru	equ	0xFF8
 13776                           tblptrh	equ	0xFF7
 13777                           tblptrl	equ	0xFF6
 13778                           tablat	equ	0xFF5
 13779                           prodh	equ	0xFF4
 13780                           prodl	equ	0xFF3
 13781                           intcon	equ	0xFF2
 13782                           postinc0	equ	0xFEE
 13783                           wreg	equ	0xFE8
 13784                           indf1	equ	0xFE7
 13785                           fsr1h	equ	0xFE2
 13786                           fsr1l	equ	0xFE1
 13787                           indf2	equ	0xFDF
 13788                           postinc2	equ	0xFDE
 13789                           postdec2	equ	0xFDD
 13790                           plusw2	equ	0xFDB
 13791                           fsr2h	equ	0xFDA
 13792                           fsr2l	equ	0xFD9
 13793                           status	equ	0xFD8
 13794                           
 13795 ;; *************** function _SYSTEM_Initialize *****************
 13796 ;; Defined at:
 13797 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1    wreg      void 
 13804 ;; Registers used:
 13805 ;;		wreg, status,2, status,0, cstack
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13814 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13815 ;;Total ram usage:        0 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; Hardware stack levels required when called:   13
 13818 ;; This function calls:
 13819 ;;		_ADC_Initialize
 13820 ;;		_CMP1_Initialize
 13821 ;;		_EUSART_Initialize
 13822 ;;		_OSCILLATOR_Initialize
 13823 ;;		_PIN_MANAGER_Initialize
 13824 ;;		_SPI_Initialize
 13825 ;;		_TMR1_Initialize
 13826 ;;		_TMR2_Initialize
 13827 ;; This function is called by:
 13828 ;;		_main
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           	psect	text64
 13833  004614                     __ptext64:
 13834                           	opt stack 0
 13835  004614                     _SYSTEM_Initialize:
 13836                           	opt stack 17
 13837                           
 13838                           ;mcc.c: 95: OSCILLATOR_Initialize();
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;incstack = 0
 13842  004614  EC9B  F022         	call	_OSCILLATOR_Initialize	;wreg free
 13843                           
 13844                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 13845  004618  EC0F  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 13846                           
 13847                           ; BSR set to: 15
 13848                           ;mcc.c: 97: SPI_Initialize();
 13849  00461C  EC39  F022         	call	_SPI_Initialize	;wreg free
 13850                           
 13851                           ; BSR set to: 15
 13852                           ;mcc.c: 98: TMR1_Initialize();
 13853  004620  EC19  F024         	call	_TMR1_Initialize	;wreg free
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;mcc.c: 99: TMR2_Initialize();
 13857  004624  EC47  F022         	call	_TMR2_Initialize	;wreg free
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;mcc.c: 100: EUSART_Initialize();
 13861  004628  EC03  F024         	call	_EUSART_Initialize	;wreg free
 13862                           
 13863                           ;mcc.c: 101: ADC_Initialize();
 13864  00462C  EC90  F022         	call	_ADC_Initialize	;wreg free
 13865                           
 13866                           ;mcc.c: 102: CMP1_Initialize();
 13867  004630  EF57  F022         	goto	_CMP1_Initialize	;wreg free
 13868  004634                     __end_of_SYSTEM_Initialize:
 13869                           	opt stack 0
 13870                           tblptru	equ	0xFF8
 13871                           tblptrh	equ	0xFF7
 13872                           tblptrl	equ	0xFF6
 13873                           tablat	equ	0xFF5
 13874                           prodh	equ	0xFF4
 13875                           prodl	equ	0xFF3
 13876                           intcon	equ	0xFF2
 13877                           postinc0	equ	0xFEE
 13878                           wreg	equ	0xFE8
 13879                           indf1	equ	0xFE7
 13880                           fsr1h	equ	0xFE2
 13881                           fsr1l	equ	0xFE1
 13882                           indf2	equ	0xFDF
 13883                           postinc2	equ	0xFDE
 13884                           postdec2	equ	0xFDD
 13885                           plusw2	equ	0xFDB
 13886                           fsr2h	equ	0xFDA
 13887                           fsr2l	equ	0xFD9
 13888                           status	equ	0xFD8
 13889                           
 13890 ;; *************** function _TMR2_Initialize *****************
 13891 ;; Defined at:
 13892 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 13893 ;; Parameters:    Size  Location     Type
 13894 ;;		None
 13895 ;; Auto vars:     Size  Location     Type
 13896 ;;		None
 13897 ;; Return value:  Size  Location     Type
 13898 ;;                  1    wreg      void 
 13899 ;; Registers used:
 13900 ;;		wreg, status,2, cstack
 13901 ;; Tracked objects:
 13902 ;;		On entry : F/0
 13903 ;;		On exit  : F/0
 13904 ;;		Unchanged: F/0
 13905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13906 ;;      Params:         0       0       0       0       0       0       0       0       0
 13907 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13908 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13909 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13910 ;;Total ram usage:        0 bytes
 13911 ;; Hardware stack levels used:    1
 13912 ;; Hardware stack levels required when called:   12
 13913 ;; This function calls:
 13914 ;;		_TMR2_StartTimer
 13915 ;; This function is called by:
 13916 ;;		_SYSTEM_Initialize
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           	psect	text65
 13921  00448E                     __ptext65:
 13922                           	opt stack 0
 13923  00448E                     _TMR2_Initialize:
 13924                           	opt stack 17
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;tmr2.c: 62: T2CON = 0x7A;
 13928                           
 13929                           ;incstack = 0
 13930  00448E  0E7A               	movlw	122
 13931  004490  6EBA               	movwf	4026,c	;volatile
 13932                           
 13933                           ;tmr2.c: 65: PR2 = 0x9B;
 13934  004492  0E9B               	movlw	155
 13935  004494  6EBB               	movwf	4027,c	;volatile
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;tmr2.c: 68: TMR2 = 0x00;
 13939  004496  6ABC               	clrf	4028,c	;volatile
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 13943  004498  929E               	bcf	3998,1,c	;volatile
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;tmr2.c: 74: TMR2_StartTimer();
 13947  00449A  EF09  F022         	goto	_TMR2_StartTimer	;wreg free
 13948  00449E                     __end_of_TMR2_Initialize:
 13949                           	opt stack 0
 13950                           tblptru	equ	0xFF8
 13951                           tblptrh	equ	0xFF7
 13952                           tblptrl	equ	0xFF6
 13953                           tablat	equ	0xFF5
 13954                           prodh	equ	0xFF4
 13955                           prodl	equ	0xFF3
 13956                           intcon	equ	0xFF2
 13957                           postinc0	equ	0xFEE
 13958                           wreg	equ	0xFE8
 13959                           indf1	equ	0xFE7
 13960                           fsr1h	equ	0xFE2
 13961                           fsr1l	equ	0xFE1
 13962                           indf2	equ	0xFDF
 13963                           postinc2	equ	0xFDE
 13964                           postdec2	equ	0xFDD
 13965                           plusw2	equ	0xFDB
 13966                           fsr2h	equ	0xFDA
 13967                           fsr2l	equ	0xFD9
 13968                           status	equ	0xFD8
 13969                           
 13970 ;; *************** function _TMR2_StartTimer *****************
 13971 ;; Defined at:
 13972 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;		None
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;		None
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  1    wreg      void 
 13979 ;; Registers used:
 13980 ;;		None
 13981 ;; Tracked objects:
 13982 ;;		On entry : F/0
 13983 ;;		On exit  : F/0
 13984 ;;		Unchanged: F/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13986 ;;      Params:         0       0       0       0       0       0       0       0       0
 13987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13989 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13990 ;;Total ram usage:        0 bytes
 13991 ;; Hardware stack levels used:    1
 13992 ;; Hardware stack levels required when called:   11
 13993 ;; This function calls:
 13994 ;;		Nothing
 13995 ;; This function is called by:
 13996 ;;		_TMR2_Initialize
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           	psect	text66
 14001  004412                     __ptext66:
 14002                           	opt stack 0
 14003  004412                     _TMR2_StartTimer:
 14004                           	opt stack 17
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;incstack = 0
 14011  004412  84BA               	bsf	4026,2,c	;volatile
 14012                           
 14013                           ; BSR set to: 0
 14014  004414  0012               	return		;funcret
 14015  004416                     __end_of_TMR2_StartTimer:
 14016                           	opt stack 0
 14017                           tblptru	equ	0xFF8
 14018                           tblptrh	equ	0xFF7
 14019                           tblptrl	equ	0xFF6
 14020                           tablat	equ	0xFF5
 14021                           prodh	equ	0xFF4
 14022                           prodl	equ	0xFF3
 14023                           intcon	equ	0xFF2
 14024                           postinc0	equ	0xFEE
 14025                           wreg	equ	0xFE8
 14026                           indf1	equ	0xFE7
 14027                           fsr1h	equ	0xFE2
 14028                           fsr1l	equ	0xFE1
 14029                           indf2	equ	0xFDF
 14030                           postinc2	equ	0xFDE
 14031                           postdec2	equ	0xFDD
 14032                           plusw2	equ	0xFDB
 14033                           fsr2h	equ	0xFDA
 14034                           fsr2l	equ	0xFD9
 14035                           status	equ	0xFD8
 14036                           
 14037 ;; *************** function _TMR1_Initialize *****************
 14038 ;; Defined at:
 14039 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;		None
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;		None
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  1    wreg      void 
 14046 ;; Registers used:
 14047 ;;		wreg, status,2, status,0, cstack
 14048 ;; Tracked objects:
 14049 ;;		On entry : F/F
 14050 ;;		On exit  : F/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0
 14054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14055 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14056 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14057 ;;Total ram usage:        2 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:   12
 14060 ;; This function calls:
 14061 ;;		_TMR1_StartTimer
 14062 ;; This function is called by:
 14063 ;;		_SYSTEM_Initialize
 14064 ;; This function uses a non-reentrant model
 14065 ;;
 14066                           
 14067                           	psect	text67
 14068  004832                     __ptext67:
 14069                           	opt stack 0
 14070  004832                     _TMR1_Initialize:
 14071                           	opt stack 17
 14072                           
 14073                           ; BSR set to: 15
 14074                           ;tmr1.c: 68: T1CON = 0x00;
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;incstack = 0
 14078  004832  6ACD               	clrf	4045,c	;volatile
 14079                           
 14080                           ;tmr1.c: 71: T1GCON = 0x00;
 14081  004834  6ACC               	clrf	4044,c	;volatile
 14082                           
 14083                           ; BSR set to: 15
 14084                           ;tmr1.c: 74: TMR1H = 0xD0;
 14085  004836  0ED0               	movlw	208
 14086  004838  6ECF               	movwf	4047,c	;volatile
 14087                           
 14088                           ;tmr1.c: 77: TMR1L = 0x20;
 14089  00483A  0E20               	movlw	32
 14090  00483C  6ECE               	movwf	4046,c	;volatile
 14091                           
 14092                           ; BSR set to: 15
 14093                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 14094  00483E  50CE               	movf	4046,w,c	;volatile
 14095  004840  CFCF F0C0          	movff	4047,??_TMR1_Initialize	;volatile
 14096  004844  0100               	movlb	0	; () banked
 14097  004846  6BC1               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 14098  004848  C0C0  F0C1         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 14099  00484C  6BC0               	clrf	??_TMR1_Initialize& (0+255),b
 14100  00484E  11C0               	iorwf	??_TMR1_Initialize& (0+255),w,b
 14101  004850  6F85               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 14102  004852  51C1               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 14103  004854  6F86               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 14107  004856  909E               	bcf	3998,0,c	;volatile
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 14111  004858  809D               	bsf	3997,0,c	;volatile
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;tmr1.c: 89: TMR1_StartTimer();
 14115  00485A  EF07  F022         	goto	_TMR1_StartTimer	;wreg free
 14116  00485E                     __end_of_TMR1_Initialize:
 14117                           	opt stack 0
 14118                           tblptru	equ	0xFF8
 14119                           tblptrh	equ	0xFF7
 14120                           tblptrl	equ	0xFF6
 14121                           tablat	equ	0xFF5
 14122                           prodh	equ	0xFF4
 14123                           prodl	equ	0xFF3
 14124                           intcon	equ	0xFF2
 14125                           postinc0	equ	0xFEE
 14126                           wreg	equ	0xFE8
 14127                           indf1	equ	0xFE7
 14128                           fsr1h	equ	0xFE2
 14129                           fsr1l	equ	0xFE1
 14130                           indf2	equ	0xFDF
 14131                           postinc2	equ	0xFDE
 14132                           postdec2	equ	0xFDD
 14133                           plusw2	equ	0xFDB
 14134                           fsr2h	equ	0xFDA
 14135                           fsr2l	equ	0xFD9
 14136                           status	equ	0xFD8
 14137                           
 14138 ;; *************** function _TMR1_StartTimer *****************
 14139 ;; Defined at:
 14140 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;		None
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;		None
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  1    wreg      void 
 14147 ;; Registers used:
 14148 ;;		None
 14149 ;; Tracked objects:
 14150 ;;		On entry : F/0
 14151 ;;		On exit  : F/0
 14152 ;;		Unchanged: F/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14154 ;;      Params:         0       0       0       0       0       0       0       0       0
 14155 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14156 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14157 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14158 ;;Total ram usage:        0 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; Hardware stack levels required when called:   11
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_TMR1_Initialize
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text68
 14169  00440E                     __ptext68:
 14170                           	opt stack 0
 14171  00440E                     _TMR1_StartTimer:
 14172                           	opt stack 17
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;incstack = 0
 14179  00440E  80CD               	bsf	4045,0,c	;volatile
 14180                           
 14181                           ; BSR set to: 0
 14182  004410  0012               	return		;funcret
 14183  004412                     __end_of_TMR1_StartTimer:
 14184                           	opt stack 0
 14185                           tblptru	equ	0xFF8
 14186                           tblptrh	equ	0xFF7
 14187                           tblptrl	equ	0xFF6
 14188                           tablat	equ	0xFF5
 14189                           prodh	equ	0xFF4
 14190                           prodl	equ	0xFF3
 14191                           intcon	equ	0xFF2
 14192                           postinc0	equ	0xFEE
 14193                           wreg	equ	0xFE8
 14194                           indf1	equ	0xFE7
 14195                           fsr1h	equ	0xFE2
 14196                           fsr1l	equ	0xFE1
 14197                           indf2	equ	0xFDF
 14198                           postinc2	equ	0xFDE
 14199                           postdec2	equ	0xFDD
 14200                           plusw2	equ	0xFDB
 14201                           fsr2h	equ	0xFDA
 14202                           fsr2l	equ	0xFD9
 14203                           status	equ	0xFD8
 14204                           
 14205 ;; *************** function _SPI_Initialize *****************
 14206 ;; Defined at:
 14207 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;		None
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;		None
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      void 
 14214 ;; Registers used:
 14215 ;;		wreg, status,2
 14216 ;; Tracked objects:
 14217 ;;		On entry : F/F
 14218 ;;		On exit  : F/F
 14219 ;;		Unchanged: E/0
 14220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0
 14222 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14224 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14225 ;;Total ram usage:        0 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:   11
 14228 ;; This function calls:
 14229 ;;		Nothing
 14230 ;; This function is called by:
 14231 ;;		_SYSTEM_Initialize
 14232 ;; This function uses a non-reentrant model
 14233 ;;
 14234                           
 14235                           	psect	text69
 14236  004472                     __ptext69:
 14237                           	opt stack 0
 14238  004472                     _SPI_Initialize:
 14239                           	opt stack 18
 14240                           
 14241                           ; BSR set to: 15
 14242                           ;spi.c: 69: SSP1STAT = 0x00;
 14243                           
 14244                           ; BSR set to: 0
 14245                           ;incstack = 0
 14246  004472  6AC7               	clrf	4039,c	;volatile
 14247                           
 14248                           ; BSR set to: 15
 14249                           ;spi.c: 72: SSP1CON1 = 0x21;
 14250  004474  0E21               	movlw	33
 14251  004476  6EC6               	movwf	4038,c	;volatile
 14252                           
 14253                           ; BSR set to: 15
 14254                           ;spi.c: 75: SSP1ADD = 0x00;
 14255  004478  6AC8               	clrf	4040,c	;volatile
 14256                           
 14257                           ; BSR set to: 15
 14258                           ;spi.c: 77: CKP = 1;
 14259  00447A  88C6               	bsf	4038,4,c	;volatile
 14260                           
 14261                           ; BSR set to: 15
 14262                           ;spi.c: 78: CKE = 0;
 14263  00447C  9CC7               	bcf	4039,6,c	;volatile
 14264                           
 14265                           ; BSR set to: 15
 14266  00447E  0012               	return		;funcret
 14267  004480                     __end_of_SPI_Initialize:
 14268                           	opt stack 0
 14269                           tblptru	equ	0xFF8
 14270                           tblptrh	equ	0xFF7
 14271                           tblptrl	equ	0xFF6
 14272                           tablat	equ	0xFF5
 14273                           prodh	equ	0xFF4
 14274                           prodl	equ	0xFF3
 14275                           intcon	equ	0xFF2
 14276                           postinc0	equ	0xFEE
 14277                           wreg	equ	0xFE8
 14278                           indf1	equ	0xFE7
 14279                           fsr1h	equ	0xFE2
 14280                           fsr1l	equ	0xFE1
 14281                           indf2	equ	0xFDF
 14282                           postinc2	equ	0xFDE
 14283                           postdec2	equ	0xFDD
 14284                           plusw2	equ	0xFDB
 14285                           fsr2h	equ	0xFDA
 14286                           fsr2l	equ	0xFD9
 14287                           status	equ	0xFD8
 14288                           
 14289 ;; *************** function _PIN_MANAGER_Initialize *****************
 14290 ;; Defined at:
 14291 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;		None
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;		None
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1    wreg      void 
 14298 ;; Registers used:
 14299 ;;		None
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/0
 14302 ;;		On exit  : F/F
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:   11
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_moteApp_GoToSleep
 14316 ;;		_SYSTEM_Initialize
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text70
 14321  004C1E                     __ptext70:
 14322                           	opt stack 0
 14323  004C1E                     _PIN_MANAGER_Initialize:
 14324                           	opt stack 16
 14325                           
 14326                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 14327                           
 14328                           ; BSR set to: 15
 14329                           ;incstack = 0
 14330  004C1E  8092               	bsf	3986,0,c	;volatile
 14331                           
 14332                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 14333  004C20  8292               	bsf	3986,1,c	;volatile
 14334                           
 14335                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 14336  004C22  8492               	bsf	3986,2,c	;volatile
 14337                           
 14338                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 14339  004C24  8692               	bsf	3986,3,c	;volatile
 14340                           
 14341                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 14342  004C26  9892               	bcf	3986,4,c	;volatile
 14343                           
 14344                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 14345  004C28  9A92               	bcf	3986,5,c	;volatile
 14346                           
 14347                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 14348  004C2A  9C92               	bcf	3986,6,c	;volatile
 14349                           
 14350                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 14351  004C2C  9E92               	bcf	3986,7,c	;volatile
 14352                           
 14353                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 14354  004C2E  9093               	bcf	3987,0,c	;volatile
 14355                           
 14356                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 14357  004C30  9293               	bcf	3987,1,c	;volatile
 14358                           
 14359                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 14360  004C32  9493               	bcf	3987,2,c	;volatile
 14361                           
 14362                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 14363  004C34  9693               	bcf	3987,3,c	;volatile
 14364                           
 14365                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 14366  004C36  9A93               	bcf	3987,5,c	;volatile
 14367                           
 14368                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 14369  004C38  8094               	bsf	3988,0,c	;volatile
 14370                           
 14371                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 14372  004C3A  8294               	bsf	3988,1,c	;volatile
 14373                           
 14374                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 14375  004C3C  8494               	bsf	3988,2,c	;volatile
 14376                           
 14377                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 14378  004C3E  9C94               	bcf	3988,6,c	;volatile
 14379                           
 14380                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 14381  004C40  8E94               	bsf	3988,7,c	;volatile
 14382                           
 14383                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 14384  004C42  9C93               	bcf	3987,6,c	;volatile
 14385                           
 14386                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 14387  004C44  8E93               	bsf	3987,7,c	;volatile
 14388                           
 14389                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 14390  004C46  8889               	bsf	3977,4,c	;volatile
 14391                           
 14392                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 14393  004C48  9A89               	bcf	3977,5,c	;volatile
 14394                           
 14395                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 14396  004C4A  9C89               	bcf	3977,6,c	;volatile
 14397                           
 14398                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 14399  004C4C  9E89               	bcf	3977,7,c	;volatile
 14400                           
 14401                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 14402  004C4E  948A               	bcf	3978,2,c	;volatile
 14403                           
 14404                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 14405  004C50  908A               	bcf	3978,0,c	;volatile
 14406                           
 14407                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 14408  004C52  9A8A               	bcf	3978,5,c	;volatile
 14409                           
 14410                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 14411  004C54  9C8A               	bcf	3978,6,c	;volatile
 14412                           
 14413                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 14414  004C56  9E8A               	bcf	3978,7,c	;volatile
 14415                           
 14416                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 14417  004C58  948B               	bcf	3979,2,c	;volatile
 14418                           
 14419                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 14420  004C5A  9C8B               	bcf	3979,6,c	;volatile
 14421                           
 14422                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 14423  004C5C  010F               	movlb	15	; () banked
 14424  004C5E  915B               	bcf	91,0,b	;volatile
 14425                           
 14426                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 14427  004C60  835B               	bsf	91,1,b	;volatile
 14428                           
 14429                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 14430  004C62  855B               	bsf	91,2,b	;volatile
 14431                           
 14432                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 14433  004C64  875B               	bsf	91,3,b	;volatile
 14434                           
 14435                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 14436  004C66  9F5D               	bcf	93,7,b	;volatile
 14437                           
 14438                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 14439  004C68  9D5D               	bcf	93,6,b	;volatile
 14440                           
 14441                           ; BSR set to: 15
 14442  004C6A  0012               	return		;funcret
 14443  004C6C                     __end_of_PIN_MANAGER_Initialize:
 14444                           	opt stack 0
 14445                           tblptru	equ	0xFF8
 14446                           tblptrh	equ	0xFF7
 14447                           tblptrl	equ	0xFF6
 14448                           tablat	equ	0xFF5
 14449                           prodh	equ	0xFF4
 14450                           prodl	equ	0xFF3
 14451                           intcon	equ	0xFF2
 14452                           postinc0	equ	0xFEE
 14453                           wreg	equ	0xFE8
 14454                           indf1	equ	0xFE7
 14455                           fsr1h	equ	0xFE2
 14456                           fsr1l	equ	0xFE1
 14457                           indf2	equ	0xFDF
 14458                           postinc2	equ	0xFDE
 14459                           postdec2	equ	0xFDD
 14460                           plusw2	equ	0xFDB
 14461                           fsr2h	equ	0xFDA
 14462                           fsr2l	equ	0xFD9
 14463                           status	equ	0xFD8
 14464                           
 14465 ;; *************** function _OSCILLATOR_Initialize *****************
 14466 ;; Defined at:
 14467 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;		None
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;		None
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  1    wreg      void 
 14474 ;; Registers used:
 14475 ;;		wreg, status,2
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14481 ;;      Params:         0       0       0       0       0       0       0       0       0
 14482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14485 ;;Total ram usage:        0 bytes
 14486 ;; Hardware stack levels used:    1
 14487 ;; Hardware stack levels required when called:   11
 14488 ;; This function calls:
 14489 ;;		Nothing
 14490 ;; This function is called by:
 14491 ;;		_SYSTEM_Initialize
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495                           	psect	text71
 14496  004536                     __ptext71:
 14497                           	opt stack 0
 14498  004536                     _OSCILLATOR_Initialize:
 14499                           	opt stack 18
 14500                           
 14501                           ;mcc.c: 107: OSCTUNE = 0x80;
 14502                           
 14503                           ; BSR set to: 15
 14504                           ;incstack = 0
 14505  004536  0E80               	movlw	128
 14506  004538  6E9B               	movwf	3995,c	;volatile
 14507                           
 14508                           ;mcc.c: 108: OSCCON = 0x70;
 14509  00453A  0E70               	movlw	112
 14510  00453C  6ED3               	movwf	4051,c	;volatile
 14511                           
 14512                           ;mcc.c: 109: OSCCON2 = 0x10;
 14513  00453E  0E10               	movlw	16
 14514  004540  6ED2               	movwf	4050,c	;volatile
 14515  004542                     l1010:
 14516  004542  AED2               	btfss	4050,7,c	;volatile
 14517  004544  D7FE               	goto	l1010
 14518                           
 14519                           ;mcc.c: 111: ACTCON = 0x90;
 14520  004546  0E90               	movlw	144
 14521  004548  6EB5               	movwf	4021,c	;volatile
 14522  00454A  0C90               	retlw	144	;funcret
 14523  00454C                     __end_of_OSCILLATOR_Initialize:
 14524                           	opt stack 0
 14525                           tblptru	equ	0xFF8
 14526                           tblptrh	equ	0xFF7
 14527                           tblptrl	equ	0xFF6
 14528                           tablat	equ	0xFF5
 14529                           prodh	equ	0xFF4
 14530                           prodl	equ	0xFF3
 14531                           intcon	equ	0xFF2
 14532                           postinc0	equ	0xFEE
 14533                           wreg	equ	0xFE8
 14534                           indf1	equ	0xFE7
 14535                           fsr1h	equ	0xFE2
 14536                           fsr1l	equ	0xFE1
 14537                           indf2	equ	0xFDF
 14538                           postinc2	equ	0xFDE
 14539                           postdec2	equ	0xFDD
 14540                           plusw2	equ	0xFDB
 14541                           fsr2h	equ	0xFDA
 14542                           fsr2l	equ	0xFD9
 14543                           status	equ	0xFD8
 14544                           
 14545 ;; *************** function _EUSART_Initialize *****************
 14546 ;; Defined at:
 14547 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;		None
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  1    wreg      void 
 14554 ;; Registers used:
 14555 ;;		wreg, status,2
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/F
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14561 ;;      Params:         0       0       0       0       0       0       0       0       0
 14562 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14563 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14564 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14565 ;;Total ram usage:        0 bytes
 14566 ;; Hardware stack levels used:    1
 14567 ;; Hardware stack levels required when called:   11
 14568 ;; This function calls:
 14569 ;;		Nothing
 14570 ;; This function is called by:
 14571 ;;		_moteApp_GoToSleep
 14572 ;;		_SYSTEM_Initialize
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           	psect	text72
 14577  004806                     __ptext72:
 14578                           	opt stack 0
 14579  004806                     _EUSART_Initialize:
 14580                           	opt stack 16
 14581                           
 14582                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 14583                           
 14584                           ;incstack = 0
 14585  004806  9A9D               	bcf	3997,5,c	;volatile
 14586                           
 14587                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 14588  004808  989D               	bcf	3997,4,c	;volatile
 14589                           
 14590                           ;eusart.c: 85: BAUDCON = 0x48;
 14591  00480A  0E48               	movlw	72
 14592  00480C  6EB8               	movwf	4024,c	;volatile
 14593                           
 14594                           ;eusart.c: 88: RCSTA = 0x90;
 14595  00480E  0E90               	movlw	144
 14596  004810  6EAB               	movwf	4011,c	;volatile
 14597                           
 14598                           ;eusart.c: 91: TXSTA = 0x26;
 14599  004812  0E26               	movlw	38
 14600  004814  6EAC               	movwf	4012,c	;volatile
 14601                           
 14602                           ;eusart.c: 95: SPBRG = 0x71;
 14603  004816  0E71               	movlw	113
 14604  004818  6EAF               	movwf	4015,c	;volatile
 14605                           
 14606                           ;eusart.c: 100: SPBRGH = 0x02;
 14607  00481A  0E02               	movlw	2
 14608  00481C  6EB0               	movwf	4016,c	;volatile
 14609                           
 14610                           ;eusart.c: 103: eusartTxHead = 0;
 14611  00481E  6A27               	clrf	_eusartTxHead,c
 14612                           
 14613                           ;eusart.c: 104: eusartTxTail = 0;
 14614  004820  6A28               	clrf	_eusartTxTail,c
 14615                           
 14616                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14617  004822  0E40               	movlw	64
 14618  004824  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 14619                           
 14620                           ;eusart.c: 107: eusartRxHead = 0;
 14621  004826  6A24               	clrf	_eusartRxHead,c
 14622                           
 14623                           ;eusart.c: 108: eusartRxTail = 0;
 14624  004828  6A25               	clrf	_eusartRxTail,c
 14625                           
 14626                           ;eusart.c: 109: eusartRxCount = 0;
 14627  00482A  6A23               	clrf	_eusartRxCount,c	;volatile
 14628                           
 14629                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 14630  00482C  8A9D               	bsf	3997,5,c	;volatile
 14631                           
 14632                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 14633  00482E  88AB               	bsf	4011,4,c	;volatile
 14634  004830  0012               	return		;funcret
 14635  004832                     __end_of_EUSART_Initialize:
 14636                           	opt stack 0
 14637                           tblptru	equ	0xFF8
 14638                           tblptrh	equ	0xFF7
 14639                           tblptrl	equ	0xFF6
 14640                           tablat	equ	0xFF5
 14641                           prodh	equ	0xFF4
 14642                           prodl	equ	0xFF3
 14643                           intcon	equ	0xFF2
 14644                           postinc0	equ	0xFEE
 14645                           wreg	equ	0xFE8
 14646                           indf1	equ	0xFE7
 14647                           fsr1h	equ	0xFE2
 14648                           fsr1l	equ	0xFE1
 14649                           indf2	equ	0xFDF
 14650                           postinc2	equ	0xFDE
 14651                           postdec2	equ	0xFDD
 14652                           plusw2	equ	0xFDB
 14653                           fsr2h	equ	0xFDA
 14654                           fsr2l	equ	0xFD9
 14655                           status	equ	0xFD8
 14656                           
 14657 ;; *************** function _CMP1_Initialize *****************
 14658 ;; Defined at:
 14659 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;		None
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;		None
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14673 ;;      Params:         0       0       0       0       0       0       0       0       0
 14674 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14676 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14677 ;;Total ram usage:        0 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:   11
 14680 ;; This function calls:
 14681 ;;		Nothing
 14682 ;; This function is called by:
 14683 ;;		_SYSTEM_Initialize
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text73
 14688  0044AE                     __ptext73:
 14689                           	opt stack 0
 14690  0044AE                     _CMP1_Initialize:
 14691                           	opt stack 18
 14692                           
 14693                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 14694                           
 14695                           ;incstack = 0
 14696  0044AE  9CA0               	bcf	4000,6,c	;volatile
 14697                           
 14698                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 14699  0044B0  0E9C               	movlw	156
 14700  0044B2  6E98               	movwf	3992,c	;volatile
 14701                           
 14702                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 14703  0044B4  8A9A               	bsf	3994,5,c	;volatile
 14704                           
 14705                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 14706  0044B6  929A               	bcf	3994,1,c	;volatile
 14707                           
 14708                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 14709  0044B8  969A               	bcf	3994,3,c	;volatile
 14710                           
 14711                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 14712  0044BA  9CA1               	bcf	4001,6,c	;volatile
 14713                           
 14714                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 14715  0044BC  9CA0               	bcf	4000,6,c	;volatile
 14716  0044BE  0C9C               	retlw	156	;funcret
 14717  0044C0                     __end_of_CMP1_Initialize:
 14718                           	opt stack 0
 14719                           tblptru	equ	0xFF8
 14720                           tblptrh	equ	0xFF7
 14721                           tblptrl	equ	0xFF6
 14722                           tablat	equ	0xFF5
 14723                           prodh	equ	0xFF4
 14724                           prodl	equ	0xFF3
 14725                           intcon	equ	0xFF2
 14726                           postinc0	equ	0xFEE
 14727                           wreg	equ	0xFE8
 14728                           indf1	equ	0xFE7
 14729                           fsr1h	equ	0xFE2
 14730                           fsr1l	equ	0xFE1
 14731                           indf2	equ	0xFDF
 14732                           postinc2	equ	0xFDE
 14733                           postdec2	equ	0xFDD
 14734                           plusw2	equ	0xFDB
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8
 14738                           
 14739 ;; *************** function _ADC_Initialize *****************
 14740 ;; Defined at:
 14741 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;		None
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;		None
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  1    wreg      void 
 14748 ;; Registers used:
 14749 ;;		wreg, status,2
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14755 ;;      Params:         0       0       0       0       0       0       0       0       0
 14756 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14757 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14758 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14759 ;;Total ram usage:        0 bytes
 14760 ;; Hardware stack levels used:    1
 14761 ;; Hardware stack levels required when called:   11
 14762 ;; This function calls:
 14763 ;;		Nothing
 14764 ;; This function is called by:
 14765 ;;		_SYSTEM_Initialize
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text74
 14770  004520                     __ptext74:
 14771                           	opt stack 0
 14772  004520                     _ADC_Initialize:
 14773                           	opt stack 18
 14774                           
 14775                           ;adc.c: 68: VREFCON0 = 0b10100000;
 14776                           
 14777                           ;incstack = 0
 14778  004520  0EA0               	movlw	160
 14779  004522  6E7D               	movwf	3965,c	;volatile
 14780                           
 14781                           ;adc.c: 70: ADCON0 = 0x01;
 14782  004524  0E01               	movlw	1
 14783  004526  6EC2               	movwf	4034,c	;volatile
 14784                           
 14785                           ;adc.c: 73: ADCON1 = 0x08;
 14786  004528  0E08               	movlw	8
 14787  00452A  6EC1               	movwf	4033,c	;volatile
 14788                           
 14789                           ;adc.c: 76: ADCON2 = 0b10001110;
 14790  00452C  0E8E               	movlw	142
 14791  00452E  6EC0               	movwf	4032,c	;volatile
 14792                           
 14793                           ;adc.c: 79: ADRESL = 0x00;
 14794  004530  6AC3               	clrf	4035,c	;volatile
 14795                           
 14796                           ;adc.c: 82: ADRESH = 0x00;
 14797  004532  6AC4               	clrf	4036,c	;volatile
 14798  004534  0012               	return		;funcret
 14799  004536                     __end_of_ADC_Initialize:
 14800                           	opt stack 0
 14801                           tblptru	equ	0xFF8
 14802                           tblptrh	equ	0xFF7
 14803                           tblptrl	equ	0xFF6
 14804                           tablat	equ	0xFF5
 14805                           prodh	equ	0xFF4
 14806                           prodl	equ	0xFF3
 14807                           intcon	equ	0xFF2
 14808                           postinc0	equ	0xFEE
 14809                           wreg	equ	0xFE8
 14810                           indf1	equ	0xFE7
 14811                           fsr1h	equ	0xFE2
 14812                           fsr1l	equ	0xFE1
 14813                           indf2	equ	0xFDF
 14814                           postinc2	equ	0xFDE
 14815                           postdec2	equ	0xFDD
 14816                           plusw2	equ	0xFDB
 14817                           fsr2h	equ	0xFDA
 14818                           fsr2l	equ	0xFD9
 14819                           status	equ	0xFD8
 14820                           
 14821 ;; *************** function _MOTEapp_handlerState *****************
 14822 ;; Defined at:
 14823 ;;		line 171 in file "../Includes/Board/MOTEapp.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;  state           1    wreg     enum E6355
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  state           1    0[BANK0 ] enum E6355
 14828 ;; Return value:  Size  Location     Type
 14829 ;;                  1    wreg      void 
 14830 ;; Registers used:
 14831 ;;		wreg
 14832 ;; Tracked objects:
 14833 ;;		On entry : F/0
 14834 ;;		On exit  : 0/0
 14835 ;;		Unchanged: 0/0
 14836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14837 ;;      Params:         0       0       0       0       0       0       0       0       0
 14838 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14840 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14841 ;;Total ram usage:        1 bytes
 14842 ;; Hardware stack levels used:    1
 14843 ;; Hardware stack levels required when called:   11
 14844 ;; This function calls:
 14845 ;;		Nothing
 14846 ;; This function is called by:
 14847 ;;		_main
 14848 ;; This function uses a non-reentrant model
 14849 ;;
 14850                           
 14851                           	psect	text75
 14852  00442A                     __ptext75:
 14853                           	opt stack 0
 14854  00442A                     _MOTEapp_handlerState:
 14855                           	opt stack 19
 14856                           
 14857                           ;incstack = 0
 14858                           ;MOTEapp_handlerState@state stored from wreg
 14859  00442A  6FC0               	movwf	MOTEapp_handlerState@state& (0+255),b
 14860                           
 14861                           ;MOTEapp.c: 173: moteState = state;
 14862  00442C  C0C0  F0FD         	movff	MOTEapp_handlerState@state,_moteState
 14863  004430  0012               	return		;funcret
 14864  004432                     __end_of_MOTEapp_handlerState:
 14865                           	opt stack 0
 14866                           tblptru	equ	0xFF8
 14867                           tblptrh	equ	0xFF7
 14868                           tblptrl	equ	0xFF6
 14869                           tablat	equ	0xFF5
 14870                           prodh	equ	0xFF4
 14871                           prodl	equ	0xFF3
 14872                           intcon	equ	0xFF2
 14873                           postinc0	equ	0xFEE
 14874                           wreg	equ	0xFE8
 14875                           indf1	equ	0xFE7
 14876                           fsr1h	equ	0xFE2
 14877                           fsr1l	equ	0xFE1
 14878                           indf2	equ	0xFDF
 14879                           postinc2	equ	0xFDE
 14880                           postdec2	equ	0xFDD
 14881                           plusw2	equ	0xFDB
 14882                           fsr2h	equ	0xFDA
 14883                           fsr2l	equ	0xFD9
 14884                           status	equ	0xFD8
 14885                           
 14886 ;; *************** function _DATAEE_ReadByte *****************
 14887 ;; Defined at:
 14888 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 14889 ;; Parameters:    Size  Location     Type
 14890 ;;  bAdd            1    wreg     unsigned char 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  bAdd            1    0[BANK0 ] unsigned char 
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1    wreg      unsigned char 
 14895 ;; Registers used:
 14896 ;;		wreg, status,2
 14897 ;; Tracked objects:
 14898 ;;		On entry : F/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14902 ;;      Params:         0       0       0       0       0       0       0       0       0
 14903 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14905 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14906 ;;Total ram usage:        1 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:   11
 14909 ;; This function calls:
 14910 ;;		Nothing
 14911 ;; This function is called by:
 14912 ;;		_main
 14913 ;; This function uses a non-reentrant model
 14914 ;;
 14915                           
 14916                           	psect	text76
 14917  0044E4                     __ptext76:
 14918                           	opt stack 0
 14919  0044E4                     _DATAEE_ReadByte:
 14920                           	opt stack 19
 14921                           
 14922                           ;incstack = 0
 14923                           ;DATAEE_ReadByte@bAdd stored from wreg
 14924  0044E4  6FC0               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 14925                           
 14926                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 14927  0044E6  C0C0  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 14928                           
 14929                           ;memory.c: 191: EECON1bits.CFGS = 0;
 14930  0044EA  9CA6               	bcf	4006,6,c	;volatile
 14931                           
 14932                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 14933  0044EC  9EA6               	bcf	4006,7,c	;volatile
 14934                           
 14935                           ;memory.c: 193: EECON1bits.RD = 1;
 14936  0044EE  80A6               	bsf	4006,0,c	;volatile
 14937                           
 14938                           ;memory.c: 194: __nop();
 14939  0044F0  F000               	nop	
 14940                           
 14941                           ;memory.c: 195: __nop();
 14942  0044F2  F000               	nop	
 14943                           
 14944                           ;memory.c: 197: return (EEDATA);
 14945  0044F4  50A8               	movf	4008,w,c	;volatile
 14946  0044F6  0012               	return		;funcret
 14947  0044F8                     __end_of_DATAEE_ReadByte:
 14948                           	opt stack 0
 14949                           tblptru	equ	0xFF8
 14950                           tblptrh	equ	0xFF7
 14951                           tblptrl	equ	0xFF6
 14952                           tablat	equ	0xFF5
 14953                           prodh	equ	0xFF4
 14954                           prodl	equ	0xFF3
 14955                           intcon	equ	0xFF2
 14956                           postinc0	equ	0xFEE
 14957                           wreg	equ	0xFE8
 14958                           indf1	equ	0xFE7
 14959                           fsr1h	equ	0xFE2
 14960                           fsr1l	equ	0xFE1
 14961                           indf2	equ	0xFDF
 14962                           postinc2	equ	0xFDE
 14963                           postdec2	equ	0xFDD
 14964                           plusw2	equ	0xFDB
 14965                           fsr2h	equ	0xFDA
 14966                           fsr2l	equ	0xFD9
 14967                           status	equ	0xFD8
 14968                           
 14969 ;; *************** function _INTERRUPT_InterruptManager *****************
 14970 ;; Defined at:
 14971 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;		None
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;		None
 14976 ;; Return value:  Size  Location     Type
 14977 ;;                  1    wreg      void 
 14978 ;; Registers used:
 14979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14980 ;; Tracked objects:
 14981 ;;		On entry : 0/0
 14982 ;;		On exit  : 0/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14985 ;;      Params:         0       0       0       0       0       0       0       0       0
 14986 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14987 ;;      Temps:         12       0       0       0       0       0       0       0       0
 14988 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14989 ;;Total ram usage:       12 bytes
 14990 ;; Hardware stack levels used:    1
 14991 ;; Hardware stack levels required when called:   10
 14992 ;; This function calls:
 14993 ;;		_CMP1_ISR
 14994 ;;		_EUSART_Receive_ISR
 14995 ;;		_EUSART_Transmit_ISR
 14996 ;;		_TMR1_ISR
 14997 ;;		_TMRapp_Tick
 14998 ;;		_USBDeviceTasks
 14999 ;;		_USBapp_setrxByteFlag
 15000 ;; This function is called by:
 15001 ;;		Interrupt level 2
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	intcode
 15006  001008                     __pintcode:
 15007                           	opt stack 0
 15008  001008                     _INTERRUPT_InterruptManager:
 15009                           	opt stack 10
 15010                           
 15011                           ;incstack = 0
 15012  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15013  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 15014  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15015  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 15016  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 15017  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 15018  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 15019  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 15020  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 15021  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 15022  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 15023  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 15024  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 15025                           
 15026                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15027  00103A  B09D               	btfsc	3997,0,c	;volatile
 15028  00103C  A09E               	btfss	3998,0,c	;volatile
 15029  00103E  D005               	goto	i2l970
 15030                           
 15031                           ;interrupt_manager.c: 59: {
 15032                           ;interrupt_manager.c: 60: TMR1_ISR();
 15033  001040  EC21  F022         	call	_TMR1_ISR	;wreg free
 15034                           
 15035                           ;interrupt_manager.c: 62: TMRapp_Tick();
 15036  001044  EC0F  F022         	call	_TMRapp_Tick	;wreg free
 15037                           
 15038                           ;interrupt_manager.c: 63: }
 15039  001048  D016               	goto	i2l978
 15040  00104A                     i2l970:
 15041                           
 15042                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 15043  00104A  BA9D               	btfsc	3997,5,c	;volatile
 15044  00104C  AA9E               	btfss	3998,5,c	;volatile
 15045  00104E  D005               	goto	i2l972
 15046                           
 15047                           ;interrupt_manager.c: 65: {
 15048                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 15049  001050  EC12  F022         	call	_USBapp_setrxByteFlag	;wreg free
 15050                           
 15051                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 15052  001054  EC73  F023         	call	_EUSART_Receive_ISR	;wreg free
 15053                           
 15054                           ;interrupt_manager.c: 68: }
 15055  001058  D00E               	goto	i2l978
 15056  00105A                     i2l972:
 15057                           
 15058                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 15059  00105A  B89D               	btfsc	3997,4,c	;volatile
 15060  00105C  A89E               	btfss	3998,4,c	;volatile
 15061  00105E  D003               	goto	i2l974
 15062                           
 15063                           ;interrupt_manager.c: 70: {
 15064                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 15065  001060  EC87  F023         	call	_EUSART_Transmit_ISR	;wreg free
 15066                           
 15067                           ;interrupt_manager.c: 72: }
 15068  001064  D008               	goto	i2l978
 15069  001066                     i2l974:
 15070                           
 15071                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 15072  001066  BCA0               	btfsc	4000,6,c	;volatile
 15073  001068  ACA1               	btfss	4001,6,c	;volatile
 15074  00106A  D003               	goto	i2l8473
 15075                           
 15076                           ;interrupt_manager.c: 74: {
 15077                           ;interrupt_manager.c: 75: CMP1_ISR();
 15078  00106C  EC05  F022         	call	_CMP1_ISR	;wreg free
 15079                           
 15080                           ;interrupt_manager.c: 76: }
 15081  001070  D002               	goto	i2l978
 15082  001072                     i2l8473:
 15083                           
 15084                           ;interrupt_manager.c: 77: else
 15085                           ;interrupt_manager.c: 78: {
 15086                           ;interrupt_manager.c: 80: USBDeviceTasks();
 15087  001072  EC0F  F031         	call	_USBDeviceTasks	;wreg free
 15088  001076                     i2l978:
 15089  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 15090  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 15091  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 15092  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 15093  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 15094  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 15095  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 15096  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 15097  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 15098  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 15099  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15100  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15101  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15102  0010A8  0011               	retfie		f
 15103  0010AA                     __end_of_INTERRUPT_InterruptManager:
 15104                           	opt stack 0
 15105                           pclatu	equ	0xFFB
 15106                           pclath	equ	0xFFA
 15107                           tblptru	equ	0xFF8
 15108                           tblptrh	equ	0xFF7
 15109                           tblptrl	equ	0xFF6
 15110                           tablat	equ	0xFF5
 15111                           prodh	equ	0xFF4
 15112                           prodl	equ	0xFF3
 15113                           intcon	equ	0xFF2
 15114                           postinc0	equ	0xFEE
 15115                           wreg	equ	0xFE8
 15116                           indf1	equ	0xFE7
 15117                           fsr1h	equ	0xFE2
 15118                           fsr1l	equ	0xFE1
 15119                           indf2	equ	0xFDF
 15120                           postinc2	equ	0xFDE
 15121                           postdec2	equ	0xFDD
 15122                           plusw2	equ	0xFDB
 15123                           fsr2h	equ	0xFDA
 15124                           fsr2l	equ	0xFD9
 15125                           status	equ	0xFD8
 15126                           
 15127 ;; *************** function _USBapp_setrxByteFlag *****************
 15128 ;; Defined at:
 15129 ;;		line 226 in file "../Includes/Board/USBapp.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;		None
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;		None
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      void 
 15136 ;; Registers used:
 15137 ;;		wreg, status,2
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0
 15144 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15145 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15146 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15147 ;;Total ram usage:        0 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; This function calls:
 15150 ;;		Nothing
 15151 ;; This function is called by:
 15152 ;;		_INTERRUPT_InterruptManager
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text78
 15157  004424                     __ptext78:
 15158                           	opt stack 0
 15159  004424                     _USBapp_setrxByteFlag:
 15160                           	opt stack 19
 15161                           
 15162                           ;USBapp.c: 228: rxByteFlag = 1;
 15163                           
 15164                           ;incstack = 0
 15165  004424  0E01               	movlw	1
 15166  004426  6E2A               	movwf	_rxByteFlag,c	;volatile
 15167  004428  0C01               	retlw	1	;funcret
 15168  00442A                     __end_of_USBapp_setrxByteFlag:
 15169                           	opt stack 0
 15170                           pclatu	equ	0xFFB
 15171                           pclath	equ	0xFFA
 15172                           tblptru	equ	0xFF8
 15173                           tblptrh	equ	0xFF7
 15174                           tblptrl	equ	0xFF6
 15175                           tablat	equ	0xFF5
 15176                           prodh	equ	0xFF4
 15177                           prodl	equ	0xFF3
 15178                           intcon	equ	0xFF2
 15179                           postinc0	equ	0xFEE
 15180                           wreg	equ	0xFE8
 15181                           indf1	equ	0xFE7
 15182                           fsr1h	equ	0xFE2
 15183                           fsr1l	equ	0xFE1
 15184                           indf2	equ	0xFDF
 15185                           postinc2	equ	0xFDE
 15186                           postdec2	equ	0xFDD
 15187                           plusw2	equ	0xFDB
 15188                           fsr2h	equ	0xFDA
 15189                           fsr2l	equ	0xFD9
 15190                           status	equ	0xFD8
 15191                           
 15192 ;; *************** function _USBDeviceTasks *****************
 15193 ;; Defined at:
 15194 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;		None
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  i               1   32[COMRAM] unsigned char 
 15199 ;; Return value:  Size  Location     Type
 15200 ;;                  1    wreg      void 
 15201 ;; Registers used:
 15202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15203 ;; Tracked objects:
 15204 ;;		On entry : 0/0
 15205 ;;		On exit  : 0/0
 15206 ;;		Unchanged: 0/0
 15207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15208 ;;      Params:         0       0       0       0       0       0       0       0       0
 15209 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15211 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15212 ;;Total ram usage:        1 bytes
 15213 ;; Hardware stack levels used:    1
 15214 ;; Hardware stack levels required when called:    9
 15215 ;; This function calls:
 15216 ;;		_USBCtrlEPAllowStatusStage
 15217 ;;		_USBCtrlEPService
 15218 ;;		_USBStallHandler
 15219 ;;		_USBSuspend
 15220 ;;		_USBWakeFromSuspend
 15221 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15222 ;;		i2_USBDeviceInit
 15223 ;; This function is called by:
 15224 ;;		_INTERRUPT_InterruptManager
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text79
 15229  00621E                     __ptext79:
 15230                           	opt stack 0
 15231  00621E                     _USBDeviceTasks:
 15232                           	opt stack 10
 15233                           
 15234                           ;usb_device.c: 430: uint8_t i;
 15235                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 15236                           
 15237                           ;incstack = 0
 15238  00621E  0100               	movlb	0	; () banked
 15239  006220  0591               	decf	_USBDeviceState& (0+255),w,b	;volatile
 15240  006222  E107               	bnz	i2l8311
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;usb_device.c: 433: {
 15244                           ;usb_device.c: 443: if(!UCONbits.SE0)
 15245  006224  BA60               	btfsc	3936,5,c	;volatile
 15246  006226  D005               	goto	i2l8311
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;usb_device.c: 444: {
 15250                           ;usb_device.c: 445: {UIR = 0;};
 15251  006228  6A65               	clrf	3941,c	;volatile
 15252                           
 15253                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 15254  00622A  8064               	bsf	3940,0,c	;volatile
 15255                           
 15256                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 15257  00622C  8864               	bsf	3940,4,c	;volatile
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 15261  00622E  0E02               	movlw	2
 15262  006230  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15263  006232                     i2l8311:
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;usb_device.c: 449: }
 15267                           ;usb_device.c: 450: }
 15268                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 15269  006232  B465               	btfsc	3941,2,c	;volatile
 15270                           
 15271                           ; BSR set to: 0
 15272  006234  A464               	btfss	3940,2,c	;volatile
 15273  006236  D003               	goto	i2l8319
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;usb_device.c: 455: {
 15277                           ;usb_device.c: 456: (UIR &= 0xFB);
 15278  006238  9465               	bcf	3941,2,c	;volatile
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;usb_device.c: 457: USBWakeFromSuspend();
 15282  00623A  EC1A  F023         	call	_USBWakeFromSuspend	;wreg free
 15283  00623E                     i2l8319:
 15284                           
 15285                           ;usb_device.c: 458: }
 15286                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 15287  00623E  A260               	btfss	3936,1,c	;volatile
 15288  006240  D002               	goto	i2l1441
 15289                           
 15290                           ;usb_device.c: 464: {
 15291                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 15292  006242  94A4               	bcf	4004,2,c	;volatile
 15293                           
 15294                           ;usb_device.c: 466: return;
 15295  006244  0012               	return	
 15296  006246                     i2l1441:
 15297                           
 15298                           ;usb_device.c: 467: }
 15299                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15300  006246  B065               	btfsc	3941,0,c	;volatile
 15301  006248  A064               	btfss	3940,0,c	;volatile
 15302  00624A  D006               	goto	i2l8333
 15303                           
 15304                           ;usb_device.c: 480: {
 15305                           ;usb_device.c: 481: USBDeviceInit();
 15306  00624C  ECDC  F02E         	call	i2_USBDeviceInit	;wreg free
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 15310  006250  84A3               	bsf	4003,2,c	;volatile
 15311                           
 15312                           ; BSR set to: 0
 15313                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 15314  006252  0E04               	movlw	4
 15315  006254  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;usb_device.c: 489: (UIR &= 0xFE);
 15319  006256  9065               	bcf	3941,0,c	;volatile
 15320  006258                     i2l8333:
 15321                           
 15322                           ;usb_device.c: 490: }
 15323                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15324  006258  B865               	btfsc	3941,4,c	;volatile
 15325  00625A  A864               	btfss	3940,4,c	;volatile
 15326  00625C  D003               	goto	i2l8341
 15327                           
 15328                           ;usb_device.c: 496: {
 15329                           ;usb_device.c: 497: USBSuspend();
 15330  00625E  ECCE  F022         	call	_USBSuspend	;wreg free
 15331                           
 15332                           ;usb_device.c: 498: (UIR &= 0xEF);
 15333  006262  9865               	bcf	3941,4,c	;volatile
 15334  006264                     i2l8341:
 15335                           
 15336                           ;usb_device.c: 499: }
 15337                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 15338  006264  AC65               	btfss	3941,6,c	;volatile
 15339  006266  D014               	goto	i2l8357
 15340                           
 15341                           ;usb_device.c: 502: {
 15342                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 15343  006268  AC64               	btfss	3940,6,c	;volatile
 15344  00626A  D00A               	goto	i2l8347
 15345                           
 15346                           ;usb_device.c: 504: {
 15347                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15348  00626C  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15349  00626E  0E73               	movlw	115
 15350  006270  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15351  006272  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15352  006274  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15353  006276  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15354  006278  0E01               	movlw	1
 15355  00627A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15356  00627C  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15357  006280                     i2l8347:
 15358                           
 15359                           ;usb_device.c: 506: }
 15360                           ;usb_device.c: 507: (UIR &= 0xBF);
 15361  006280  9C65               	bcf	3941,6,c	;volatile
 15362                           
 15363                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 15364  006282  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 15365  006284  E001               	bz	i2l8353
 15366                           
 15367                           ;usb_device.c: 513: {
 15368                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 15369  006286  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 15370  006288                     i2l8353:
 15371                           
 15372                           ;usb_device.c: 515: }
 15373                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 15374  006288  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15375  00628A  E102               	bnz	i2l8357
 15376                           
 15377                           ;usb_device.c: 522: {
 15378                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 15379  00628C  EC4B  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15380  006290                     i2l8357:
 15381                           
 15382                           ;usb_device.c: 524: }
 15383                           ;usb_device.c: 525: }
 15384                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15385  006290  BA65               	btfsc	3941,5,c	;volatile
 15386  006292  AA64               	btfss	3940,5,c	;volatile
 15387  006294  D002               	goto	i2l8363
 15388                           
 15389                           ;usb_device.c: 528: {
 15390                           ;usb_device.c: 529: USBStallHandler();
 15391  006296  EC18  F025         	call	_USBStallHandler	;wreg free
 15392  00629A                     i2l8363:
 15393                           
 15394                           ;usb_device.c: 530: }
 15395                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15396  00629A  B265               	btfsc	3941,1,c	;volatile
 15397  00629C  A264               	btfss	3940,1,c	;volatile
 15398  00629E  D00B               	goto	i2l8371
 15399                           
 15400                           ;usb_device.c: 533: {
 15401                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15402  0062A0  0E7F               	movlw	127
 15403  0062A2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15404  0062A4  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15405  0062A6  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15406  0062A8  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15407  0062AA  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15408  0062AC  0E01               	movlw	1
 15409  0062AE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15410  0062B0  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15411                           
 15412                           ;usb_device.c: 535: {UEIR = 0;};
 15413  0062B4  6A67               	clrf	3943,c	;volatile
 15414  0062B6                     i2l8371:
 15415                           
 15416                           ;usb_device.c: 536: }
 15417                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 15418  0062B6  0E04               	movlw	4
 15419  0062B8  0100               	movlb	0	; () banked
 15420  0062BA  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 15421  0062BC  D002               	goto	i2l1451
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;usb_device.c: 544: {
 15425                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 15426  0062BE  94A4               	bcf	4004,2,c	;volatile
 15427                           
 15428                           ;usb_device.c: 546: return;
 15429  0062C0  0C04               	retlw	4
 15430  0062C2                     i2l1451:
 15431                           
 15432                           ; BSR set to: 0
 15433                           ;usb_device.c: 547: }
 15434                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 15435  0062C2  A664               	btfss	3940,3,c	;volatile
 15436  0062C4  D029               	goto	i2l1452
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;usb_device.c: 553: {
 15440                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 15441  0062C6  6A4E               	clrf	USBDeviceTasks@i,c
 15442  0062C8                     i2l1453:
 15443                           
 15444                           ;usb_device.c: 555: {
 15445                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 15446  0062C8  A665               	btfss	3941,3,c	;volatile
 15447  0062CA  D026               	goto	i2l1452
 15448                           
 15449                           ;usb_device.c: 557: {
 15450                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 15451  0062CC  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 15452                           
 15453                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 15454  0062D0  302D               	rrcf	_USTATcopy,w,c	;volatile
 15455  0062D2  32E8               	rrcf	wreg,f,c
 15456  0062D4  32E8               	rrcf	wreg,f,c
 15457  0062D6  0B0F               	andlw	15
 15458  0062D8  6E22               	movwf	_endpoint_number,c	;volatile
 15459                           
 15460                           ;usb_device.c: 562: (UIR &= 0xF7);
 15461  0062DA  9665               	bcf	3941,3,c	;volatile
 15462                           
 15463                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 15464  0062DC  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15465  0062DE  D003               	goto	i2l8391
 15466                           
 15467                           ;usb_device.c: 567: {
 15468                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15469  0062E0  5022               	movf	_endpoint_number,w,c
 15470  0062E2  0F6D               	addlw	low _ep_data_out
 15471  0062E4  D002               	goto	L21
 15472  0062E6                     i2l8391:
 15473                           
 15474                           ;usb_device.c: 570: else
 15475                           ;usb_device.c: 571: {
 15476                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15477  0062E6  5022               	movf	_endpoint_number,w,c
 15478  0062E8  0F6A               	addlw	low _ep_data_in
 15479  0062EA                     L21:
 15480  0062EA  6ED9               	movwf	fsr2l,c
 15481  0062EC  6ADA               	clrf	fsr2h,c
 15482  0062EE  0100               	movlb	0	; () banked
 15483  0062F0  70DF               	btg	indf2,0,c
 15484                           
 15485                           ; BSR set to: 0
 15486                           ;usb_device.c: 573: }
 15487                           ;usb_device.c: 577: if(endpoint_number == 0)
 15488  0062F2  5022               	movf	_endpoint_number,w,c	;volatile
 15489  0062F4  E103               	bnz	i2l8397
 15490                           
 15491                           ; BSR set to: 0
 15492                           ;usb_device.c: 578: {
 15493                           ;usb_device.c: 579: USBCtrlEPService();
 15494  0062F6  EC3A  F02C         	call	_USBCtrlEPService	;wreg free
 15495                           
 15496                           ;usb_device.c: 580: }
 15497  0062FA  D00A               	goto	i2l8399
 15498  0062FC                     i2l8397:
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;usb_device.c: 581: else
 15502                           ;usb_device.c: 582: {
 15503                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15504  0062FC  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15505  0062FE  0E72               	movlw	114
 15506  006300  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15507  006302  0E2D               	movlw	low _USTATcopy
 15508  006304  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15509  006306  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15510  006308  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15511  00630A  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15512  00630C  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15513  006310                     i2l8399:
 15514  006310  2A4E               	incf	USBDeviceTasks@i,f,c
 15515  006312  0E03               	movlw	3
 15516  006314  644E               	cpfsgt	USBDeviceTasks@i,c
 15517  006316  D7D8               	goto	i2l1453
 15518  006318                     i2l1452:
 15519                           
 15520                           ;usb_device.c: 589: }
 15521                           ;usb_device.c: 590: }
 15522                           ;usb_device.c: 591: }
 15523                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 15524  006318  94A4               	bcf	4004,2,c	;volatile
 15525  00631A  0012               	return		;funcret
 15526  00631C                     __end_of_USBDeviceTasks:
 15527                           	opt stack 0
 15528                           pclatu	equ	0xFFB
 15529                           pclath	equ	0xFFA
 15530                           tblptru	equ	0xFF8
 15531                           tblptrh	equ	0xFF7
 15532                           tblptrl	equ	0xFF6
 15533                           tablat	equ	0xFF5
 15534                           prodh	equ	0xFF4
 15535                           prodl	equ	0xFF3
 15536                           intcon	equ	0xFF2
 15537                           postinc0	equ	0xFEE
 15538                           wreg	equ	0xFE8
 15539                           indf1	equ	0xFE7
 15540                           fsr1h	equ	0xFE2
 15541                           fsr1l	equ	0xFE1
 15542                           indf2	equ	0xFDF
 15543                           postinc2	equ	0xFDE
 15544                           postdec2	equ	0xFDD
 15545                           plusw2	equ	0xFDB
 15546                           fsr2h	equ	0xFDA
 15547                           fsr2l	equ	0xFD9
 15548                           status	equ	0xFD8
 15549                           
 15550 ;; *************** function i2_USBDeviceInit *****************
 15551 ;; Defined at:
 15552 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;		None
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15557 ;; Return value:  Size  Location     Type
 15558 ;;                  1    wreg      void 
 15559 ;; Registers used:
 15560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : F/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15566 ;;      Params:         0       0       0       0       0       0       0       0       0
 15567 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15569 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15570 ;;Total ram usage:        1 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:    1
 15573 ;; This function calls:
 15574 ;;		i2_memset
 15575 ;; This function is called by:
 15576 ;;		_USBDeviceTasks
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text80
 15581  005DB8                     __ptext80:
 15582                           	opt stack 0
 15583  005DB8                     i2_USBDeviceInit:
 15584                           	opt stack 17
 15585                           
 15586                           ;usb_device.c: 239: uint8_t i;
 15587                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 15588                           
 15589                           ;incstack = 0
 15590  005DB8  94A3               	bcf	4003,2,c	;volatile
 15591                           
 15592                           ;usb_device.c: 244: {UEIR = 0;};
 15593  005DBA  6A67               	clrf	3943,c	;volatile
 15594                           
 15595                           ;usb_device.c: 247: {UIR = 0;};
 15596  005DBC  6A65               	clrf	3941,c	;volatile
 15597                           
 15598                           ;usb_device.c: 250: UEP0 = 0;
 15599  005DBE  6A6A               	clrf	3946,c	;volatile
 15600                           
 15601                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 15602  005DC0  0E6B               	movlw	107
 15603  005DC2  6E2E               	movwf	i2memset@p1,c
 15604  005DC4  0E0F               	movlw	15
 15605  005DC6  6E2F               	movwf	i2memset@p1+1,c
 15606  005DC8  6A31               	clrf	i2memset@c+1,c
 15607  005DCA  6A30               	clrf	i2memset@c,c
 15608  005DCC  6A33               	clrf	i2memset@n+1,c
 15609  005DCE  0E02               	movlw	2
 15610  005DD0  6E32               	movwf	i2memset@n,c
 15611  005DD2  ECC3  F023         	call	i2_memset	;wreg free
 15612                           
 15613                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15614  005DD6  0E16               	movlw	22
 15615  005DD8  6E62               	movwf	3938,c	;volatile
 15616  005DDA  0E9F               	movlw	159
 15617  005DDC  6E66               	movwf	3942,c	;volatile
 15618  005DDE  0E7B               	movlw	123
 15619  005DE0  6E64               	movwf	3940,c	;volatile
 15620                           
 15621                           ;usb_device.c: 257: ;
 15622                           ;usb_device.c: 260: ;
 15623                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15624  005DE2  6A36               	clrf	i2USBDeviceInit@i,c
 15625  005DE4                     i2l7955:
 15626                           
 15627                           ;usb_device.c: 264: {
 15628                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 15629  005DE4  5036               	movf	i2USBDeviceInit@i,w,c
 15630  005DE6  0D04               	mullw	4
 15631  005DE8  0E00               	movlw	0
 15632  005DEA  24F3               	addwf	prodl,w,c
 15633  005DEC  6ED9               	movwf	fsr2l,c
 15634  005DEE  0E04               	movlw	4
 15635  005DF0  20F4               	addwfc	prodh,w,c
 15636  005DF2  6EDA               	movwf	fsr2h,c
 15637  005DF4  6ADE               	clrf	postinc2,c
 15638  005DF6  6ADE               	clrf	postinc2,c
 15639  005DF8  6ADE               	clrf	postinc2,c
 15640  005DFA  6ADD               	clrf	postdec2,c
 15641  005DFC  2A36               	incf	i2USBDeviceInit@i,f,c
 15642  005DFE  0E0B               	movlw	11
 15643  005E00  6436               	cpfsgt	i2USBDeviceInit@i,c
 15644  005E02  D7F0               	goto	i2l7955
 15645                           
 15646                           ;usb_device.c: 266: }
 15647                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 15648  005E04  8C60               	bsf	3936,6,c	;volatile
 15649                           
 15650                           ;usb_device.c: 272: UADDR = 0x00;
 15651  005E06  6A63               	clrf	3939,c	;volatile
 15652                           
 15653                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 15654  005E08  9860               	bcf	3936,4,c	;volatile
 15655                           
 15656                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 15657  005E0A  9C60               	bcf	3936,6,c	;volatile
 15658                           
 15659                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 15660  005E0C  D005               	goto	i2l7969
 15661  005E0E                     i2l7961:
 15662                           
 15663                           ;usb_device.c: 282: {
 15664                           ;usb_device.c: 283: (UIR &= 0xF7);
 15665  005E0E  9665               	bcf	3941,3,c	;volatile
 15666                           
 15667                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 15668  005E10  6A0C               	clrf	_inPipes+3,c	;volatile
 15669                           
 15670                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 15671  005E12  6A04               	clrf	_outPipes+3,c	;volatile
 15672                           
 15673                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 15674  005E14  6A05               	clrf	_outPipes+4,c	;volatile
 15675  005E16  6A06               	clrf	_outPipes+5,c	;volatile
 15676  005E18                     i2l7969:
 15677  005E18  B665               	btfsc	3941,3,c	;volatile
 15678  005E1A  D7F9               	goto	i2l7961
 15679                           
 15680                           ;usb_device.c: 288: }
 15681                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 15682  005E1C  0E01               	movlw	1
 15683  005E1E  0100               	movlb	0	; () banked
 15684  005E20  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 15685                           
 15686                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 15687  005E22  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 15691  005E24  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 15695  005E26  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 15699  005E28  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 15700                           
 15701                           ; BSR set to: 0
 15702                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 15703  005E2A  6A36               	clrf	i2USBDeviceInit@i,c
 15704  005E2C                     i2l7985:
 15705                           
 15706                           ;usb_device.c: 302: {
 15707                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 15708  005E2C  5036               	movf	i2USBDeviceInit@i,w,c
 15709  005E2E  0D02               	mullw	2
 15710  005E30  50F3               	movf	prodl,w,c
 15711  005E32  0F0F               	addlw	low _pBDTEntryIn
 15712  005E34  6ED9               	movwf	fsr2l,c
 15713  005E36  6ADA               	clrf	fsr2h,c
 15714  005E38  6ADE               	clrf	postinc2,c
 15715  005E3A  6ADD               	clrf	postdec2,c
 15716                           
 15717                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 15718  005E3C  5036               	movf	i2USBDeviceInit@i,w,c
 15719  005E3E  0D02               	mullw	2
 15720  005E40  50F3               	movf	prodl,w,c
 15721  005E42  0F60               	addlw	low _pBDTEntryOut
 15722  005E44  6ED9               	movwf	fsr2l,c
 15723  005E46  6ADA               	clrf	fsr2h,c
 15724  005E48  6ADE               	clrf	postinc2,c
 15725  005E4A  6ADD               	clrf	postdec2,c
 15726                           
 15727                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 15728  005E4C  5036               	movf	i2USBDeviceInit@i,w,c
 15729  005E4E  0F6A               	addlw	low _ep_data_in
 15730  005E50  6ED9               	movwf	fsr2l,c
 15731  005E52  6ADA               	clrf	fsr2h,c
 15732  005E54  6ADF               	clrf	indf2,c
 15733                           
 15734                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 15735  005E56  5036               	movf	i2USBDeviceInit@i,w,c
 15736  005E58  0F6D               	addlw	low _ep_data_out
 15737  005E5A  6ED9               	movwf	fsr2l,c
 15738  005E5C  6ADA               	clrf	fsr2h,c
 15739  005E5E  6ADF               	clrf	indf2,c
 15740  005E60  2A36               	incf	i2USBDeviceInit@i,f,c
 15741  005E62  0E02               	movlw	2
 15742  005E64  6436               	cpfsgt	i2USBDeviceInit@i,c
 15743  005E66  D7E2               	goto	i2l7985
 15744                           
 15745                           ;usb_device.c: 307: }
 15746                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15747  005E68  0E08               	movlw	8
 15748  005E6A  6E0F               	movwf	_pBDTEntryIn,c
 15749  005E6C  0E04               	movlw	4
 15750  005E6E  6E10               	movwf	_pBDTEntryIn+1,c
 15751                           
 15752                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 15753  005E70  0E16               	movlw	22
 15754  005E72  6E6A               	movwf	3946,c	;volatile
 15755                           
 15756                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15757  005E74  0E04               	movlw	4
 15758  005E76  0104               	movlb	4	; () banked
 15759  005E78  6F03               	movwf	3,b	;volatile
 15760  005E7A  0E30               	movlw	48
 15761  005E7C  6F02               	movwf	2,b	;volatile
 15762                           
 15763                           ; BSR set to: 4
 15764                           ;usb_device.c: 315: BDT[0].CNT = 8;
 15765  005E7E  0E08               	movlw	8
 15766  005E80  6F01               	movwf	1,b	;volatile
 15767                           
 15768                           ; BSR set to: 4
 15769                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 15770  005E82  0E04               	movlw	4
 15771  005E84  6F00               	movwf	0,b	;volatile
 15772                           
 15773                           ; BSR set to: 4
 15774                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 15775  005E86  8F00               	bsf	0,7,b	;volatile
 15776                           
 15777                           ; BSR set to: 4
 15778                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 15779  005E88  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 15780                           
 15781                           ; BSR set to: 4
 15782                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 15783  005E8A  0100               	movlb	0	; () banked
 15784  005E8C  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 15785                           
 15786                           ; BSR set to: 0
 15787  005E8E  0012               	return		;funcret
 15788  005E90                     __end_ofi2_USBDeviceInit:
 15789                           	opt stack 0
 15790                           pclatu	equ	0xFFB
 15791                           pclath	equ	0xFFA
 15792                           tblptru	equ	0xFF8
 15793                           tblptrh	equ	0xFF7
 15794                           tblptrl	equ	0xFF6
 15795                           tablat	equ	0xFF5
 15796                           prodh	equ	0xFF4
 15797                           prodl	equ	0xFF3
 15798                           intcon	equ	0xFF2
 15799                           postinc0	equ	0xFEE
 15800                           wreg	equ	0xFE8
 15801                           indf1	equ	0xFE7
 15802                           fsr1h	equ	0xFE2
 15803                           fsr1l	equ	0xFE1
 15804                           indf2	equ	0xFDF
 15805                           postinc2	equ	0xFDE
 15806                           postdec2	equ	0xFDD
 15807                           plusw2	equ	0xFDB
 15808                           fsr2h	equ	0xFDA
 15809                           fsr2l	equ	0xFD9
 15810                           status	equ	0xFD8
 15811                           
 15812 ;; *************** function _USBWakeFromSuspend *****************
 15813 ;; Defined at:
 15814 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 15815 ;; Parameters:    Size  Location     Type
 15816 ;;		None
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;		None
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  1    wreg      void 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15823 ;; Tracked objects:
 15824 ;;		On entry : F/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15828 ;;      Params:         0       0       0       0       0       0       0       0       0
 15829 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15831 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15832 ;;Total ram usage:        0 bytes
 15833 ;; Hardware stack levels used:    1
 15834 ;; Hardware stack levels required when called:    5
 15835 ;; This function calls:
 15836 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15837 ;; This function is called by:
 15838 ;;		_USBDeviceTasks
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text81
 15843  004634                     __ptext81:
 15844                           	opt stack 0
 15845  004634                     _USBWakeFromSuspend:
 15846                           	opt stack 13
 15847                           
 15848                           ; BSR set to: 0
 15849                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;incstack = 0
 15853  004634  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15857  004636  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15858  004638  0E74               	movlw	116
 15859  00463A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15860  00463C  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15861  00463E  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15862  004640  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15863  004642  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15864  004644  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15865                           
 15866                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 15867  004648  9260               	bcf	3936,1,c	;volatile
 15868                           
 15869                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 15870  00464A  9464               	bcf	3940,2,c	;volatile
 15871                           
 15872                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 15873  00464C  D001               	goto	i2l7879
 15874  00464E                     i2l7877:
 15875                           
 15876                           ;usb_device.c: 1977: {
 15877                           ;usb_device.c: 1978: (UIR &= 0xFB);
 15878  00464E  9465               	bcf	3941,2,c	;volatile
 15879  004650                     i2l7879:
 15880  004650  A465               	btfss	3941,2,c	;volatile
 15881  004652  0012               	return		;funcret
 15882  004654  D7FC               	goto	i2l7877
 15883  004656                     __end_of_USBWakeFromSuspend:
 15884                           	opt stack 0
 15885                           pclatu	equ	0xFFB
 15886                           pclath	equ	0xFFA
 15887                           tblptru	equ	0xFF8
 15888                           tblptrh	equ	0xFF7
 15889                           tblptrl	equ	0xFF6
 15890                           tablat	equ	0xFF5
 15891                           prodh	equ	0xFF4
 15892                           prodl	equ	0xFF3
 15893                           intcon	equ	0xFF2
 15894                           postinc0	equ	0xFEE
 15895                           wreg	equ	0xFE8
 15896                           indf1	equ	0xFE7
 15897                           fsr1h	equ	0xFE2
 15898                           fsr1l	equ	0xFE1
 15899                           indf2	equ	0xFDF
 15900                           postinc2	equ	0xFDE
 15901                           postdec2	equ	0xFDD
 15902                           plusw2	equ	0xFDB
 15903                           fsr2h	equ	0xFDA
 15904                           fsr2l	equ	0xFD9
 15905                           status	equ	0xFD8
 15906                           
 15907 ;; *************** function _USBSuspend *****************
 15908 ;; Defined at:
 15909 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 15910 ;; Parameters:    Size  Location     Type
 15911 ;;		None
 15912 ;; Auto vars:     Size  Location     Type
 15913 ;;		None
 15914 ;; Return value:  Size  Location     Type
 15915 ;;                  1    wreg      void 
 15916 ;; Registers used:
 15917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15918 ;; Tracked objects:
 15919 ;;		On entry : 0/0
 15920 ;;		On exit  : 0/0
 15921 ;;		Unchanged: 0/0
 15922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15923 ;;      Params:         0       0       0       0       0       0       0       0       0
 15924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15927 ;;Total ram usage:        0 bytes
 15928 ;; Hardware stack levels used:    1
 15929 ;; Hardware stack levels required when called:    5
 15930 ;; This function calls:
 15931 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15932 ;; This function is called by:
 15933 ;;		_USBDeviceTasks
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           	psect	text82
 15938  00459C                     __ptext82:
 15939                           	opt stack 0
 15940  00459C                     _USBSuspend:
 15941                           	opt stack 13
 15942                           
 15943                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 15944                           
 15945                           ;incstack = 0
 15946  00459C  8464               	bsf	3940,2,c	;volatile
 15947                           
 15948                           ;usb_device.c: 1915: (UIR &= 0xEF);
 15949  00459E  9865               	bcf	3941,4,c	;volatile
 15950                           
 15951                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 15952  0045A0  8260               	bsf	3936,1,c	;volatile
 15953                           
 15954                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 15955  0045A2  0E01               	movlw	1
 15956  0045A4  0100               	movlb	0	; () banked
 15957  0045A6  6F8E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15961  0045A8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15962  0045AA  0E75               	movlw	117
 15963  0045AC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15964  0045AE  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15965  0045B0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15966  0045B2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15967  0045B4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15968  0045B6  EF7A  F025         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15969  0045BA                     __end_of_USBSuspend:
 15970                           	opt stack 0
 15971                           pclatu	equ	0xFFB
 15972                           pclath	equ	0xFFA
 15973                           tblptru	equ	0xFF8
 15974                           tblptrh	equ	0xFF7
 15975                           tblptrl	equ	0xFF6
 15976                           tablat	equ	0xFF5
 15977                           prodh	equ	0xFF4
 15978                           prodl	equ	0xFF3
 15979                           intcon	equ	0xFF2
 15980                           postinc0	equ	0xFEE
 15981                           wreg	equ	0xFE8
 15982                           indf1	equ	0xFE7
 15983                           fsr1h	equ	0xFE2
 15984                           fsr1l	equ	0xFE1
 15985                           indf2	equ	0xFDF
 15986                           postinc2	equ	0xFDE
 15987                           postdec2	equ	0xFDD
 15988                           plusw2	equ	0xFDB
 15989                           fsr2h	equ	0xFDA
 15990                           fsr2l	equ	0xFD9
 15991                           status	equ	0xFD8
 15992                           
 15993 ;; *************** function _USBStallHandler *****************
 15994 ;; Defined at:
 15995 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      void 
 16002 ;; Registers used:
 16003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16011 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16012 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16013 ;;Total ram usage:        1 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; This function calls:
 16016 ;;		Nothing
 16017 ;; This function is called by:
 16018 ;;		_USBDeviceTasks
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           	psect	text83
 16023  004A30                     __ptext83:
 16024                           	opt stack 0
 16025  004A30                     _USBStallHandler:
 16026                           	opt stack 18
 16027                           
 16028                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 16029                           
 16030                           ;incstack = 0
 16031  004A30  A06A               	btfss	3946,0,c	;volatile
 16032  004A32  D01B               	goto	i2l1591
 16033                           
 16034                           ;usb_device.c: 1859: {
 16035                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 16036  004A34  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16037  004A38  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16038  004A3C  0E80               	movlw	128
 16039  004A3E  18DE               	xorwf	postinc2,w,c
 16040  004A40  E113               	bnz	i2l7901
 16041  004A42  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16042  004A46  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16043  004A4A  0E84               	movlw	132
 16044  004A4C  18DE               	xorwf	postinc2,w,c
 16045  004A4E  E10C               	bnz	i2l7901
 16046                           
 16047                           ;usb_device.c: 1862: {
 16048                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16049  004A50  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16050  004A54  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16051  004A58  0E0C               	movlw	12
 16052  004A5A  6EDF               	movwf	indf2,c
 16053                           
 16054                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16055  004A5C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16056  004A60  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16057  004A64  0E00               	movlw	0
 16058  004A66  8EDB               	bsf	plusw2,7,c
 16059  004A68                     i2l7901:
 16060                           
 16061                           ;usb_device.c: 1866: }
 16062                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 16063  004A68  906A               	bcf	3946,0,c	;volatile
 16064  004A6A                     i2l1591:
 16065                           
 16066                           ;usb_device.c: 1868: }
 16067                           ;usb_device.c: 1870: (UIR &= 0xDF);
 16068  004A6A  9A65               	bcf	3941,5,c	;volatile
 16069  004A6C  0012               	return		;funcret
 16070  004A6E                     __end_of_USBStallHandler:
 16071                           	opt stack 0
 16072                           pclatu	equ	0xFFB
 16073                           pclath	equ	0xFFA
 16074                           tblptru	equ	0xFF8
 16075                           tblptrh	equ	0xFF7
 16076                           tblptrl	equ	0xFF6
 16077                           tablat	equ	0xFF5
 16078                           prodh	equ	0xFF4
 16079                           prodl	equ	0xFF3
 16080                           intcon	equ	0xFF2
 16081                           postinc0	equ	0xFEE
 16082                           wreg	equ	0xFE8
 16083                           indf1	equ	0xFE7
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           plusw2	equ	0xFDB
 16090                           fsr2h	equ	0xFDA
 16091                           fsr2l	equ	0xFD9
 16092                           status	equ	0xFD8
 16093                           
 16094 ;; *************** function _USBCtrlEPService *****************
 16095 ;; Defined at:
 16096 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;		None
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 16101 ;; Return value:  Size  Location     Type
 16102 ;;                  1    wreg      void 
 16103 ;; Registers used:
 16104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16105 ;; Tracked objects:
 16106 ;;		On entry : F/0
 16107 ;;		On exit  : 0/0
 16108 ;;		Unchanged: 0/0
 16109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16110 ;;      Params:         0       0       0       0       0       0       0       0       0
 16111 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16112 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16113 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16114 ;;Total ram usage:        3 bytes
 16115 ;; Hardware stack levels used:    1
 16116 ;; Hardware stack levels required when called:    8
 16117 ;; This function calls:
 16118 ;;		_USBCtrlTrfInHandler
 16119 ;;		_USBCtrlTrfOutHandler
 16120 ;;		_USBCtrlTrfSetupHandler
 16121 ;; This function is called by:
 16122 ;;		_USBDeviceTasks
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           	psect	text84
 16127  005874                     __ptext84:
 16128                           	opt stack 0
 16129  005874                     _USBCtrlEPService:
 16130                           	opt stack 10
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 16134                           
 16135                           ;incstack = 0
 16136  005874  0E2D               	movlw	45
 16137  005876  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 16141  005878  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 16142  00587C  0EFD               	movlw	253
 16143  00587E  164B               	andwf	??_USBCtrlEPService,f,c
 16144  005880  E14B               	bnz	i2l7935
 16145                           
 16146                           ; BSR set to: 0
 16147                           ;usb_device.c: 2013: {
 16148                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 16149  005882  90D8               	bcf	status,0,c
 16150  005884  302D               	rrcf	_USTATcopy,w,c	;volatile
 16151  005886  0B3F               	andlw	63
 16152  005888  0D04               	mullw	4
 16153  00588A  0E00               	movlw	0
 16154  00588C  24F3               	addwf	prodl,w,c
 16155  00588E  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 16156  005890  0E04               	movlw	4
 16157  005892  20F4               	addwfc	prodh,w,c
 16158  005894  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16159                           
 16160                           ; BSR set to: 0
 16161                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16162  005896  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16163  00589A  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 16167  00589E  0E04               	movlw	4
 16168  0058A0  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 16169                           
 16170                           ; BSR set to: 0
 16171                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 16172  0058A2  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16173  0058A6  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16174  0058AA  30DF               	rrcf	indf2,w,c
 16175  0058AC  32E8               	rrcf	wreg,f,c
 16176  0058AE  0B0F               	andlw	15
 16177  0058B0  0A0D               	xorlw	13
 16178  0058B2  E002 EF36  F026    	bnz	_USBCtrlTrfOutHandler
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;usb_device.c: 2025: {
 16182                           ;usb_device.c: 2026: unsigned char setup_cnt;
 16183                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 16184  0058B8  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 16185  0058BA                     i2l7921:
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;usb_device.c: 2033: {
 16189                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 16190  0058BA  EE20 F002          	lfsr	2,2
 16191  0058BE  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16192  0058C0  26D9               	addwf	fsr2l,f,c
 16193  0058C2  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16194  0058C4  22DA               	addwfc	fsr2h,f,c
 16195  0058C6  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 16196  0058CA  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 16197  0058CE  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 16198  0058D2  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 16199  0058D6  0E30               	movlw	48
 16200  0058D8  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 16201  0058DA  6EE1               	movwf	fsr1l,c
 16202  0058DC  6AE2               	clrf	fsr1h,c
 16203  0058DE  0E04               	movlw	4
 16204  0058E0  22E2               	addwfc	fsr1h,f,c
 16205  0058E2  CFDF FFE7          	movff	indf2,indf1
 16206                           
 16207                           ; BSR set to: 0
 16208                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 16209  0058E6  EE20 F002          	lfsr	2,2
 16210  0058EA  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16211  0058EC  26D9               	addwf	fsr2l,f,c
 16212  0058EE  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16213  0058F0  22DA               	addwfc	fsr2h,f,c
 16214  0058F2  2ADE               	incf	postinc2,f,c
 16215  0058F4  0E00               	movlw	0
 16216  0058F6  22DD               	addwfc	postdec2,f,c
 16217                           
 16218                           ; BSR set to: 0
 16219  0058F8  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 16220                           
 16221                           ; BSR set to: 0
 16222  0058FA  0E07               	movlw	7
 16223  0058FC  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 16224  0058FE  D7DD               	goto	i2l7921
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;usb_device.c: 2036: }
 16228                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16229  005900  EE20 F002          	lfsr	2,2
 16230  005904  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16231  005906  26D9               	addwf	fsr2l,f,c
 16232  005908  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16233  00590A  22DA               	addwfc	fsr2h,f,c
 16234  00590C  0E30               	movlw	48
 16235  00590E  6EDE               	movwf	postinc2,c
 16236  005910  0E04               	movlw	4
 16237  005912  6EDD               	movwf	postdec2,c
 16238                           
 16239                           ; BSR set to: 0
 16240                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 16241  005914  EF37  F027         	goto	_USBCtrlTrfSetupHandler	;wreg free
 16242  005918                     i2l7935:
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 16246  005918  502D               	movf	_USTATcopy,w,c	;volatile
 16247  00591A  0BFD               	andlw	253
 16248  00591C  0A04               	xorlw	4
 16249  00591E  B4D8               	btfsc	status,2,c
 16250                           
 16251                           ; BSR set to: 0
 16252                           ;usb_device.c: 2049: {
 16253                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 16254  005920  EC0A  F02E         	call	_USBCtrlTrfInHandler	;wreg free
 16255  005924  0012               	return		;funcret
 16256  005926                     __end_of_USBCtrlEPService:
 16257                           	opt stack 0
 16258                           pclatu	equ	0xFFB
 16259                           pclath	equ	0xFFA
 16260                           tblptru	equ	0xFF8
 16261                           tblptrh	equ	0xFF7
 16262                           tblptrl	equ	0xFF6
 16263                           tablat	equ	0xFF5
 16264                           prodh	equ	0xFF4
 16265                           prodl	equ	0xFF3
 16266                           intcon	equ	0xFF2
 16267                           postinc0	equ	0xFEE
 16268                           wreg	equ	0xFE8
 16269                           indf1	equ	0xFE7
 16270                           fsr1h	equ	0xFE2
 16271                           fsr1l	equ	0xFE1
 16272                           indf2	equ	0xFDF
 16273                           postinc2	equ	0xFDE
 16274                           postdec2	equ	0xFDD
 16275                           plusw2	equ	0xFDB
 16276                           fsr2h	equ	0xFDA
 16277                           fsr2l	equ	0xFD9
 16278                           status	equ	0xFD8
 16279                           
 16280 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16281 ;; Defined at:
 16282 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16291 ;; Tracked objects:
 16292 ;;		On entry : F/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    7
 16303 ;; This function calls:
 16304 ;;		_USBCheckStdRequest
 16305 ;;		_USBCtrlEPServiceComplete
 16306 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16307 ;; This function is called by:
 16308 ;;		_USBCtrlEPService
 16309 ;; This function uses a non-reentrant model
 16310 ;;
 16311                           
 16312                           	psect	text85
 16313  004E6E                     __ptext85:
 16314                           	opt stack 0
 16315  004E6E                     _USBCtrlTrfSetupHandler:
 16316                           	opt stack 10
 16317                           
 16318                           ; BSR set to: 0
 16319                           ;usb_device.c: 2102: shortPacketStatus = 0;
 16320                           
 16321                           ;incstack = 0
 16322  004E6E  6A2B               	clrf	_shortPacketStatus,c	;volatile
 16323                           
 16324                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 16325  004E70  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 16326                           
 16327                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 16328  004E72  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16329                           
 16330                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 16331  004E74  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16332                           
 16333                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 16334  004E76  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 16335                           
 16336                           ;usb_device.c: 2107: controlTransferState = 0;
 16337  004E78  6A21               	clrf	_controlTransferState,c	;volatile
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16341  004E7A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16342  004E7E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16343  004E82  0E7F               	movlw	127
 16344  004E84  16DF               	andwf	indf2,f,c
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16348  004E86  0E04               	movlw	4
 16349  004E88  1A0F               	xorwf	_pBDTEntryIn,f,c
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16353  004E8A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16354  004E8E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16355  004E92  0E7F               	movlw	127
 16356  004E94  16DF               	andwf	indf2,f,c
 16357                           
 16358                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16359  004E96  0E04               	movlw	4
 16360  004E98  1A0F               	xorwf	_pBDTEntryIn,f,c
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16364  004E9A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16365  004E9E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16366  004EA2  0E7F               	movlw	127
 16367  004EA4  16DF               	andwf	indf2,f,c
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 16371  004EA6  6A0C               	clrf	_inPipes+3,c	;volatile
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 16375  004EA8  6A0D               	clrf	_inPipes+4,c	;volatile
 16376  004EAA  6A0E               	clrf	_inPipes+5,c	;volatile
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 16380  004EAC  6A04               	clrf	_outPipes+3,c	;volatile
 16381                           
 16382                           ; BSR set to: 0
 16383                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 16384  004EAE  6A05               	clrf	_outPipes+4,c	;volatile
 16385  004EB0  6A06               	clrf	_outPipes+5,c	;volatile
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;usb_device.c: 2131: USBCheckStdRequest();
 16389  004EB2  EC47  F02B         	call	_USBCheckStdRequest	;wreg free
 16390                           
 16391                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16392  004EB6  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16393  004EB8  0E03               	movlw	3
 16394  004EBA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16395  004EBC  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16396  004EBE  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16397  004EC0  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16398  004EC2  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16399  004EC4  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16400                           
 16401                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 16402  004EC8  EF23  F030         	goto	_USBCtrlEPServiceComplete	;wreg free
 16403  004ECC                     __end_of_USBCtrlTrfSetupHandler:
 16404                           	opt stack 0
 16405                           pclatu	equ	0xFFB
 16406                           pclath	equ	0xFFA
 16407                           tblptru	equ	0xFF8
 16408                           tblptrh	equ	0xFF7
 16409                           tblptrl	equ	0xFF6
 16410                           tablat	equ	0xFF5
 16411                           prodh	equ	0xFF4
 16412                           prodl	equ	0xFF3
 16413                           intcon	equ	0xFF2
 16414                           postinc0	equ	0xFEE
 16415                           wreg	equ	0xFE8
 16416                           indf1	equ	0xFE7
 16417                           fsr1h	equ	0xFE2
 16418                           fsr1l	equ	0xFE1
 16419                           indf2	equ	0xFDF
 16420                           postinc2	equ	0xFDE
 16421                           postdec2	equ	0xFDD
 16422                           plusw2	equ	0xFDB
 16423                           fsr2h	equ	0xFDA
 16424                           fsr2l	equ	0xFD9
 16425                           status	equ	0xFD8
 16426                           
 16427 ;; *************** function _USBCtrlEPServiceComplete *****************
 16428 ;; Defined at:
 16429 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;		None
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;		None
 16434 ;; Return value:  Size  Location     Type
 16435 ;;                  1    wreg      void 
 16436 ;; Registers used:
 16437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16443 ;;      Params:         0       0       0       0       0       0       0       0       0
 16444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16447 ;;Total ram usage:        0 bytes
 16448 ;; Hardware stack levels used:    1
 16449 ;; Hardware stack levels required when called:    2
 16450 ;; This function calls:
 16451 ;;		_USBCtrlEPAllowDataStage
 16452 ;;		_USBCtrlEPAllowStatusStage
 16453 ;; This function is called by:
 16454 ;;		_USBCtrlTrfSetupHandler
 16455 ;; This function uses a non-reentrant model
 16456 ;;
 16457                           
 16458                           	psect	text86
 16459  006046                     __ptext86:
 16460                           	opt stack 0
 16461  006046                     _USBCtrlEPServiceComplete:
 16462                           	opt stack 14
 16463                           
 16464                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 16465                           
 16466                           ;incstack = 0
 16467  006046  9860               	bcf	3936,4,c	;volatile
 16468                           
 16469                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 16470  006048  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 16471  00604A  D037               	goto	i2l1515
 16472                           
 16473                           ;usb_device.c: 1295: {
 16474                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 16475  00604C  AE04               	btfss	_outPipes+3,7,c	;volatile
 16476  00604E  D00A               	goto	i2l6395
 16477                           
 16478                           ;usb_device.c: 1297: {
 16479                           ;usb_device.c: 1298: controlTransferState = 2;
 16480  006050  0E02               	movlw	2
 16481  006052  6E21               	movwf	_controlTransferState,c	;volatile
 16482                           
 16483                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 16484  006054  0100               	movlb	0	; () banked
 16485  006056  5190               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 16486  006058  E102               	bnz	i2l6391
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;usb_device.c: 1310: {
 16490                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 16491  00605A  EC1F  F02A         	call	_USBCtrlEPAllowDataStage	;wreg free
 16492  00605E                     i2l6391:
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;usb_device.c: 1312: }
 16496                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 16497  00605E  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16498                           
 16499                           ; BSR set to: 0
 16500                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 16501  006060  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16502                           
 16503                           ;usb_device.c: 1318: }
 16504  006062  0012               	return	
 16505  006064                     i2l6395:
 16506                           
 16507                           ;usb_device.c: 1319: else
 16508                           ;usb_device.c: 1320: {
 16509                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 16510  006064  EE20 F001          	lfsr	2,1
 16511  006068  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16512  00606A  26D9               	addwf	fsr2l,f,c
 16513  00606C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16514  00606E  22DA               	addwfc	fsr2h,f,c
 16515  006070  0E08               	movlw	8
 16516  006072  6EDF               	movwf	indf2,c
 16517                           
 16518                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16519  006074  EE20 F002          	lfsr	2,2
 16520  006078  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16521  00607A  26D9               	addwf	fsr2l,f,c
 16522  00607C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16523  00607E  22DA               	addwfc	fsr2h,f,c
 16524  006080  0E30               	movlw	48
 16525  006082  6EDE               	movwf	postinc2,c
 16526  006084  0E04               	movlw	4
 16527  006086  6EDD               	movwf	postdec2,c
 16528                           
 16529                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16530  006088  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16531  00608C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16532  006090  0E0C               	movlw	12
 16533  006092  6EDF               	movwf	indf2,c
 16534                           
 16535                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16536  006094  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16537  006098  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16538  00609C  0E00               	movlw	0
 16539  00609E  8EDB               	bsf	plusw2,7,c
 16540                           
 16541                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 16542  0060A0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16543  0060A4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16544  0060A8  0E04               	movlw	4
 16545  0060AA  6EDF               	movwf	indf2,c
 16546                           
 16547                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16548  0060AC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16549  0060B0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16550  0060B4  0E00               	movlw	0
 16551  0060B6  8EDB               	bsf	plusw2,7,c
 16552  0060B8  0C00               	retlw	0
 16553  0060BA                     i2l1515:
 16554                           
 16555                           ;usb_device.c: 1333: else
 16556                           ;usb_device.c: 1334: {
 16557                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 16558  0060BA  0104               	movlb	4	; () banked
 16559  0060BC  AF30               	btfss	48,7,b	;volatile
 16560  0060BE  D00E               	goto	i2l6415
 16561                           
 16562                           ; BSR set to: 4
 16563                           ;usb_device.c: 1336: {
 16564                           ;usb_device.c: 1337: controlTransferState = 1;
 16565  0060C0  0E01               	movlw	1
 16566  0060C2  6E21               	movwf	_controlTransferState,c	;volatile
 16567                           
 16568                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 16569  0060C4  0100               	movlb	0	; () banked
 16570  0060C6  518F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 16571  0060C8  E102               	bnz	i2l6407
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;usb_device.c: 1352: {
 16575                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 16576  0060CA  EC1F  F02A         	call	_USBCtrlEPAllowDataStage	;wreg free
 16577  0060CE                     i2l6407:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;usb_device.c: 1354: }
 16581                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 16582  0060CE  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 16586  0060D0  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 16590  0060D2  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16591  0060D4  A4D8               	btfss	status,2,c
 16592  0060D6  0012               	return	
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;usb_device.c: 1379: {
 16596                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 16597  0060D8  EF4B  F02D         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 16598  0060DC                     i2l6415:
 16599                           
 16600                           ; BSR set to: 4
 16601                           ;usb_device.c: 1383: else
 16602                           ;usb_device.c: 1384: {
 16603                           ;usb_device.c: 1395: controlTransferState = 2;
 16604  0060DC  0E02               	movlw	2
 16605  0060DE  6E21               	movwf	_controlTransferState,c	;volatile
 16606                           
 16607                           ; BSR set to: 4
 16608                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 16609  0060E0  EE20 F001          	lfsr	2,1
 16610  0060E4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16611  0060E6  26D9               	addwf	fsr2l,f,c
 16612  0060E8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16613  0060EA  22DA               	addwfc	fsr2h,f,c
 16614  0060EC  0E08               	movlw	8
 16615  0060EE  6EDF               	movwf	indf2,c
 16616                           
 16617                           ; BSR set to: 4
 16618                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16619  0060F0  EE20 F002          	lfsr	2,2
 16620  0060F4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16621  0060F6  26D9               	addwf	fsr2l,f,c
 16622  0060F8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16623  0060FA  22DA               	addwfc	fsr2h,f,c
 16624  0060FC  0E30               	movlw	48
 16625  0060FE  6EDE               	movwf	postinc2,c
 16626  006100  0E04               	movlw	4
 16627  006102  6EDD               	movwf	postdec2,c
 16628                           
 16629                           ; BSR set to: 4
 16630                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16631  006104  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16632  006108  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16633  00610C  6EDF               	movwf	indf2,c
 16634                           
 16635                           ; BSR set to: 4
 16636                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16637  00610E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16638  006112  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16639  006116  0E00               	movlw	0
 16640  006118  8EDB               	bsf	plusw2,7,c
 16641                           
 16642                           ; BSR set to: 4
 16643                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 16644  00611A  0100               	movlb	0	; () banked
 16645  00611C  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 16649  00611E  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 16653  006120  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16654  006122  E102 EF4B  F02D    	bz	_USBCtrlEPAllowStatusStage
 16655  006128  0012               	return	
 16656  00612A                     __end_of_USBCtrlEPServiceComplete:
 16657                           	opt stack 0
 16658                           pclatu	equ	0xFFB
 16659                           pclath	equ	0xFFA
 16660                           tblptru	equ	0xFF8
 16661                           tblptrh	equ	0xFF7
 16662                           tblptrl	equ	0xFF6
 16663                           tablat	equ	0xFF5
 16664                           prodh	equ	0xFF4
 16665                           prodl	equ	0xFF3
 16666                           intcon	equ	0xFF2
 16667                           postinc0	equ	0xFEE
 16668                           wreg	equ	0xFE8
 16669                           indf1	equ	0xFE7
 16670                           fsr1h	equ	0xFE2
 16671                           fsr1l	equ	0xFE1
 16672                           indf2	equ	0xFDF
 16673                           postinc2	equ	0xFDE
 16674                           postdec2	equ	0xFDD
 16675                           plusw2	equ	0xFDB
 16676                           fsr2h	equ	0xFDA
 16677                           fsr2l	equ	0xFD9
 16678                           status	equ	0xFD8
 16679                           
 16680 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16681 ;; Defined at:
 16682 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;		None
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;		None
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      void 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : F/0
 16693 ;;		On exit  : F/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16696 ;;      Params:         0       0       0       0       0       0       0       0       0
 16697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16700 ;;Total ram usage:        0 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:    1
 16703 ;; This function calls:
 16704 ;;		_USBCtrlTrfTxService
 16705 ;; This function is called by:
 16706 ;;		_USBCtrlEPServiceComplete
 16707 ;; This function uses a non-reentrant model
 16708 ;;
 16709                           
 16710                           	psect	text87
 16711  00543E                     __ptext87:
 16712                           	opt stack 0
 16713  00543E                     _USBCtrlEPAllowDataStage:
 16714                           	opt stack 14
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 16718                           
 16719                           ;incstack = 0
 16720  00543E  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16721                           
 16722                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 16723  005440  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;usb_device.c: 1178: if(controlTransferState == 2)
 16727  005442  0E02               	movlw	2
 16728  005444  1821               	xorwf	_controlTransferState,w,c	;volatile
 16729  005446  E11F               	bnz	i2l6055
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;usb_device.c: 1179: {
 16733                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 16734  005448  EE20 F001          	lfsr	2,1
 16735  00544C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16736  00544E  26D9               	addwf	fsr2l,f,c
 16737  005450  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16738  005452  22DA               	addwfc	fsr2h,f,c
 16739  005454  0E08               	movlw	8
 16740  005456  6EDF               	movwf	indf2,c
 16741                           
 16742                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16743  005458  EE20 F002          	lfsr	2,2
 16744  00545C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16745  00545E  26D9               	addwf	fsr2l,f,c
 16746  005460  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16747  005462  22DA               	addwfc	fsr2h,f,c
 16748  005464  0E38               	movlw	56
 16749  005466  6EDE               	movwf	postinc2,c
 16750  005468  0E04               	movlw	4
 16751  00546A  6EDD               	movwf	postdec2,c
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16755  00546C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16756  005470  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16757  005474  0E48               	movlw	72
 16758  005476  6EDF               	movwf	indf2,c
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16762  005478  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16763  00547C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16764  005480  0E00               	movlw	0
 16765  005482  8EDB               	bsf	plusw2,7,c
 16766                           
 16767                           ;usb_device.c: 1185: }
 16768  005484  0C00               	retlw	0
 16769  005486                     i2l6055:
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;usb_device.c: 1186: else
 16773                           ;usb_device.c: 1187: {
 16774                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16775  005486  500D               	movf	_inPipes+4,w,c	;volatile
 16776  005488  0104               	movlb	4	; () banked
 16777  00548A  5D36               	subwf	54,w,b	;volatile
 16778  00548C  500E               	movf	_inPipes+5,w,c	;volatile
 16779  00548E  5937               	subwfb	55,w,b	;volatile
 16780  005490  E204               	bc	i2l6059
 16781                           
 16782                           ; BSR set to: 4
 16783                           ;usb_device.c: 1191: {
 16784                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 16785  005492  C436 F00D          	movff	1078,_inPipes+4	;volatile
 16786  005496  C437 F00E          	movff	1079,_inPipes+5	;volatile
 16787  00549A                     i2l6059:
 16788                           
 16789                           ; BSR set to: 4
 16790                           ;usb_device.c: 1193: }
 16791                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 16792  00549A  ECA9  F02D         	call	_USBCtrlTrfTxService	;wreg free
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16796  00549E  EE20 F002          	lfsr	2,2
 16797  0054A2  500F               	movf	_pBDTEntryIn,w,c
 16798  0054A4  26D9               	addwf	fsr2l,f,c
 16799  0054A6  5010               	movf	_pBDTEntryIn+1,w,c
 16800  0054A8  22DA               	addwfc	fsr2h,f,c
 16801  0054AA  0E38               	movlw	56
 16802  0054AC  6EDE               	movwf	postinc2,c
 16803  0054AE  0E04               	movlw	4
 16804  0054B0  6EDD               	movwf	postdec2,c
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16808  0054B2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16809  0054B6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16810  0054BA  0E48               	movlw	72
 16811  0054BC  6EDF               	movwf	indf2,c
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16815  0054BE  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16816  0054C2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16817  0054C6  0E00               	movlw	0
 16818  0054C8  8EDB               	bsf	plusw2,7,c
 16819                           
 16820                           ; BSR set to: 0
 16821  0054CA  0C00               	retlw	0	;funcret
 16822  0054CC                     __end_of_USBCtrlEPAllowDataStage:
 16823                           	opt stack 0
 16824                           pclatu	equ	0xFFB
 16825                           pclath	equ	0xFFA
 16826                           tblptru	equ	0xFF8
 16827                           tblptrh	equ	0xFF7
 16828                           tblptrl	equ	0xFF6
 16829                           tablat	equ	0xFF5
 16830                           prodh	equ	0xFF4
 16831                           prodl	equ	0xFF3
 16832                           intcon	equ	0xFF2
 16833                           postinc0	equ	0xFEE
 16834                           wreg	equ	0xFE8
 16835                           indf1	equ	0xFE7
 16836                           fsr1h	equ	0xFE2
 16837                           fsr1l	equ	0xFE1
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _USBCheckStdRequest *****************
 16847 ;; Defined at:
 16848 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;		None
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16857 ;; Tracked objects:
 16858 ;;		On entry : F/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0
 16863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16864 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16865 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16866 ;;Total ram usage:        1 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    6
 16869 ;; This function calls:
 16870 ;;		_USBStdFeatureReqHandler
 16871 ;;		_USBStdGetDscHandler
 16872 ;;		_USBStdGetStatusHandler
 16873 ;;		_USBStdSetCfgHandler
 16874 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16875 ;; This function is called by:
 16876 ;;		_USBCtrlTrfSetupHandler
 16877 ;; This function uses a non-reentrant model
 16878 ;;
 16879                           
 16880                           	psect	text88
 16881  00568E                     __ptext88:
 16882                           	opt stack 0
 16883  00568E                     _USBCheckStdRequest:
 16884                           	opt stack 10
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 16888                           
 16889                           ; BSR set to: 0
 16890                           ;incstack = 0
 16891  00568E  0104               	movlb	4	; () banked
 16892  005690  3930               	swapf	48,w,b	;volatile
 16893  005692  32E8               	rrcf	wreg,f,c
 16894  005694  0B03               	andlw	3
 16895  005696  E02A               	bz	i2l6517
 16896  005698  0012               	return	
 16897  00569A                     i2l1642:
 16898                           
 16899                           ; BSR set to: 4
 16900                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 16901  00569A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16902                           
 16903                           ; BSR set to: 4
 16904                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 16905  00569C  0E08               	movlw	8
 16906  00569E  0100               	movlb	0	; () banked
 16907  0056A0  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 16908                           
 16909                           ;usb_device.c: 2327: break;
 16910  0056A2  0C08               	retlw	8
 16911  0056A4                     i2l6491:
 16912                           
 16913                           ; BSR set to: 4
 16914                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16915  0056A4  0E2C               	movlw	low _USBActiveConfiguration
 16916  0056A6  6E09               	movwf	_inPipes,c	;volatile
 16917  0056A8  6A0A               	clrf	_inPipes+1,c	;volatile
 16918                           
 16919                           ; BSR set to: 4
 16920                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16921  0056AA  800C               	bsf	_inPipes+3,0,c	;volatile
 16922                           
 16923                           ; BSR set to: 4
 16924                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 16925  0056AC  0E01               	movlw	1
 16926  0056AE  6E0D               	movwf	_inPipes+4,c	;volatile
 16927                           
 16928                           ; BSR set to: 4
 16929                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 16930  0056B0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16931                           
 16932                           ;usb_device.c: 2339: break;
 16933  0056B2  0C01               	retlw	1
 16934  0056B4                     i2l6503:
 16935                           
 16936                           ; BSR set to: 4
 16937                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16938  0056B4  5134               	movf	52,w,b	;volatile
 16939  0056B6  0FBE               	addlw	low _USBAlternateInterface
 16940  0056B8  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 16941  0056BA  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 16942  0056BE  6A0A               	clrf	_inPipes+1,c	;volatile
 16943                           
 16944                           ; BSR set to: 4
 16945                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16946  0056C0  800C               	bsf	_inPipes+3,0,c	;volatile
 16947                           
 16948                           ; BSR set to: 4
 16949                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 16950  0056C2  0E01               	movlw	1
 16951  0056C4  6E0D               	movwf	_inPipes+4,c	;volatile
 16952                           
 16953                           ; BSR set to: 4
 16954                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 16955  0056C6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16956                           
 16957                           ;usb_device.c: 2352: break;
 16958  0056C8  0C01               	retlw	1
 16959  0056CA                     i2l1651:
 16960                           
 16961                           ; BSR set to: 4
 16962                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 16963  0056CA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16964                           
 16965                           ; BSR set to: 4
 16966                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16967  0056CC  5134               	movf	52,w,b	;volatile
 16968  0056CE  0FBE               	addlw	low _USBAlternateInterface
 16969  0056D0  6ED9               	movwf	fsr2l,c
 16970  0056D2  6ADA               	clrf	fsr2h,c
 16971  0056D4  C432 FFDF          	movff	1074,indf2	;volatile
 16972                           
 16973                           ;usb_device.c: 2356: break;
 16974  0056D8  0012               	return	
 16975  0056DA                     i2l6513:
 16976                           
 16977                           ; BSR set to: 4
 16978                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16979  0056DA  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16980  0056DC  0E02               	movlw	2
 16981  0056DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16982  0056E0  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16983  0056E2  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16984  0056E4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16985  0056E6  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16986  0056E8  EF7A  F025         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16987  0056EC                     i2l6517:
 16988                           
 16989                           ; BSR set to: 4
 16990  0056EC  5131               	movf	49,w,b	;volatile
 16991                           
 16992                           ; Switch size 1, requested type "speed"
 16993                           ; Number of cases is 11, Range of values is 0 to 12
 16994                           ; switch strategies available:
 16995                           ; Name         Instructions Cycles
 16996                           ; simple_byte           34    18 (average)
 16997                           ;	Chosen strategy is simple_byte
 16998  0056EE  E102 EF16  F029    	bz	_USBStdGetStatusHandler
 16999  0056F4  0A01               	xorlw	1	; case 1
 17000  0056F6  E102 EF3D  F035    	bz	_USBStdFeatureReqHandler
 17001  0056FC  0A02               	xorlw	2	; case 3
 17002  0056FE  E102 EF3D  F035    	bz	_USBStdFeatureReqHandler
 17003  005704  0A06               	xorlw	6	; case 5
 17004  005706  E0C9               	bz	i2l1642
 17005  005708  0A03               	xorlw	3	; case 6
 17006  00570A  E102 EF0E  F032    	bz	_USBStdGetDscHandler
 17007  005710  0A01               	xorlw	1	; case 7
 17008  005712  E0E3               	bz	i2l6513
 17009  005714  0A0F               	xorlw	15	; case 8
 17010  005716  E0C6               	bz	i2l6491
 17011  005718  0A01               	xorlw	1	; case 9
 17012  00571A  E102 EFE6  F02B    	bz	_USBStdSetCfgHandler
 17013  005720  0A03               	xorlw	3	; case 10
 17014  005722  E0C8               	bz	i2l6503
 17015  005724  0A01               	xorlw	1	; case 11
 17016  005726  E0D1               	bz	i2l1651
 17017  005728  0A07               	xorlw	7	; case 12
 17018  00572A  0012               	return	
 17019  00572C                     __end_of_USBCheckStdRequest:
 17020                           	opt stack 0
 17021                           pclatu	equ	0xFFB
 17022                           pclath	equ	0xFFA
 17023                           tblptru	equ	0xFF8
 17024                           tblptrh	equ	0xFF7
 17025                           tblptrl	equ	0xFF6
 17026                           tablat	equ	0xFF5
 17027                           prodh	equ	0xFF4
 17028                           prodl	equ	0xFF3
 17029                           intcon	equ	0xFF2
 17030                           postinc0	equ	0xFEE
 17031                           wreg	equ	0xFE8
 17032                           indf1	equ	0xFE7
 17033                           fsr1h	equ	0xFE2
 17034                           fsr1l	equ	0xFE1
 17035                           indf2	equ	0xFDF
 17036                           postinc2	equ	0xFDE
 17037                           postdec2	equ	0xFDD
 17038                           plusw2	equ	0xFDB
 17039                           fsr2h	equ	0xFDA
 17040                           fsr2l	equ	0xFD9
 17041                           status	equ	0xFD8
 17042                           
 17043 ;; *************** function _USBStdSetCfgHandler *****************
 17044 ;; Defined at:
 17045 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;		None
 17048 ;; Auto vars:     Size  Location     Type
 17049 ;;  i               1   21[COMRAM] unsigned char 
 17050 ;; Return value:  Size  Location     Type
 17051 ;;                  1    wreg      void 
 17052 ;; Registers used:
 17053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17054 ;; Tracked objects:
 17055 ;;		On entry : B/4
 17056 ;;		On exit  : F/0
 17057 ;;		Unchanged: 0/0
 17058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17059 ;;      Params:         0       0       0       0       0       0       0       0       0
 17060 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17061 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17062 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17063 ;;Total ram usage:        1 bytes
 17064 ;; Hardware stack levels used:    1
 17065 ;; Hardware stack levels required when called:    5
 17066 ;; This function calls:
 17067 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17068 ;;		i2_memset
 17069 ;; This function is called by:
 17070 ;;		_USBCheckStdRequest
 17071 ;; This function uses a non-reentrant model
 17072 ;;
 17073                           
 17074                           	psect	text89
 17075  0057CC                     __ptext89:
 17076                           	opt stack 0
 17077  0057CC                     _USBStdSetCfgHandler:
 17078                           	opt stack 10
 17079                           
 17080                           ;usb_device.c: 1631: uint8_t i;
 17081                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 17082                           
 17083                           ;incstack = 0
 17084  0057CC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17085                           
 17086                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 17087  0057CE  0E6B               	movlw	107
 17088  0057D0  6E2E               	movwf	i2memset@p1,c
 17089  0057D2  0E0F               	movlw	15
 17090  0057D4  6E2F               	movwf	i2memset@p1+1,c
 17091  0057D6  6A31               	clrf	i2memset@c+1,c
 17092  0057D8  6A30               	clrf	i2memset@c,c
 17093  0057DA  6A33               	clrf	i2memset@n+1,c
 17094  0057DC  0E02               	movlw	2
 17095  0057DE  6E32               	movwf	i2memset@n,c
 17096  0057E0  ECC3  F023         	call	i2_memset	;wreg free
 17097                           
 17098                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 17099  0057E4  6A2E               	clrf	i2memset@p1,c
 17100  0057E6  0E04               	movlw	4
 17101  0057E8  6E2F               	movwf	i2memset@p1+1,c
 17102  0057EA  6A31               	clrf	i2memset@c+1,c
 17103  0057EC  6A30               	clrf	i2memset@c,c
 17104  0057EE  6A33               	clrf	i2memset@n+1,c
 17105  0057F0  0E30               	movlw	48
 17106  0057F2  6E32               	movwf	i2memset@n,c
 17107  0057F4  ECC3  F023         	call	i2_memset	;wreg free
 17108                           
 17109                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 17110  0057F8  8C60               	bsf	3936,6,c	;volatile
 17111                           
 17112                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 17113  0057FA  6A43               	clrf	USBStdSetCfgHandler@i,c
 17114  0057FC                     i2l6079:
 17115                           
 17116                           ;usb_device.c: 1649: {
 17117                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 17118  0057FC  5043               	movf	USBStdSetCfgHandler@i,w,c
 17119  0057FE  0F6A               	addlw	low _ep_data_in
 17120  005800  6ED9               	movwf	fsr2l,c
 17121  005802  6ADA               	clrf	fsr2h,c
 17122  005804  6ADF               	clrf	indf2,c
 17123                           
 17124                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 17125  005806  5043               	movf	USBStdSetCfgHandler@i,w,c
 17126  005808  0F6D               	addlw	low _ep_data_out
 17127  00580A  6ED9               	movwf	fsr2l,c
 17128  00580C  6ADA               	clrf	fsr2h,c
 17129  00580E  6ADF               	clrf	indf2,c
 17130  005810  2A43               	incf	USBStdSetCfgHandler@i,f,c
 17131  005812  0E02               	movlw	2
 17132  005814  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 17133  005816  D7F2               	goto	i2l6079
 17134                           
 17135                           ;usb_device.c: 1652: }
 17136                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 17137  005818  0EBE               	movlw	low _USBAlternateInterface
 17138  00581A  6E2E               	movwf	i2memset@p1,c
 17139  00581C  6A2F               	clrf	i2memset@p1+1,c
 17140  00581E  6A31               	clrf	i2memset@c+1,c
 17141  005820  6A30               	clrf	i2memset@c,c
 17142  005822  6A33               	clrf	i2memset@n+1,c
 17143  005824  0E02               	movlw	2
 17144  005826  6E32               	movwf	i2memset@n,c
 17145  005828  ECC3  F023         	call	i2_memset	;wreg free
 17146                           
 17147                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 17148  00582C  9C60               	bcf	3936,6,c	;volatile
 17149                           
 17150                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17151  00582E  0E08               	movlw	8
 17152  005830  6E0F               	movwf	_pBDTEntryIn,c
 17153  005832  0E04               	movlw	4
 17154  005834  6E10               	movwf	_pBDTEntryIn+1,c
 17155                           
 17156                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17157  005836  0E00               	movlw	0
 17158  005838  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 17159  00583A  0E04               	movlw	4
 17160  00583C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17161                           
 17162                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17163  00583E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17164  005842  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17165                           
 17166                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17167  005846  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 17168                           
 17169                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 17170  00584A  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17171  00584C  E104               	bnz	i2l6101
 17172                           
 17173                           ;usb_device.c: 1671: {
 17174                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 17175  00584E  0E10               	movlw	16
 17176  005850  0100               	movlb	0	; () banked
 17177  005852  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17178                           
 17179                           ;usb_device.c: 1674: }
 17180  005854  0C10               	retlw	16
 17181  005856                     i2l6101:
 17182                           
 17183                           ;usb_device.c: 1675: else
 17184                           ;usb_device.c: 1676: {
 17185                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17186  005856  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17187  005858  0E01               	movlw	1
 17188  00585A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17189  00585C  0E2C               	movlw	low _USBActiveConfiguration
 17190  00585E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17191  005860  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17192  005862  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17193  005864  0E01               	movlw	1
 17194  005866  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17195  005868  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17196                           
 17197                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 17198  00586C  0E20               	movlw	32
 17199  00586E  0100               	movlb	0	; () banked
 17200  005870  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17201                           
 17202                           ; BSR set to: 0
 17203  005872  0C20               	retlw	32	;funcret
 17204  005874                     __end_of_USBStdSetCfgHandler:
 17205                           	opt stack 0
 17206                           pclatu	equ	0xFFB
 17207                           pclath	equ	0xFFA
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           prodh	equ	0xFF4
 17213                           prodl	equ	0xFF3
 17214                           intcon	equ	0xFF2
 17215                           postinc0	equ	0xFEE
 17216                           wreg	equ	0xFE8
 17217                           indf1	equ	0xFE7
 17218                           fsr1h	equ	0xFE2
 17219                           fsr1l	equ	0xFE1
 17220                           indf2	equ	0xFDF
 17221                           postinc2	equ	0xFDE
 17222                           postdec2	equ	0xFDD
 17223                           plusw2	equ	0xFDB
 17224                           fsr2h	equ	0xFDA
 17225                           fsr2l	equ	0xFD9
 17226                           status	equ	0xFD8
 17227                           
 17228 ;; *************** function i2_memset *****************
 17229 ;; Defined at:
 17230 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;  p1              2    0[COMRAM] PTR void 
 17233 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17234 ;;  c               2    2[COMRAM] int 
 17235 ;;  n               2    4[COMRAM] unsigned int 
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17238 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17239 ;; Return value:  Size  Location     Type
 17240 ;;                  2    0[COMRAM] PTR void 
 17241 ;; Registers used:
 17242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17243 ;; Tracked objects:
 17244 ;;		On entry : 0/0
 17245 ;;		On exit  : 0/0
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17248 ;;      Params:         6       0       0       0       0       0       0       0       0
 17249 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17251 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17252 ;;Total ram usage:        8 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; This function calls:
 17255 ;;		Nothing
 17256 ;; This function is called by:
 17257 ;;		_USBStdSetCfgHandler
 17258 ;;		i2_USBDeviceInit
 17259 ;; This function uses a non-reentrant model
 17260 ;;
 17261                           
 17262                           	psect	text90
 17263  004786                     __ptext90:
 17264                           	opt stack 0
 17265  004786                     i2_memset:
 17266                           	opt stack 17
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;incstack = 0
 17270  004786  C02E  F034         	movff	i2memset@p1,i2memset@p
 17271  00478A  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17272  00478E  D008               	goto	i2l5883
 17273  004790                     i2l5879:
 17274  004790  C034  FFD9         	movff	i2memset@p,fsr2l
 17275  004794  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17276  004798  C030  FFDF         	movff	i2memset@c,indf2
 17277  00479C  4A34               	infsnz	i2memset@p,f,c
 17278  00479E  2A35               	incf	i2memset@p+1,f,c
 17279  0047A0                     i2l5883:
 17280  0047A0  0632               	decf	i2memset@n,f,c
 17281  0047A2  A0D8               	btfss	status,0,c
 17282  0047A4  0633               	decf	i2memset@n+1,f,c
 17283  0047A6  2832               	incf	i2memset@n,w,c
 17284  0047A8  E1F3               	bnz	i2l5879
 17285  0047AA  2833               	incf	i2memset@n+1,w,c
 17286  0047AC  E1F1               	bnz	i2l5879
 17287  0047AE  0012               	return		;funcret
 17288  0047B0                     __end_ofi2_memset:
 17289                           	opt stack 0
 17290                           pclatu	equ	0xFFB
 17291                           pclath	equ	0xFFA
 17292                           tblptru	equ	0xFF8
 17293                           tblptrh	equ	0xFF7
 17294                           tblptrl	equ	0xFF6
 17295                           tablat	equ	0xFF5
 17296                           prodh	equ	0xFF4
 17297                           prodl	equ	0xFF3
 17298                           intcon	equ	0xFF2
 17299                           postinc0	equ	0xFEE
 17300                           wreg	equ	0xFE8
 17301                           indf1	equ	0xFE7
 17302                           fsr1h	equ	0xFE2
 17303                           fsr1l	equ	0xFE1
 17304                           indf2	equ	0xFDF
 17305                           postinc2	equ	0xFDE
 17306                           postdec2	equ	0xFDD
 17307                           plusw2	equ	0xFDB
 17308                           fsr2h	equ	0xFDA
 17309                           fsr2l	equ	0xFD9
 17310                           status	equ	0xFD8
 17311                           
 17312 ;; *************** function _USBStdGetStatusHandler *****************
 17313 ;; Defined at:
 17314 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;		None
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;  p               2    0[COMRAM] PTR struct __BDT
 17319 ;;		 -> BDT(48), NULL(0), 
 17320 ;; Return value:  Size  Location     Type
 17321 ;;                  1    wreg      void 
 17322 ;; Registers used:
 17323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17324 ;; Tracked objects:
 17325 ;;		On entry : B/4
 17326 ;;		On exit  : F/4
 17327 ;;		Unchanged: 0/0
 17328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17329 ;;      Params:         0       0       0       0       0       0       0       0       0
 17330 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17332 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17333 ;;Total ram usage:        2 bytes
 17334 ;; Hardware stack levels used:    1
 17335 ;; This function calls:
 17336 ;;		Nothing
 17337 ;; This function is called by:
 17338 ;;		_USBCheckStdRequest
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           	psect	text91
 17343  00522C                     __ptext91:
 17344                           	opt stack 0
 17345  00522C                     _USBStdGetStatusHandler:
 17346                           	opt stack 15
 17347                           
 17348                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 17349                           
 17350                           ;incstack = 0
 17351  00522C  0104               	movlb	4	; () banked
 17352  00522E  6B38               	clrf	56,b	;volatile
 17353                           
 17354                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 17355  005230  6B39               	clrf	57,b	;volatile
 17356                           
 17357                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 17358  005232  D02A               	goto	i2l6151
 17359  005234                     i2l1578:
 17360                           
 17361                           ; BSR set to: 4
 17362                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 17363  005234  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17364                           
 17365                           ; BSR set to: 4
 17366                           ;usb_device.c: 1789: }
 17367                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 17368                           
 17369                           ;usb_device.c: 1786: if(0 == 1)
 17370  005236  041D               	decf	_RemoteWakeup,w,c	;volatile
 17371  005238  E12E               	bnz	i2l1581
 17372                           
 17373                           ; BSR set to: 4
 17374                           ;usb_device.c: 1792: {
 17375                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 17376  00523A  8338               	bsf	56,1,b	;volatile
 17377  00523C  D02C               	goto	i2l1581
 17378  00523E                     i2l1582:
 17379                           
 17380                           ; BSR set to: 4
 17381                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 17382  00523E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17383                           
 17384                           ;usb_device.c: 1798: break;
 17385  005240  D02A               	goto	i2l1581
 17386  005242                     i2l1583:
 17387                           
 17388                           ; BSR set to: 4
 17389                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 17390  005242  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17391                           
 17392                           ;usb_device.c: 1804: {
 17393                           ;usb_device.c: 1805: BDT_ENTRY *p;
 17394                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 17395  005244  BF34               	btfsc	52,7,b	;volatile
 17396  005246  D006               	goto	i2l6141
 17397                           
 17398                           ; BSR set to: 4
 17399                           ;usb_device.c: 1808: {
 17400                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17401  005248  5134               	movf	52,w,b	;volatile
 17402  00524A  0B0F               	andlw	15
 17403  00524C  0D02               	mullw	2
 17404  00524E  50F3               	movf	prodl,w,c
 17405  005250  0F60               	addlw	low _pBDTEntryOut
 17406  005252  D005               	goto	L22
 17407  005254                     i2l6141:
 17408                           
 17409                           ; BSR set to: 4
 17410                           ;usb_device.c: 1811: else
 17411                           ;usb_device.c: 1812: {
 17412                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17413  005254  5134               	movf	52,w,b	;volatile
 17414  005256  0B0F               	andlw	15
 17415  005258  0D02               	mullw	2
 17416  00525A  50F3               	movf	prodl,w,c
 17417  00525C  0F0F               	addlw	low _pBDTEntryIn
 17418  00525E                     L22:
 17419  00525E  6ED9               	movwf	fsr2l,c
 17420  005260  6ADA               	clrf	fsr2h,c
 17421  005262  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 17422  005266  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 17423                           
 17424                           ; BSR set to: 4
 17425                           ;usb_device.c: 1814: }
 17426                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17427  00526A  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17428  00526E  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17429  005272  AEDF               	btfss	indf2,7,c
 17430  005274  D010               	goto	i2l1581
 17431                           
 17432                           ; BSR set to: 4
 17433  005276  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17434  00527A  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17435  00527E  A4DF               	btfss	indf2,2,c
 17436  005280  D00A               	goto	i2l1581
 17437                           
 17438                           ; BSR set to: 4
 17439                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 17440  005282  0E01               	movlw	1
 17441  005284  6F38               	movwf	56,b	;volatile
 17442  005286  D007               	goto	i2l1581
 17443  005288                     i2l6151:
 17444                           
 17445                           ; BSR set to: 4
 17446  005288  5130               	movf	48,w,b	;volatile
 17447  00528A  0B1F               	andlw	31
 17448                           
 17449                           ; Switch size 1, requested type "speed"
 17450                           ; Number of cases is 3, Range of values is 0 to 2
 17451                           ; switch strategies available:
 17452                           ; Name         Instructions Cycles
 17453                           ; simple_byte           10     6 (average)
 17454                           ;	Chosen strategy is simple_byte
 17455  00528C  E0D3               	bz	i2l1578
 17456  00528E  0A01               	xorlw	1	; case 1
 17457  005290  E0D6               	bz	i2l1582
 17458  005292  0A03               	xorlw	3	; case 2
 17459  005294  E0D6               	bz	i2l1583
 17460  005296                     i2l1581:
 17461                           
 17462                           ; BSR set to: 4
 17463                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 17464  005296  AE0C               	btfss	_inPipes+3,7,c	;volatile
 17465  005298  0012               	return	
 17466                           
 17467                           ; BSR set to: 4
 17468                           ;usb_device.c: 1823: {
 17469                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17470  00529A  0E38               	movlw	56
 17471  00529C  6E09               	movwf	_inPipes,c	;volatile
 17472  00529E  0E04               	movlw	4
 17473  0052A0  6E0A               	movwf	_inPipes+1,c	;volatile
 17474                           
 17475                           ; BSR set to: 4
 17476                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17477  0052A2  800C               	bsf	_inPipes+3,0,c	;volatile
 17478                           
 17479                           ; BSR set to: 4
 17480                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 17481  0052A4  0E02               	movlw	2
 17482  0052A6  6E0D               	movwf	_inPipes+4,c	;volatile
 17483                           
 17484                           ; BSR set to: 4
 17485  0052A8  0C02               	retlw	2	;funcret
 17486  0052AA                     __end_of_USBStdGetStatusHandler:
 17487                           	opt stack 0
 17488                           pclatu	equ	0xFFB
 17489                           pclath	equ	0xFFA
 17490                           tblptru	equ	0xFF8
 17491                           tblptrh	equ	0xFF7
 17492                           tblptrl	equ	0xFF6
 17493                           tablat	equ	0xFF5
 17494                           prodh	equ	0xFF4
 17495                           prodl	equ	0xFF3
 17496                           intcon	equ	0xFF2
 17497                           postinc0	equ	0xFEE
 17498                           wreg	equ	0xFE8
 17499                           indf1	equ	0xFE7
 17500                           fsr1h	equ	0xFE2
 17501                           fsr1l	equ	0xFE1
 17502                           indf2	equ	0xFDF
 17503                           postinc2	equ	0xFDE
 17504                           postdec2	equ	0xFDD
 17505                           plusw2	equ	0xFDB
 17506                           fsr2h	equ	0xFDA
 17507                           fsr2l	equ	0xFD9
 17508                           status	equ	0xFD8
 17509                           
 17510 ;; *************** function _USBStdGetDscHandler *****************
 17511 ;; Defined at:
 17512 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;		None
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;		None
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  1    wreg      void 
 17519 ;; Registers used:
 17520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17521 ;; Tracked objects:
 17522 ;;		On entry : B/4
 17523 ;;		On exit  : 0/0
 17524 ;;		Unchanged: 0/0
 17525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17526 ;;      Params:         0       0       0       0       0       0       0       0       0
 17527 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17528 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17529 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17530 ;;Total ram usage:        2 bytes
 17531 ;; Hardware stack levels used:    1
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_USBCheckStdRequest
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text92
 17540  00641C                     __ptext92:
 17541                           	opt stack 0
 17542  00641C                     _USBStdGetDscHandler:
 17543                           	opt stack 15
 17544                           
 17545                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 17546                           
 17547                           ; BSR set to: 4
 17548                           ;incstack = 0
 17549  00641C  0E80               	movlw	128
 17550  00641E  0104               	movlb	4	; () banked
 17551  006420  1930               	xorwf	48,w,b	;volatile
 17552  006422  A4D8               	btfss	status,2,c
 17553  006424  0012               	return	
 17554                           
 17555                           ; BSR set to: 4
 17556                           ;usb_device.c: 1707: {
 17557                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17558  006426  0EC0               	movlw	192
 17559  006428  6E0C               	movwf	_inPipes+3,c	;volatile
 17560                           
 17561                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 17562  00642A  D071               	goto	i2l6129
 17563  00642C                     i2l6109:
 17564                           
 17565                           ; BSR set to: 4
 17566                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17567  00642C  0E6A               	movlw	low _device_dsc
 17568  00642E  6E09               	movwf	_inPipes,c	;volatile
 17569  006430  0E7B               	movlw	high _device_dsc
 17570  006432  6E0A               	movwf	_inPipes+1,c	;volatile
 17571                           
 17572                           ; BSR set to: 4
 17573                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 17574  006434  6A0E               	clrf	_inPipes+5,c	;volatile
 17575  006436  0E12               	movlw	18
 17576  006438  6E0D               	movwf	_inPipes+4,c	;volatile
 17577                           
 17578                           ;usb_device.c: 1715: break;
 17579  00643A  0C12               	retlw	18
 17580  00643C                     i2l6113:
 17581                           
 17582                           ; BSR set to: 4
 17583                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 17584  00643C  5132               	movf	50,w,b	;volatile
 17585  00643E  E13D               	bnz	i2l1568
 17586                           
 17587                           ; BSR set to: 4
 17588                           ;usb_device.c: 1721: {
 17589                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17590  006440  5132               	movf	50,w,b	;volatile
 17591  006442  0D02               	mullw	2
 17592  006444  0EBD               	movlw	low _USB_CD_Ptr
 17593  006446  24F3               	addwf	prodl,w,c
 17594  006448  6EF6               	movwf	tblptrl,c
 17595  00644A  0E77               	movlw	high _USB_CD_Ptr
 17596  00644C  20F4               	addwfc	prodh,w,c
 17597  00644E  6EF7               	movwf	tblptrh,c
 17598  006450                     	if	0	;There are less than 3 active tblptr bytes
 17599  006450                     	endif
 17600  006450  0009               	tblrd		*+
 17601  006452  CFF5 F009          	movff	tablat,_inPipes	;volatile
 17602  006456  000A               	tblrd		*-
 17603  006458  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 17604                           
 17605                           ; BSR set to: 4
 17606                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17607  00645C  0E02               	movlw	2
 17608  00645E  2409               	addwf	_inPipes,w,c	;volatile
 17609  006460  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17610  006462  0E00               	movlw	0
 17611  006464  200A               	addwfc	_inPipes+1,w,c	;volatile
 17612  006466  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17613  006468  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17614  00646C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17615  006470  6AF8               	clrf	tblptru,c
 17616  006472  0E07               	movlw	(high __ramtop+-1)
 17617  006474  64F7               	cpfsgt	tblptrh,c
 17618  006476  D003               	bra	i2u380_47
 17619  006478  0008               	tblrd		*
 17620  00647A  50F5               	movf	tablat,w,c
 17621  00647C  D005               	bra	i2u380_40
 17622  00647E                     i2u380_47:
 17623  00647E  CFF6 FFE1          	movff	tblptrl,fsr1l
 17624  006482  CFF7 FFE2          	movff	tblptrh,fsr1h
 17625  006486  50E7               	movf	indf1,w,c
 17626  006488                     i2u380_40:
 17627  006488  6E0D               	movwf	_inPipes+4,c	;volatile
 17628                           
 17629                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17630  00648A  0E03               	movlw	3
 17631  00648C  2409               	addwf	_inPipes,w,c	;volatile
 17632  00648E  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17633  006490  0E00               	movlw	0
 17634  006492  200A               	addwfc	_inPipes+1,w,c	;volatile
 17635  006494  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17636  006496  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17637  00649A  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17638  00649E  6AF8               	clrf	tblptru,c
 17639  0064A0  0E07               	movlw	(high __ramtop+-1)
 17640  0064A2  64F7               	cpfsgt	tblptrh,c
 17641  0064A4  D003               	bra	i2u381_47
 17642  0064A6  0008               	tblrd		*
 17643  0064A8  50F5               	movf	tablat,w,c
 17644  0064AA  D005               	bra	i2u381_40
 17645  0064AC                     i2u381_47:
 17646  0064AC  CFF6 FFE1          	movff	tblptrl,fsr1l
 17647  0064B0  CFF7 FFE2          	movff	tblptrh,fsr1h
 17648  0064B4  50E7               	movf	indf1,w,c
 17649  0064B6                     i2u381_40:
 17650  0064B6  6E0E               	movwf	_inPipes+5,c	;volatile
 17651                           
 17652                           ;usb_device.c: 1729: }
 17653  0064B8  0012               	return	
 17654  0064BA                     i2l1568:
 17655                           
 17656                           ; BSR set to: 4
 17657                           ;usb_device.c: 1730: else
 17658                           ;usb_device.c: 1731: {
 17659                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 17660  0064BA  6A0C               	clrf	_inPipes+3,c	;volatile
 17661  0064BC  0012               	return	
 17662  0064BE                     i2l6121:
 17663                           
 17664                           ; BSR set to: 4
 17665                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 17666  0064BE  0E03               	movlw	3
 17667  0064C0  6132               	cpfslt	50,b	;volatile
 17668  0064C2  D021               	goto	i2l1571
 17669                           
 17670                           ; BSR set to: 4
 17671                           ;usb_device.c: 1740: {
 17672                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17673  0064C4  5132               	movf	50,w,b	;volatile
 17674  0064C6  0D02               	mullw	2
 17675  0064C8  0EB7               	movlw	low _USB_SD_Ptr
 17676  0064CA  24F3               	addwf	prodl,w,c
 17677  0064CC  6EF6               	movwf	tblptrl,c
 17678  0064CE  0E77               	movlw	high _USB_SD_Ptr
 17679  0064D0  20F4               	addwfc	prodh,w,c
 17680  0064D2  6EF7               	movwf	tblptrh,c
 17681  0064D4                     	if	0	;There are less than 3 active tblptr bytes
 17682  0064D4                     	endif
 17683  0064D4  0009               	tblrd		*+
 17684  0064D6  CFF5 F009          	movff	tablat,_inPipes	;volatile
 17685  0064DA  000A               	tblrd		*-
 17686  0064DC  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 17687                           
 17688                           ; BSR set to: 4
 17689                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17690  0064E0  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 17691  0064E4  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17692  0064E8  6AF8               	clrf	tblptru,c
 17693  0064EA  0E07               	movlw	(high __ramtop+-1)
 17694  0064EC  64F7               	cpfsgt	tblptrh,c
 17695  0064EE  D003               	bra	i2u383_47
 17696  0064F0  0008               	tblrd		*
 17697  0064F2  50F5               	movf	tablat,w,c
 17698  0064F4  D005               	bra	i2u383_40
 17699  0064F6                     i2u383_47:
 17700  0064F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 17701  0064FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 17702  0064FE  50E7               	movf	indf1,w,c
 17703  006500                     i2u383_40:
 17704  006500  6E0D               	movwf	_inPipes+4,c	;volatile
 17705  006502  6A0E               	clrf	_inPipes+5,c	;volatile
 17706                           
 17707                           ;usb_device.c: 1745: }
 17708  006504  0012               	return	
 17709  006506                     i2l1571:
 17710                           
 17711                           ; BSR set to: 4
 17712                           ;usb_device.c: 1746: else
 17713                           ;usb_device.c: 1747: {
 17714                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 17715  006506  6A0C               	clrf	_inPipes+3,c	;volatile
 17716  006508  0012               	return	
 17717  00650A                     i2l1573:
 17718                           
 17719                           ; BSR set to: 4
 17720                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 17721  00650A  6A0C               	clrf	_inPipes+3,c	;volatile
 17722                           
 17723                           ;usb_device.c: 1753: break;
 17724  00650C  0012               	return	
 17725  00650E                     i2l6129:
 17726                           
 17727                           ; BSR set to: 4
 17728  00650E  5133               	movf	51,w,b	;volatile
 17729                           
 17730                           ; Switch size 1, requested type "speed"
 17731                           ; Number of cases is 3, Range of values is 1 to 3
 17732                           ; switch strategies available:
 17733                           ; Name         Instructions Cycles
 17734                           ; simple_byte           10     6 (average)
 17735                           ;	Chosen strategy is simple_byte
 17736  006510  0A01               	xorlw	1	; case 1
 17737  006512  E08C               	bz	i2l6109
 17738  006514  0A03               	xorlw	3	; case 2
 17739  006516  E092               	bz	i2l6113
 17740  006518  0A01               	xorlw	1	; case 3
 17741  00651A  E0D1               	bz	i2l6121
 17742  00651C  D7F6               	goto	i2l1573
 17743  00651E                     __end_of_USBStdGetDscHandler:
 17744                           	opt stack 0
 17745                           pclatu	equ	0xFFB
 17746                           pclath	equ	0xFFA
 17747                           tblptru	equ	0xFF8
 17748                           tblptrh	equ	0xFF7
 17749                           tblptrl	equ	0xFF6
 17750                           tablat	equ	0xFF5
 17751                           prodh	equ	0xFF4
 17752                           prodl	equ	0xFF3
 17753                           intcon	equ	0xFF2
 17754                           postinc0	equ	0xFEE
 17755                           wreg	equ	0xFE8
 17756                           indf1	equ	0xFE7
 17757                           fsr1h	equ	0xFE2
 17758                           fsr1l	equ	0xFE1
 17759                           indf2	equ	0xFDF
 17760                           postinc2	equ	0xFDE
 17761                           postdec2	equ	0xFDD
 17762                           plusw2	equ	0xFDB
 17763                           fsr2h	equ	0xFDA
 17764                           fsr2l	equ	0xFD9
 17765                           status	equ	0xFD8
 17766                           
 17767 ;; *************** function _USBStdFeatureReqHandler *****************
 17768 ;; Defined at:
 17769 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 17770 ;; Parameters:    Size  Location     Type
 17771 ;;		None
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  p               2   26[COMRAM] PTR struct __BDT
 17774 ;;		 -> BDT(48), NULL(0), 
 17775 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 17776 ;;		 -> UEP0(1), 
 17777 ;;  current_ep_d    1   25[COMRAM] struct .
 17778 ;; Return value:  Size  Location     Type
 17779 ;;                  1    wreg      void 
 17780 ;; Registers used:
 17781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17782 ;; Tracked objects:
 17783 ;;		On entry : B/4
 17784 ;;		On exit  : B/0
 17785 ;;		Unchanged: 0/0
 17786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17787 ;;      Params:         0       0       0       0       0       0       0       0       0
 17788 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17789 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17790 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17791 ;;Total ram usage:        7 bytes
 17792 ;; Hardware stack levels used:    1
 17793 ;; Hardware stack levels required when called:    5
 17794 ;; This function calls:
 17795 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17796 ;; This function is called by:
 17797 ;;		_USBCheckStdRequest
 17798 ;; This function uses a non-reentrant model
 17799 ;;
 17800                           
 17801                           	psect	text93
 17802  006A7A                     __ptext93:
 17803                           	opt stack 0
 17804  006A7A                     _USBStdFeatureReqHandler:
 17805                           	opt stack 10
 17806                           
 17807                           ;usb_device.c: 2387: BDT_ENTRY *p;
 17808                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 17809                           ;usb_device.c: 2390: unsigned char* pUEP;
 17810                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 17811                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 17812                           
 17813                           ;incstack = 0
 17814  006A7A  0104               	movlb	4	; () banked
 17815  006A7C  0532               	decf	50,w,b	;volatile
 17816  006A7E  E10B               	bnz	i2l6169
 17817                           
 17818                           ; BSR set to: 4
 17819  006A80  5130               	movf	48,w,b	;volatile
 17820  006A82  0B1F               	andlw	31
 17821  006A84  E108               	bnz	i2l6169
 17822                           
 17823                           ; BSR set to: 4
 17824                           ;usb_device.c: 2395: {
 17825                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 17826  006A86  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17827                           
 17828                           ; BSR set to: 4
 17829                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 17830  006A88  0E03               	movlw	3
 17831  006A8A  1931               	xorwf	49,w,b	;volatile
 17832  006A8C  E103               	bnz	i2l1658
 17833                           
 17834                           ; BSR set to: 4
 17835                           ;usb_device.c: 2398: RemoteWakeup = 1;
 17836  006A8E  0E01               	movlw	1
 17837  006A90  6E1D               	movwf	_RemoteWakeup,c	;volatile
 17838  006A92  D001               	goto	i2l6169
 17839  006A94                     i2l1658:
 17840                           
 17841                           ; BSR set to: 4
 17842                           ;usb_device.c: 2399: else
 17843                           ;usb_device.c: 2400: RemoteWakeup = 0;
 17844  006A94  6A1D               	clrf	_RemoteWakeup,c	;volatile
 17845  006A96                     i2l6169:
 17846                           
 17847                           ; BSR set to: 4
 17848                           ;usb_device.c: 2401: }
 17849                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 17850                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 17851                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17852                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 17853  006A96  5132               	movf	50,w,b	;volatile
 17854  006A98  A4D8               	btfss	status,2,c
 17855  006A9A  0012               	return	
 17856                           
 17857                           ; BSR set to: 4
 17858  006A9C  5130               	movf	48,w,b	;volatile
 17859  006A9E  0B1F               	andlw	31
 17860  006AA0  0A02               	xorlw	2
 17861  006AA2  A4D8               	btfss	status,2,c
 17862  006AA4  0012               	return	
 17863                           
 17864                           ; BSR set to: 4
 17865  006AA6  5134               	movf	52,w,b	;volatile
 17866  006AA8  0B0F               	andlw	15
 17867  006AAA  B4D8               	btfsc	status,2,c
 17868  006AAC  0012               	return	
 17869                           
 17870                           ; BSR set to: 4
 17871  006AAE  5134               	movf	52,w,b	;volatile
 17872  006AB0  0B0F               	andlw	15
 17873  006AB2  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17874  006AB4  0E03               	movlw	3
 17875  006AB6  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 17876  006AB8  0C03               	retlw	3
 17877                           
 17878                           ; BSR set to: 4
 17879  006ABA  0E20               	movlw	32
 17880  006ABC  0100               	movlb	0	; () banked
 17881  006ABE  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 17882  006AC0  A4D8               	btfss	status,2,c
 17883  006AC2  0012               	return	
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;usb_device.c: 2408: {
 17887                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 17888  006AC4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17889                           
 17890                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 17891  006AC6  0104               	movlb	4	; () banked
 17892  006AC8  BF34               	btfsc	52,7,b	;volatile
 17893  006ACA  D011               	goto	i2l6185
 17894                           
 17895                           ; BSR set to: 4
 17896                           ;usb_device.c: 2415: {
 17897                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17898  006ACC  5134               	movf	52,w,b	;volatile
 17899  006ACE  0B0F               	andlw	15
 17900  006AD0  0D02               	mullw	2
 17901  006AD2  50F3               	movf	prodl,w,c
 17902  006AD4  0F60               	addlw	low _pBDTEntryOut
 17903  006AD6  6ED9               	movwf	fsr2l,c
 17904  006AD8  6ADA               	clrf	fsr2h,c
 17905  006ADA  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 17906  006ADE  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17907                           
 17908                           ; BSR set to: 4
 17909                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17910  006AE2  5134               	movf	52,w,b	;volatile
 17911  006AE4  0B0F               	andlw	15
 17912  006AE6  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17913  006AE8  5043               	movf	??_USBStdFeatureReqHandler,w,c
 17914  006AEA  0F6D               	addlw	low _ep_data_out
 17915  006AEC  D010               	goto	L23
 17916  006AEE                     i2l6185:
 17917                           
 17918                           ; BSR set to: 4
 17919                           ;usb_device.c: 2419: else
 17920                           ;usb_device.c: 2420: {
 17921                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17922  006AEE  5134               	movf	52,w,b	;volatile
 17923  006AF0  0B0F               	andlw	15
 17924  006AF2  0D02               	mullw	2
 17925  006AF4  50F3               	movf	prodl,w,c
 17926  006AF6  0F0F               	addlw	low _pBDTEntryIn
 17927  006AF8  6ED9               	movwf	fsr2l,c
 17928  006AFA  6ADA               	clrf	fsr2h,c
 17929  006AFC  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 17930  006B00  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17931                           
 17932                           ; BSR set to: 4
 17933                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17934  006B04  5134               	movf	52,w,b	;volatile
 17935  006B06  0B0F               	andlw	15
 17936  006B08  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17937  006B0A  5043               	movf	??_USBStdFeatureReqHandler,w,c
 17938  006B0C  0F6A               	addlw	low _ep_data_in
 17939  006B0E                     L23:
 17940  006B0E  6ED9               	movwf	fsr2l,c
 17941  006B10  6ADA               	clrf	fsr2h,c
 17942  006B12  50DF               	movf	indf2,w,c
 17943  006B14  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17944                           
 17945                           ; BSR set to: 4
 17946                           ;usb_device.c: 2423: }
 17947                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 17948  006B16  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17949  006B18  D002               	goto	i2l6193
 17950                           
 17951                           ; BSR set to: 4
 17952                           ;usb_device.c: 2429: {
 17953                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17954  006B1A  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 17955                           
 17956                           ;usb_device.c: 2431: }
 17957  006B1C  D001               	goto	i2l6195
 17958  006B1E                     i2l6193:
 17959                           
 17960                           ; BSR set to: 4
 17961                           ;usb_device.c: 2432: else
 17962                           ;usb_device.c: 2433: {
 17963                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17964  006B1E  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 17965  006B20                     i2l6195:
 17966                           
 17967                           ; BSR set to: 4
 17968                           ;usb_device.c: 2435: }
 17969                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 17970  006B20  BF34               	btfsc	52,7,b	;volatile
 17971  006B22  D006               	goto	i2l6199
 17972                           
 17973                           ; BSR set to: 4
 17974                           ;usb_device.c: 2440: {
 17975                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17976  006B24  5134               	movf	52,w,b	;volatile
 17977  006B26  0B0F               	andlw	15
 17978  006B28  0D02               	mullw	2
 17979  006B2A  50F3               	movf	prodl,w,c
 17980  006B2C  0F60               	addlw	low _pBDTEntryOut
 17981  006B2E  D005               	goto	L24
 17982  006B30                     i2l6199:
 17983                           
 17984                           ; BSR set to: 4
 17985                           ;usb_device.c: 2443: else
 17986                           ;usb_device.c: 2444: {
 17987                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17988  006B30  5134               	movf	52,w,b	;volatile
 17989  006B32  0B0F               	andlw	15
 17990  006B34  0D02               	mullw	2
 17991  006B36  50F3               	movf	prodl,w,c
 17992  006B38  0F0F               	addlw	low _pBDTEntryIn
 17993  006B3A                     L24:
 17994  006B3A  6ED9               	movwf	fsr2l,c
 17995  006B3C  6ADA               	clrf	fsr2h,c
 17996  006B3E  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17997  006B42  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17998                           
 17999                           ; BSR set to: 4
 18000                           ;usb_device.c: 2446: }
 18001                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 18002  006B46  0E03               	movlw	3
 18003  006B48  1931               	xorwf	49,w,b	;volatile
 18004  006B4A  E123               	bnz	i2l6211
 18005                           
 18006                           ; BSR set to: 4
 18007                           ;usb_device.c: 2450: {
 18008                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 18009  006B4C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18010  006B50  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18011  006B54  AEDF               	btfss	indf2,7,c
 18012  006B56  D011               	goto	i2l1668
 18013                           
 18014                           ; BSR set to: 4
 18015                           ;usb_device.c: 2452: {
 18016                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 18017  006B58  BF34               	btfsc	52,7,b	;volatile
 18018  006B5A  D006               	goto	i2l6209
 18019                           
 18020                           ; BSR set to: 4
 18021                           ;usb_device.c: 2456: {
 18022                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18023  006B5C  5134               	movf	52,w,b	;volatile
 18024  006B5E  0B0F               	andlw	15
 18025  006B60  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18026  006B62  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18027  006B64  0F6D               	addlw	low _ep_data_out
 18028  006B66  D005               	goto	L25
 18029  006B68                     i2l6209:
 18030                           
 18031                           ; BSR set to: 4
 18032                           ;usb_device.c: 2459: else
 18033                           ;usb_device.c: 2460: {
 18034                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18035  006B68  5134               	movf	52,w,b	;volatile
 18036  006B6A  0B0F               	andlw	15
 18037  006B6C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18038  006B6E  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18039  006B70  0F6A               	addlw	low _ep_data_in
 18040  006B72                     L25:
 18041  006B72  6ED9               	movwf	fsr2l,c
 18042  006B74  6ADA               	clrf	fsr2h,c
 18043  006B76  0100               	movlb	0	; () banked
 18044  006B78  82DF               	bsf	indf2,1,c
 18045  006B7A                     i2l1668:
 18046                           
 18047                           ;usb_device.c: 2462: }
 18048                           ;usb_device.c: 2463: }
 18049                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 18050  006B7A  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18051  006B7E  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18052  006B82  0E00               	movlw	0
 18053  006B84  84DB               	bsf	plusw2,2,c
 18054                           
 18055                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 18056  006B86  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18057  006B8A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18058  006B8E  8EDB               	bsf	plusw2,7,c
 18059                           
 18060                           ;usb_device.c: 2468: }
 18061  006B90  0C00               	retlw	0
 18062  006B92                     i2l6211:
 18063                           
 18064                           ; BSR set to: 4
 18065                           ;usb_device.c: 2469: else
 18066                           ;usb_device.c: 2470: {
 18067                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18068  006B92  0E04               	movlw	4
 18069  006B94  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18070                           
 18071                           ; BSR set to: 4
 18072                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 18073  006B96  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18074  006B9A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18075  006B9E  AEDF               	btfss	indf2,7,c
 18076  006BA0  D019               	goto	i2l6221
 18077                           
 18078                           ; BSR set to: 4
 18079                           ;usb_device.c: 2476: {
 18080                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 18081  006BA2  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18082  006BA6  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18083  006BAA  0E7F               	movlw	127
 18084  006BAC  16DF               	andwf	indf2,f,c
 18085                           
 18086                           ; BSR set to: 4
 18087                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 18088  006BAE  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18089  006BB2  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18090  006BB6  0E00               	movlw	0
 18091  006BB8  8CDB               	bsf	plusw2,6,c
 18092                           
 18093                           ; BSR set to: 4
 18094                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18095  006BBA  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18096  006BBC  0E05               	movlw	5
 18097  006BBE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18098  006BC0  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18099  006BC4  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18100  006BC8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18101  006BCA  0E02               	movlw	2
 18102  006BCC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18103  006BCE  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18104                           
 18105                           ;usb_device.c: 2482: }
 18106  006BD2  D006               	goto	i2l6223
 18107  006BD4                     i2l6221:
 18108                           
 18109                           ; BSR set to: 4
 18110                           ;usb_device.c: 2483: else
 18111                           ;usb_device.c: 2484: {
 18112                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 18113  006BD4  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18114  006BD8  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18115  006BDC  0E00               	movlw	0
 18116  006BDE  8CDB               	bsf	plusw2,6,c
 18117  006BE0                     i2l6223:
 18118                           
 18119                           ;usb_device.c: 2487: }
 18120                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18121  006BE0  0E04               	movlw	4
 18122  006BE2  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18123                           
 18124                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18125  006BE4  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18126  006BE6  D006               	goto	i2l1676
 18127  006BE8  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18128  006BEC  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18129  006BF0  AEDF               	btfss	indf2,7,c
 18130  006BF2  D025               	goto	i2l6237
 18131  006BF4                     i2l1676:
 18132                           
 18133                           ;usb_device.c: 2498: {
 18134                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 18135  006BF4  0104               	movlb	4	; () banked
 18136  006BF6  BF34               	btfsc	52,7,b	;volatile
 18137  006BF8  D006               	goto	i2l6231
 18138                           
 18139                           ; BSR set to: 4
 18140                           ;usb_device.c: 2500: {
 18141                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18142  006BFA  5134               	movf	52,w,b	;volatile
 18143  006BFC  0B0F               	andlw	15
 18144  006BFE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18145  006C00  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18146  006C02  0F6D               	addlw	low _ep_data_out
 18147  006C04  D005               	goto	L26
 18148  006C06                     i2l6231:
 18149                           
 18150                           ; BSR set to: 4
 18151                           ;usb_device.c: 2503: else
 18152                           ;usb_device.c: 2504: {
 18153                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18154  006C06  5134               	movf	52,w,b	;volatile
 18155  006C08  0B0F               	andlw	15
 18156  006C0A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18157  006C0C  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18158  006C0E  0F6A               	addlw	low _ep_data_in
 18159  006C10                     L26:
 18160  006C10  6ED9               	movwf	fsr2l,c
 18161  006C12  6ADA               	clrf	fsr2h,c
 18162  006C14  0100               	movlb	0	; () banked
 18163  006C16  92DF               	bcf	indf2,1,c
 18164                           
 18165                           ; BSR set to: 0
 18166                           ;usb_device.c: 2506: }
 18167                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18168  006C18  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18169  006C1C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18170  006C20  0E3B               	movlw	59
 18171  006C22  16DF               	andwf	indf2,f,c
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18175  006C24  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18176  006C26  0E05               	movlw	5
 18177  006C28  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18178  006C2A  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18179  006C2E  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18180  006C32  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18181  006C34  0E02               	movlw	2
 18182  006C36  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18183  006C38  EC7A  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18184                           
 18185                           ;usb_device.c: 2512: }
 18186  006C3C  D006               	goto	i2l6239
 18187  006C3E                     i2l6237:
 18188                           
 18189                           ;usb_device.c: 2513: else
 18190                           ;usb_device.c: 2514: {
 18191                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18192  006C3E  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18193  006C42  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18194  006C46  0E3B               	movlw	59
 18195  006C48  16DF               	andwf	indf2,f,c
 18196  006C4A                     i2l6239:
 18197                           
 18198                           ;usb_device.c: 2517: }
 18199                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18200  006C4A  0104               	movlb	4	; () banked
 18201  006C4C  5134               	movf	52,w,b	;volatile
 18202  006C4E  0B0F               	andlw	15
 18203  006C50  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18204  006C52  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 18205  006C54  0E6A               	movlw	106
 18206  006C56  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 18207  006C58  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 18208  006C5A  0E0F               	movlw	15
 18209  006C5C  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 18210  006C5E  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18211                           
 18212                           ; BSR set to: 4
 18213                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 18214  006C60  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18215  006C64  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18216  006C68  0EFE               	movlw	254
 18217  006C6A  16DF               	andwf	indf2,f,c
 18218  006C6C  0CFE               	retlw	254	;funcret
 18219  006C6E                     __end_of_USBStdFeatureReqHandler:
 18220                           	opt stack 0
 18221                           pclatu	equ	0xFFB
 18222                           pclath	equ	0xFFA
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           postinc0	equ	0xFEE
 18231                           wreg	equ	0xFE8
 18232                           indf1	equ	0xFE7
 18233                           fsr1h	equ	0xFE2
 18234                           fsr1l	equ	0xFE1
 18235                           indf2	equ	0xFDF
 18236                           postinc2	equ	0xFDE
 18237                           postdec2	equ	0xFDD
 18238                           plusw2	equ	0xFDB
 18239                           fsr2h	equ	0xFDA
 18240                           fsr2l	equ	0xFD9
 18241                           status	equ	0xFD8
 18242                           
 18243 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18244 ;; Defined at:
 18245 ;;		line 271 in file "../Includes/Board/USBapp.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;  event           2   13[COMRAM] enum E6400
 18248 ;;  pdata           2   15[COMRAM] PTR void 
 18249 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 18250 ;;  size            2   17[COMRAM] unsigned int 
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;		None
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  1    wreg      unsigned char 
 18255 ;; Registers used:
 18256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18262 ;;      Params:         6       0       0       0       0       0       0       0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18264 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18265 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18266 ;;Total ram usage:        8 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:    4
 18269 ;; This function calls:
 18270 ;;		_USBCheckCDCRequest
 18271 ;;		_USBapp_CdcEmulatorInitialize
 18272 ;; This function is called by:
 18273 ;;		_USBDeviceTasks
 18274 ;;		_USBStdSetCfgHandler
 18275 ;;		_USBSuspend
 18276 ;;		_USBWakeFromSuspend
 18277 ;;		_USBCtrlTrfSetupHandler
 18278 ;;		_USBCheckStdRequest
 18279 ;;		_USBStdFeatureReqHandler
 18280 ;; This function uses a non-reentrant model
 18281 ;;
 18282                           
 18283                           	psect	text94
 18284  004AF4                     __ptext94:
 18285                           	opt stack 0
 18286  004AF4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18287                           	opt stack 14
 18288                           
 18289                           ;USBapp.c: 307: break;
 18290                           
 18291                           ;USBapp.c: 306: USBCheckCDCRequest();
 18292                           
 18293                           ;USBapp.c: 298: break;
 18294                           
 18295                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 18296                           
 18297                           ;USBapp.c: 273: switch( (int) event )
 18298                           
 18299                           ;incstack = 0
 18300  004AF4  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18301  004AF8  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18302                           
 18303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18304                           ; Switch size 1, requested type "speed"
 18305                           ; Number of cases is 2, Range of values is 0 to 127
 18306                           ; switch strategies available:
 18307                           ; Name         Instructions Cycles
 18308                           ; simple_byte            7     4 (average)
 18309                           ;	Chosen strategy is simple_byte
 18310  004AFC  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18311  004AFE  E004               	bz	i2l10491
 18312  004B00  0A7F               	xorlw	127	; case 127
 18313  004B02  A4D8               	btfss	status,2,c
 18314  004B04  0012               	return	
 18315  004B06  D019               	goto	i2l10493
 18316  004B08                     i2l10491:
 18317                           
 18318                           ; Switch size 1, requested type "speed"
 18319                           ; Number of cases is 8, Range of values is 1 to 117
 18320                           ; switch strategies available:
 18321                           ; Name         Instructions Cycles
 18322                           ; simple_byte           25    13 (average)
 18323                           ;	Chosen strategy is simple_byte
 18324  004B08  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18325  004B0A  0A01               	xorlw	1	; case 1
 18326  004B0C  E102 EFC2  F024    	bz	_USBapp_CdcEmulatorInitialize
 18327  004B12  0A03               	xorlw	3	; case 2
 18328  004B14  B4D8               	btfsc	status,2,c
 18329  004B16  0012               	return	
 18330  004B18  0A01               	xorlw	1	; case 3
 18331  004B1A  E102 EF97  F029    	bz	_USBCheckCDCRequest
 18332  004B20  0A06               	xorlw	6	; case 5
 18333  004B22  B4D8               	btfsc	status,2,c
 18334  004B24  0012               	return	
 18335  004B26  0A77               	xorlw	119	; case 114
 18336  004B28  B4D8               	btfsc	status,2,c
 18337  004B2A  0012               	return	
 18338  004B2C  0A01               	xorlw	1	; case 115
 18339  004B2E  B4D8               	btfsc	status,2,c
 18340  004B30  0012               	return	
 18341  004B32  0A07               	xorlw	7	; case 116
 18342  004B34  A4D8               	btfss	status,2,c
 18343  004B36  0A01               	xorlw	1	; case 117
 18344  004B38  0012               	return	
 18345  004B3A                     i2l10493:
 18346                           
 18347                           ; Switch size 1, requested type "speed"
 18348                           ; Number of cases is 1, Range of values is 255 to 255
 18349                           ; switch strategies available:
 18350                           ; Name         Instructions Cycles
 18351                           ; simple_byte            4     3 (average)
 18352                           ;	Chosen strategy is simple_byte
 18353  004B3A  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18354  004B3C  0012               	return	
 18355  004B3E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18356                           	opt stack 0
 18357                           pclatu	equ	0xFFB
 18358                           pclath	equ	0xFFA
 18359                           tblptru	equ	0xFF8
 18360                           tblptrh	equ	0xFF7
 18361                           tblptrl	equ	0xFF6
 18362                           tablat	equ	0xFF5
 18363                           prodh	equ	0xFF4
 18364                           prodl	equ	0xFF3
 18365                           intcon	equ	0xFF2
 18366                           postinc0	equ	0xFEE
 18367                           wreg	equ	0xFE8
 18368                           indf1	equ	0xFE7
 18369                           fsr1h	equ	0xFE2
 18370                           fsr1l	equ	0xFE1
 18371                           indf2	equ	0xFDF
 18372                           postinc2	equ	0xFDE
 18373                           postdec2	equ	0xFDD
 18374                           plusw2	equ	0xFDB
 18375                           fsr2h	equ	0xFDA
 18376                           fsr2l	equ	0xFD9
 18377                           status	equ	0xFD8
 18378                           
 18379 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 18380 ;; Defined at:
 18381 ;;		line 107 in file "../Includes/Board/USBapp.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;		None
 18384 ;; Auto vars:     Size  Location     Type
 18385 ;;  i               1   12[COMRAM] unsigned char 
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  1    wreg      void 
 18388 ;; Registers used:
 18389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18395 ;;      Params:         0       0       0       0       0       0       0       0       0
 18396 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18398 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18399 ;;Total ram usage:        1 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    3
 18402 ;; This function calls:
 18403 ;;		_CDCInitEP
 18404 ;;		i2_EUSART_Initialize
 18405 ;; This function is called by:
 18406 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text95
 18411  004984                     __ptext95:
 18412                           	opt stack 0
 18413  004984                     _USBapp_CdcEmulatorInitialize:
 18414                           	opt stack 14
 18415                           
 18416                           ;USBapp.c: 110: CDCInitEP();
 18417                           
 18418                           ;incstack = 0
 18419  004984  EC5F  F026         	call	_CDCInitEP	;wreg free
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 18423  004988  6BBB               	clrf	(_line_coding+4)& (0+255),b
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 18427  00498A  0E08               	movlw	8
 18428  00498C  6FBD               	movwf	(_line_coding+6)& (0+255),b
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;USBapp.c: 113: line_coding.bParityType = 0;
 18432  00498E  6BBC               	clrf	(_line_coding+5)& (0+255),b
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 18436  004990  6BB7               	clrf	_line_coding& (0+255),b
 18437  004992  0E4B               	movlw	75
 18438  004994  6FB8               	movwf	(_line_coding+1)& (0+255),b
 18439  004996  6BB9               	clrf	(_line_coding+2)& (0+255),b
 18440  004998  6BBA               	clrf	(_line_coding+3)& (0+255),b
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;USBapp.c: 115: EUSART_Initialize();
 18444  00499A  ECED  F023         	call	i2_EUSART_Initialize	;wreg free
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 18448  00499E  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 18449  0049A0                     i2l5709:
 18450                           
 18451                           ;USBapp.c: 118: {
 18452                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 18453  0049A0  0E18               	movlw	low _USB_Buffer
 18454  0049A2  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 18455  0049A4  6ED9               	movwf	fsr2l,c
 18456  0049A6  6ADA               	clrf	fsr2h,c
 18457  0049A8  0E01               	movlw	high _USB_Buffer
 18458  0049AA  22DA               	addwfc	fsr2h,f,c
 18459  0049AC  6ADF               	clrf	indf2,c
 18460  0049AE  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 18461  0049B0  0E3F               	movlw	63
 18462  0049B2  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 18463  0049B4  D7F5               	goto	i2l5709
 18464                           
 18465                           ;USBapp.c: 120: }
 18466                           ;USBapp.c: 121: NextUSBOut = 0;
 18467  0049B6  6A1A               	clrf	_NextUSBOut,c
 18468                           
 18469                           ;USBapp.c: 122: LastRS232Out = 0;
 18470  0049B8  6A19               	clrf	_LastRS232Out,c
 18471  0049BA  0012               	return		;funcret
 18472  0049BC                     __end_of_USBapp_CdcEmulatorInitialize:
 18473                           	opt stack 0
 18474                           pclatu	equ	0xFFB
 18475                           pclath	equ	0xFFA
 18476                           tblptru	equ	0xFF8
 18477                           tblptrh	equ	0xFF7
 18478                           tblptrl	equ	0xFF6
 18479                           tablat	equ	0xFF5
 18480                           prodh	equ	0xFF4
 18481                           prodl	equ	0xFF3
 18482                           intcon	equ	0xFF2
 18483                           postinc0	equ	0xFEE
 18484                           wreg	equ	0xFE8
 18485                           indf1	equ	0xFE7
 18486                           fsr1h	equ	0xFE2
 18487                           fsr1l	equ	0xFE1
 18488                           indf2	equ	0xFDF
 18489                           postinc2	equ	0xFDE
 18490                           postdec2	equ	0xFDD
 18491                           plusw2	equ	0xFDB
 18492                           fsr2h	equ	0xFDA
 18493                           fsr2l	equ	0xFD9
 18494                           status	equ	0xFD8
 18495                           
 18496 ;; *************** function _CDCInitEP *****************
 18497 ;; Defined at:
 18498 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 18499 ;; Parameters:    Size  Location     Type
 18500 ;;		None
 18501 ;; Auto vars:     Size  Location     Type
 18502 ;;		None
 18503 ;; Return value:  Size  Location     Type
 18504 ;;                  1    wreg      void 
 18505 ;; Registers used:
 18506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18507 ;; Tracked objects:
 18508 ;;		On entry : 0/0
 18509 ;;		On exit  : F/0
 18510 ;;		Unchanged: 0/0
 18511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18512 ;;      Params:         0       0       0       0       0       0       0       0       0
 18513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18515 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18516 ;;Total ram usage:        0 bytes
 18517 ;; Hardware stack levels used:    1
 18518 ;; Hardware stack levels required when called:    2
 18519 ;; This function calls:
 18520 ;;		_USBEnableEndpoint
 18521 ;;		i2_USBTransferOnePacket
 18522 ;; This function is called by:
 18523 ;;		_USBapp_CdcEmulatorInitialize
 18524 ;; This function uses a non-reentrant model
 18525 ;;
 18526                           
 18527                           	psect	text96
 18528  004CBE                     __ptext96:
 18529                           	opt stack 0
 18530  004CBE                     _CDCInitEP:
 18531                           	opt stack 14
 18532                           
 18533                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 18534                           
 18535                           ;incstack = 0
 18536  004CBE  0100               	movlb	0	; () banked
 18537  004CC0  6BB7               	clrf	_line_coding& (0+255),b
 18538  004CC2  0E4B               	movlw	75
 18539  004CC4  6FB8               	movwf	(_line_coding+1)& (0+255),b
 18540  004CC6  6BB9               	clrf	(_line_coding+2)& (0+255),b
 18541  004CC8  6BBA               	clrf	(_line_coding+3)& (0+255),b
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 18545  004CCA  6BBB               	clrf	(_line_coding+4)& (0+255),b
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 18549  004CCC  6BBC               	clrf	(_line_coding+5)& (0+255),b
 18550                           
 18551                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 18552  004CCE  0E08               	movlw	8
 18553  004CD0  6FBD               	movwf	(_line_coding+6)& (0+255),b
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 18557  004CD2  6B97               	clrf	_cdc_rx_len& (0+255),b
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 18561  004CD4  0E1A               	movlw	26
 18562  004CD6  6E36               	movwf	USBEnableEndpoint@options,c
 18563  004CD8  0E01               	movlw	1
 18564  004CDA  EC8C  F024         	call	_USBEnableEndpoint
 18565                           
 18566                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18567  004CDE  0E1E               	movlw	30
 18568  004CE0  6E36               	movwf	USBEnableEndpoint@options,c
 18569  004CE2  0E02               	movlw	2
 18570  004CE4  EC8C  F024         	call	_USBEnableEndpoint
 18571                           
 18572                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18573  004CE8  0E00               	movlw	0
 18574  004CEA  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18575  004CEC  0E40               	movlw	64
 18576  004CEE  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18577  004CF0  0E05               	movlw	5
 18578  004CF2  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18579  004CF4  0E40               	movlw	64
 18580  004CF6  6E31               	movwf	i2USBTransferOnePacket@len,c
 18581  004CF8  0E02               	movlw	2
 18582  004CFA  ECF8  F02A         	call	i2_USBTransferOnePacket
 18583  004CFE  C02E  F07B         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18584  004D02  C02F  F07C         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18585                           
 18586                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 18587  004D06  0100               	movlb	0	; () banked
 18588  004D08  6B79               	clrf	_CDCDataInHandle& (0+255),b
 18589  004D0A  6B7A               	clrf	(_CDCDataInHandle+1)& (0+255),b
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 18593  004D0C  6A20               	clrf	_cdc_trf_state,c
 18594                           
 18595                           ; BSR set to: 0
 18596  004D0E  0012               	return		;funcret
 18597  004D10                     __end_of_CDCInitEP:
 18598                           	opt stack 0
 18599                           pclatu	equ	0xFFB
 18600                           pclath	equ	0xFFA
 18601                           tblptru	equ	0xFF8
 18602                           tblptrh	equ	0xFF7
 18603                           tblptrl	equ	0xFF6
 18604                           tablat	equ	0xFF5
 18605                           prodh	equ	0xFF4
 18606                           prodl	equ	0xFF3
 18607                           intcon	equ	0xFF2
 18608                           postinc0	equ	0xFEE
 18609                           wreg	equ	0xFE8
 18610                           indf1	equ	0xFE7
 18611                           fsr1h	equ	0xFE2
 18612                           fsr1l	equ	0xFE1
 18613                           indf2	equ	0xFDF
 18614                           postinc2	equ	0xFDE
 18615                           postdec2	equ	0xFDD
 18616                           plusw2	equ	0xFDB
 18617                           fsr2h	equ	0xFDA
 18618                           fsr2l	equ	0xFD9
 18619                           status	equ	0xFD8
 18620                           
 18621 ;; *************** function i2_USBTransferOnePacket *****************
 18622 ;; Defined at:
 18623 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 18624 ;; Parameters:    Size  Location     Type
 18625 ;;  ep              1    wreg     unsigned char 
 18626 ;;  dir             1    0[COMRAM] unsigned char 
 18627 ;;  data            2    1[COMRAM] PTR unsigned char 
 18628 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18629 ;;  len             1    3[COMRAM] unsigned char 
 18630 ;; Auto vars:     Size  Location     Type
 18631 ;;  ep              1    4[COMRAM] unsigned char 
 18632 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18633 ;;		 -> BDT(48), NULL(0), 
 18634 ;; Return value:  Size  Location     Type
 18635 ;;                  2    0[COMRAM] PTR void 
 18636 ;; Registers used:
 18637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18638 ;; Tracked objects:
 18639 ;;		On entry : 0/0
 18640 ;;		On exit  : 0/0
 18641 ;;		Unchanged: 0/0
 18642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18643 ;;      Params:         4       0       0       0       0       0       0       0       0
 18644 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18645 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18646 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18647 ;;Total ram usage:        7 bytes
 18648 ;; Hardware stack levels used:    1
 18649 ;; This function calls:
 18650 ;;		Nothing
 18651 ;; This function is called by:
 18652 ;;		_CDCInitEP
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           	psect	text97
 18657  0055F0                     __ptext97:
 18658                           	opt stack 0
 18659  0055F0                     i2_USBTransferOnePacket:
 18660                           	opt stack 15
 18661                           
 18662                           ; BSR set to: 0
 18663                           ;incstack = 0
 18664                           ;i2USBTransferOnePacket@ep stored from wreg
 18665  0055F0  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18666                           
 18667                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 18668                           ;usb_device.c: 762: if(dir != 0)
 18669  0055F2  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18670  0055F4  E005               	bz	i2l5577
 18671                           
 18672                           ;usb_device.c: 763: {
 18673                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 18674  0055F6  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18675  0055F8  0D02               	mullw	2
 18676  0055FA  50F3               	movf	prodl,w,c
 18677  0055FC  0F0F               	addlw	low _pBDTEntryIn
 18678  0055FE  D004               	goto	L27
 18679  005600                     i2l5577:
 18680                           
 18681                           ;usb_device.c: 767: else
 18682                           ;usb_device.c: 768: {
 18683                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 18684  005600  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18685  005602  0D02               	mullw	2
 18686  005604  50F3               	movf	prodl,w,c
 18687  005606  0F60               	addlw	low _pBDTEntryOut
 18688  005608                     L27:
 18689  005608  6ED9               	movwf	fsr2l,c
 18690  00560A  6ADA               	clrf	fsr2h,c
 18691  00560C  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18692  005610  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18693                           
 18694                           ;usb_device.c: 771: }
 18695                           ;usb_device.c: 775: if(handle == 0)
 18696  005614  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18697  005616  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18698  005618  E103               	bnz	i2l5583
 18699                           
 18700                           ;usb_device.c: 776: {
 18701                           ;usb_device.c: 777: return 0;
 18702  00561A  6A2E               	clrf	?i2_USBTransferOnePacket,c
 18703  00561C  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 18704  00561E  0012               	return	
 18705  005620                     i2l5583:
 18706                           
 18707                           ;usb_device.c: 778: }
 18708                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 18709  005620  EE20 F002          	lfsr	2,2
 18710  005624  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18711  005626  26D9               	addwf	fsr2l,f,c
 18712  005628  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18713  00562A  22DA               	addwfc	fsr2h,f,c
 18714  00562C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18715  005630  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18716                           
 18717                           ;usb_device.c: 781: handle->CNT = len;
 18718  005634  EE20 F001          	lfsr	2,1
 18719  005638  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18720  00563A  26D9               	addwf	fsr2l,f,c
 18721  00563C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18722  00563E  22DA               	addwfc	fsr2h,f,c
 18723  005640  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18724                           
 18725                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 18726  005644  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18727  005648  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18728  00564C  0E40               	movlw	64
 18729  00564E  16DF               	andwf	indf2,f,c
 18730                           
 18731                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 18732  005650  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18733  005654  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18734  005658  0E00               	movlw	0
 18735  00565A  86DB               	bsf	plusw2,3,c
 18736                           
 18737                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 18738  00565C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18739  005660  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18740  005664  8EDB               	bsf	plusw2,7,c
 18741                           
 18742                           ;usb_device.c: 787: if(dir != 0)
 18743  005666  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18744  005668  E005               	bz	i2l5595
 18745                           
 18746                           ;usb_device.c: 788: {
 18747                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18748  00566A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18749  00566C  0D02               	mullw	2
 18750  00566E  50F3               	movf	prodl,w,c
 18751  005670  0F0F               	addlw	low _pBDTEntryIn
 18752  005672  D004               	goto	L28
 18753  005674                     i2l5595:
 18754                           
 18755                           ;usb_device.c: 792: else
 18756                           ;usb_device.c: 793: {
 18757                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18758  005674  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18759  005676  0D02               	mullw	2
 18760  005678  50F3               	movf	prodl,w,c
 18761  00567A  0F60               	addlw	low _pBDTEntryOut
 18762  00567C                     L28:
 18763  00567C  6ED9               	movwf	fsr2l,c
 18764  00567E  6ADA               	clrf	fsr2h,c
 18765  005680  0E04               	movlw	4
 18766  005682  1ADF               	xorwf	indf2,f,c
 18767                           
 18768                           ;usb_device.c: 796: }
 18769                           ;usb_device.c: 797: return (void*)handle;
 18770  005684  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18771  005688  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18772  00568C  0C04               	retlw	4	;funcret
 18773  00568E                     __end_ofi2_USBTransferOnePacket:
 18774                           	opt stack 0
 18775                           pclatu	equ	0xFFB
 18776                           pclath	equ	0xFFA
 18777                           tblptru	equ	0xFF8
 18778                           tblptrh	equ	0xFF7
 18779                           tblptrl	equ	0xFF6
 18780                           tablat	equ	0xFF5
 18781                           prodh	equ	0xFF4
 18782                           prodl	equ	0xFF3
 18783                           intcon	equ	0xFF2
 18784                           postinc0	equ	0xFEE
 18785                           wreg	equ	0xFE8
 18786                           indf1	equ	0xFE7
 18787                           fsr1h	equ	0xFE2
 18788                           fsr1l	equ	0xFE1
 18789                           indf2	equ	0xFDF
 18790                           postinc2	equ	0xFDE
 18791                           postdec2	equ	0xFDD
 18792                           plusw2	equ	0xFDB
 18793                           fsr2h	equ	0xFDA
 18794                           fsr2l	equ	0xFD9
 18795                           status	equ	0xFD8
 18796                           
 18797 ;; *************** function _USBEnableEndpoint *****************
 18798 ;; Defined at:
 18799 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;  ep              1    wreg     unsigned char 
 18802 ;;  options         1    8[COMRAM] unsigned char 
 18803 ;; Auto vars:     Size  Location     Type
 18804 ;;  ep              1   11[COMRAM] unsigned char 
 18805 ;;  p               2    9[COMRAM] PTR unsigned char 
 18806 ;;		 -> UEP0(1), 
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      void 
 18809 ;; Registers used:
 18810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18816 ;;      Params:         1       0       0       0       0       0       0       0       0
 18817 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18819 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18820 ;;Total ram usage:        4 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; Hardware stack levels required when called:    1
 18823 ;; This function calls:
 18824 ;;		_USBConfigureEndpoint
 18825 ;; This function is called by:
 18826 ;;		_CDCInitEP
 18827 ;; This function uses a non-reentrant model
 18828 ;;
 18829                           
 18830                           	psect	text98
 18831  004918                     __ptext98:
 18832                           	opt stack 0
 18833  004918                     _USBEnableEndpoint:
 18834                           	opt stack 14
 18835                           
 18836                           ;incstack = 0
 18837                           ;USBEnableEndpoint@ep stored from wreg
 18838  004918  6E39               	movwf	USBEnableEndpoint@ep,c
 18839                           
 18840                           ;usb_device.c: 647: unsigned char* p;
 18841                           ;usb_device.c: 651: if(options & 0x04)
 18842  00491A  A436               	btfss	USBEnableEndpoint@options,2,c
 18843  00491C  D004               	goto	i2l5565
 18844                           
 18845                           ;usb_device.c: 652: {
 18846                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 18847  00491E  6A2E               	clrf	USBConfigureEndpoint@direction,c
 18848  004920  5039               	movf	USBEnableEndpoint@ep,w,c
 18849  004922  ECDB  F029         	call	_USBConfigureEndpoint
 18850  004926                     i2l5565:
 18851                           
 18852                           ;usb_device.c: 654: }
 18853                           ;usb_device.c: 655: if(options & 0x02)
 18854  004926  A236               	btfss	USBEnableEndpoint@options,1,c
 18855  004928  D005               	goto	i2l5569
 18856                           
 18857                           ;usb_device.c: 656: {
 18858                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 18859  00492A  0E01               	movlw	1
 18860  00492C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18861  00492E  5039               	movf	USBEnableEndpoint@ep,w,c
 18862  004930  ECDB  F029         	call	_USBConfigureEndpoint
 18863  004934                     i2l5569:
 18864                           
 18865                           ;usb_device.c: 658: }
 18866                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 18867  004934  0E6A               	movlw	106
 18868  004936  2439               	addwf	USBEnableEndpoint@ep,w,c
 18869  004938  6E37               	movwf	USBEnableEndpoint@p,c
 18870  00493A  6A38               	clrf	USBEnableEndpoint@p+1,c
 18871  00493C  0E0F               	movlw	15
 18872  00493E  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 18873                           
 18874                           ;usb_device.c: 664: *p = options;
 18875  004940  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18876  004944  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18877  004948  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 18878  00494C  0C0F               	retlw	15	;funcret
 18879  00494E                     __end_of_USBEnableEndpoint:
 18880                           	opt stack 0
 18881                           pclatu	equ	0xFFB
 18882                           pclath	equ	0xFFA
 18883                           tblptru	equ	0xFF8
 18884                           tblptrh	equ	0xFF7
 18885                           tblptrl	equ	0xFF6
 18886                           tablat	equ	0xFF5
 18887                           prodh	equ	0xFF4
 18888                           prodl	equ	0xFF3
 18889                           intcon	equ	0xFF2
 18890                           postinc0	equ	0xFEE
 18891                           wreg	equ	0xFE8
 18892                           indf1	equ	0xFE7
 18893                           fsr1h	equ	0xFE2
 18894                           fsr1l	equ	0xFE1
 18895                           indf2	equ	0xFDF
 18896                           postinc2	equ	0xFDE
 18897                           postdec2	equ	0xFDD
 18898                           plusw2	equ	0xFDB
 18899                           fsr2h	equ	0xFDA
 18900                           fsr2l	equ	0xFD9
 18901                           status	equ	0xFD8
 18902                           
 18903 ;; *************** function _USBConfigureEndpoint *****************
 18904 ;; Defined at:
 18905 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 18906 ;; Parameters:    Size  Location     Type
 18907 ;;  EPNum           1    wreg     unsigned char 
 18908 ;;  direction       1    0[COMRAM] unsigned char 
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;  EPNum           1    5[COMRAM] unsigned char 
 18911 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18912 ;;		 -> BDT(48), 
 18913 ;; Return value:  Size  Location     Type
 18914 ;;                  1    wreg      void 
 18915 ;; Registers used:
 18916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18917 ;; Tracked objects:
 18918 ;;		On entry : 0/0
 18919 ;;		On exit  : 0/0
 18920 ;;		Unchanged: 0/0
 18921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18922 ;;      Params:         1       0       0       0       0       0       0       0       0
 18923 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18924 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18925 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18926 ;;Total ram usage:        8 bytes
 18927 ;; Hardware stack levels used:    1
 18928 ;; This function calls:
 18929 ;;		Nothing
 18930 ;; This function is called by:
 18931 ;;		_USBEnableEndpoint
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           	psect	text99
 18936  0053B6                     __ptext99:
 18937                           	opt stack 0
 18938  0053B6                     _USBConfigureEndpoint:
 18939                           	opt stack 14
 18940                           
 18941                           ;incstack = 0
 18942                           ;USBConfigureEndpoint@EPNum stored from wreg
 18943  0053B6  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 18944                           
 18945                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 18946                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 18947  0053B8  6A34               	clrf	USBConfigureEndpoint@handle,c
 18948  0053BA  0E04               	movlw	4
 18949  0053BC  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 18950                           
 18951                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 18952  0053BE  502E               	movf	USBConfigureEndpoint@direction,w,c
 18953  0053C0  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 18954  0053C2  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18955  0053C4  90D8               	bcf	status,0,c
 18956  0053C6  362F               	rlcf	??_USBConfigureEndpoint,f,c
 18957  0053C8  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 18958  0053CA  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18959  0053CC  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18960  0053CE  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18961  0053D0  90D8               	bcf	status,0,c
 18962  0053D2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18963  0053D4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18964  0053D6  90D8               	bcf	status,0,c
 18965  0053D8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18966  0053DA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18967  0053DC  502F               	movf	??_USBConfigureEndpoint,w,c
 18968  0053DE  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 18969  0053E0  5030               	movf	??_USBConfigureEndpoint+1,w,c
 18970  0053E2  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 18971  0053E4  90D8               	bcf	status,0,c
 18972  0053E6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18973  0053E8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18974  0053EA  90D8               	bcf	status,0,c
 18975  0053EC  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18976  0053EE  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18977  0053F0  5031               	movf	??_USBConfigureEndpoint+2,w,c
 18978  0053F2  2634               	addwf	USBConfigureEndpoint@handle,f,c
 18979  0053F4  5032               	movf	??_USBConfigureEndpoint+3,w,c
 18980  0053F6  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18981                           
 18982                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 18983  0053F8  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18984  0053FC  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18985  005400  9EDF               	bcf	indf2,7,c
 18986                           
 18987                           ;usb_device.c: 1242: if(direction == 0)
 18988  005402  502E               	movf	USBConfigureEndpoint@direction,w,c
 18989  005404  E105               	bnz	i2l5551
 18990                           
 18991                           ;usb_device.c: 1243: {
 18992                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 18993  005406  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18994  005408  0D02               	mullw	2
 18995  00540A  50F3               	movf	prodl,w,c
 18996  00540C  0F60               	addlw	low _pBDTEntryOut
 18997  00540E  D004               	goto	L29
 18998  005410                     i2l5551:
 18999                           
 19000                           ;usb_device.c: 1246: else
 19001                           ;usb_device.c: 1247: {
 19002                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 19003  005410  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19004  005412  0D02               	mullw	2
 19005  005414  50F3               	movf	prodl,w,c
 19006  005416  0F0F               	addlw	low _pBDTEntryIn
 19007  005418                     L29:
 19008  005418  6ED9               	movwf	fsr2l,c
 19009  00541A  6ADA               	clrf	fsr2h,c
 19010  00541C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19011  005420  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19012                           
 19013                           ;usb_device.c: 1249: }
 19014                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 19015  005424  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19016  005428  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19017  00542C  9CDF               	bcf	indf2,6,c
 19018                           
 19019                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 19020  00542E  EE20 F004          	lfsr	2,4
 19021  005432  5034               	movf	USBConfigureEndpoint@handle,w,c
 19022  005434  26D9               	addwf	fsr2l,f,c
 19023  005436  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19024  005438  22DA               	addwfc	fsr2h,f,c
 19025  00543A  8CDF               	bsf	indf2,6,c
 19026  00543C  0012               	return		;funcret
 19027  00543E                     __end_of_USBConfigureEndpoint:
 19028                           	opt stack 0
 19029                           pclatu	equ	0xFFB
 19030                           pclath	equ	0xFFA
 19031                           tblptru	equ	0xFF8
 19032                           tblptrh	equ	0xFF7
 19033                           tblptrl	equ	0xFF6
 19034                           tablat	equ	0xFF5
 19035                           prodh	equ	0xFF4
 19036                           prodl	equ	0xFF3
 19037                           intcon	equ	0xFF2
 19038                           postinc0	equ	0xFEE
 19039                           wreg	equ	0xFE8
 19040                           indf1	equ	0xFE7
 19041                           fsr1h	equ	0xFE2
 19042                           fsr1l	equ	0xFE1
 19043                           indf2	equ	0xFDF
 19044                           postinc2	equ	0xFDE
 19045                           postdec2	equ	0xFDD
 19046                           plusw2	equ	0xFDB
 19047                           fsr2h	equ	0xFDA
 19048                           fsr2l	equ	0xFD9
 19049                           status	equ	0xFD8
 19050                           
 19051 ;; *************** function _USBCheckCDCRequest *****************
 19052 ;; Defined at:
 19053 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 19054 ;; Parameters:    Size  Location     Type
 19055 ;;		None
 19056 ;; Auto vars:     Size  Location     Type
 19057 ;;		None
 19058 ;; Return value:  Size  Location     Type
 19059 ;;                  1    wreg      void 
 19060 ;; Registers used:
 19061 ;;		wreg, status,2, status,0
 19062 ;; Tracked objects:
 19063 ;;		On entry : 0/0
 19064 ;;		On exit  : F/4
 19065 ;;		Unchanged: 0/0
 19066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19067 ;;      Params:         0       0       0       0       0       0       0       0       0
 19068 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19069 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19070 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19071 ;;Total ram usage:        0 bytes
 19072 ;; Hardware stack levels used:    1
 19073 ;; This function calls:
 19074 ;;		Nothing
 19075 ;; This function is called by:
 19076 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19077 ;; This function uses a non-reentrant model
 19078 ;;
 19079                           
 19080                           	psect	text100
 19081  00532E                     __ptext100:
 19082                           	opt stack 0
 19083  00532E                     _USBCheckCDCRequest:
 19084                           	opt stack 17
 19085                           
 19086                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 19087                           
 19088                           ;incstack = 0
 19089  00532E  0104               	movlb	4	; () banked
 19090  005330  5130               	movf	48,w,b	;volatile
 19091  005332  0B1F               	andlw	31
 19092  005334  06E8               	decf	wreg,f,c
 19093  005336  E001               	bz	i2l5719
 19094  005338  0012               	return	
 19095  00533A                     i2l5719:
 19096                           
 19097                           ; BSR set to: 4
 19098                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 19099  00533A  3930               	swapf	48,w,b	;volatile
 19100  00533C  32E8               	rrcf	wreg,f,c
 19101  00533E  0B03               	andlw	3
 19102  005340  06E8               	decf	wreg,f,c
 19103  005342  E001               	bz	i2l5723
 19104  005344  0012               	return	
 19105  005346                     i2l5723:
 19106                           
 19107                           ; BSR set to: 4
 19108                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 19109                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 19110  005346  5134               	movf	52,w,b	;volatile
 19111  005348  E02B               	bz	i2l5757
 19112                           
 19113                           ; BSR set to: 4
 19114  00534A  0534               	decf	52,w,b	;volatile
 19115  00534C  E029               	bz	i2l5757
 19116  00534E  0012               	return	
 19117  005350                     i2l5729:
 19118                           
 19119                           ; BSR set to: 4
 19120                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19121  005350  0ED8               	movlw	low _dummy_encapsulated_cmd_response
 19122  005352  6E09               	movwf	_inPipes,c	;volatile
 19123  005354  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19124  005356  6E0A               	movwf	_inPipes+1,c	;volatile
 19125                           
 19126                           ; BSR set to: 4
 19127                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 19128  005358  6A0E               	clrf	_inPipes+5,c	;volatile
 19129  00535A  0E08               	movlw	8
 19130  00535C  6E0D               	movwf	_inPipes+4,c	;volatile
 19131                           
 19132                           ; BSR set to: 4
 19133                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19134  00535E  800C               	bsf	_inPipes+3,0,c	;volatile
 19135                           
 19136                           ; BSR set to: 4
 19137                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 19138  005360  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19139                           
 19140                           ;usb_device_cdc.c: 212: break;
 19141  005362  0C08               	retlw	8
 19142  005364                     i2l5737:
 19143                           
 19144                           ; BSR set to: 4
 19145                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19146  005364  0ED8               	movlw	low _dummy_encapsulated_cmd_response
 19147  005366  6E09               	movwf	_inPipes,c	;volatile
 19148  005368  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19149  00536A  6E0A               	movwf	_inPipes+1,c	;volatile
 19150                           
 19151                           ; BSR set to: 4
 19152                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 19153  00536C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19154                           
 19155                           ;usb_device_cdc.c: 217: break;
 19156  00536E  0012               	return	
 19157  005370                     i2l1735:
 19158                           
 19159                           ; BSR set to: 4
 19160                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 19161  005370  C436 F005          	movff	1078,_outPipes+4	;volatile
 19162  005374  C437 F006          	movff	1079,_outPipes+5	;volatile
 19163                           
 19164                           ; BSR set to: 4
 19165                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 19166  005378  0EAD               	movlw	low _cdc_notice
 19167  00537A  6E01               	movwf	_outPipes,c	;volatile
 19168                           
 19169                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 19170  00537C  0E10               	movlw	low _USART_mySetLineCodingHandler
 19171  00537E  6E07               	movwf	_outPipes+6,c	;volatile
 19172  005380  0E4D               	movlw	high _USART_mySetLineCodingHandler
 19173  005382  6E08               	movwf	_outPipes+7,c	;volatile
 19174                           
 19175                           ; BSR set to: 4
 19176                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 19177  005384  8E04               	bsf	_outPipes+3,7,c	;volatile
 19178                           
 19179                           ;usb_device_cdc.c: 224: break;
 19180  005386  0012               	return	
 19181  005388                     i2l5745:
 19182                           
 19183                           ; BSR set to: 4
 19184                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19185  005388  0EB7               	movlw	low _line_coding
 19186  00538A  6E09               	movwf	_inPipes,c	;volatile
 19187  00538C  6A0A               	clrf	_inPipes+1,c	;volatile
 19188                           
 19189                           ; BSR set to: 4
 19190  00538E  6A0E               	clrf	_inPipes+5,c	;volatile
 19191  005390  0E07               	movlw	7
 19192  005392  6E0D               	movwf	_inPipes+4,c	;volatile
 19193                           
 19194                           ; BSR set to: 4
 19195  005394  0EC1               	movlw	193
 19196  005396  6E0C               	movwf	_inPipes+3,c	;volatile
 19197                           
 19198                           ;usb_device_cdc.c: 231: break;
 19199  005398  0CC1               	retlw	193
 19200  00539A                     i2l5751:
 19201                           
 19202                           ; BSR set to: 4
 19203                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 19204  00539A  5132               	movf	50,w,b	;volatile
 19205                           
 19206                           ; BSR set to: 4
 19207                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 19208  00539C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19209                           
 19210                           ;usb_device_cdc.c: 256: break;
 19211  00539E  0012               	return	
 19212  0053A0                     i2l5757:
 19213                           
 19214                           ; BSR set to: 4
 19215  0053A0  5131               	movf	49,w,b	;volatile
 19216                           
 19217                           ; Switch size 1, requested type "speed"
 19218                           ; Number of cases is 5, Range of values is 0 to 34
 19219                           ; switch strategies available:
 19220                           ; Name         Instructions Cycles
 19221                           ; simple_byte           16     9 (average)
 19222                           ;	Chosen strategy is simple_byte
 19223  0053A2  E0D6               	bz	i2l5729
 19224  0053A4  0A01               	xorlw	1	; case 1
 19225  0053A6  E0DE               	bz	i2l5737
 19226  0053A8  0A21               	xorlw	33	; case 32
 19227  0053AA  E0E2               	bz	i2l1735
 19228  0053AC  0A01               	xorlw	1	; case 33
 19229  0053AE  E0EC               	bz	i2l5745
 19230  0053B0  0A03               	xorlw	3	; case 34
 19231  0053B2  E0F3               	bz	i2l5751
 19232                           
 19233                           ; BSR set to: 4
 19234  0053B4  0012               	return		;funcret
 19235  0053B6                     __end_of_USBCheckCDCRequest:
 19236                           	opt stack 0
 19237                           pclatu	equ	0xFFB
 19238                           pclath	equ	0xFFA
 19239                           tblptru	equ	0xFF8
 19240                           tblptrh	equ	0xFF7
 19241                           tblptrl	equ	0xFF6
 19242                           tablat	equ	0xFF5
 19243                           prodh	equ	0xFF4
 19244                           prodl	equ	0xFF3
 19245                           intcon	equ	0xFF2
 19246                           postinc0	equ	0xFEE
 19247                           wreg	equ	0xFE8
 19248                           indf1	equ	0xFE7
 19249                           fsr1h	equ	0xFE2
 19250                           fsr1l	equ	0xFE1
 19251                           indf2	equ	0xFDF
 19252                           postinc2	equ	0xFDE
 19253                           postdec2	equ	0xFDD
 19254                           plusw2	equ	0xFDB
 19255                           fsr2h	equ	0xFDA
 19256                           fsr2l	equ	0xFD9
 19257                           status	equ	0xFD8
 19258                           
 19259 ;; *************** function _USBCtrlTrfOutHandler *****************
 19260 ;; Defined at:
 19261 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 19262 ;; Parameters:    Size  Location     Type
 19263 ;;		None
 19264 ;; Auto vars:     Size  Location     Type
 19265 ;;		None
 19266 ;; Return value:  Size  Location     Type
 19267 ;;                  1    wreg      void 
 19268 ;; Registers used:
 19269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19270 ;; Tracked objects:
 19271 ;;		On entry : F/0
 19272 ;;		On exit  : F/0
 19273 ;;		Unchanged: 0/0
 19274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19275 ;;      Params:         0       0       0       0       0       0       0       0       0
 19276 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19278 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19279 ;;Total ram usage:        0 bytes
 19280 ;; Hardware stack levels used:    1
 19281 ;; Hardware stack levels required when called:    3
 19282 ;; This function calls:
 19283 ;;		_USBCtrlTrfRxService
 19284 ;; This function is called by:
 19285 ;;		_USBCtrlEPService
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           	psect	text101
 19290  004C6C                     __ptext101:
 19291                           	opt stack 0
 19292  004C6C                     _USBCtrlTrfOutHandler:
 19293                           	opt stack 14
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;usb_device.c: 2171: if(controlTransferState == 2)
 19297                           
 19298                           ; BSR set to: 4
 19299                           ;incstack = 0
 19300  004C6C  0E02               	movlw	2
 19301  004C6E  1821               	xorwf	_controlTransferState,w,c	;volatile
 19302  004C70  E102               	bnz	i2l1618
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;usb_device.c: 2172: {
 19306                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 19307  004C72  EF14  F033         	goto	_USBCtrlTrfRxService	;wreg free
 19308  004C76                     i2l1618:
 19309                           
 19310                           ; BSR set to: 0
 19311                           ;usb_device.c: 2175: else
 19312                           ;usb_device.c: 2176: {
 19313                           ;usb_device.c: 2179: controlTransferState = 0;
 19314  004C76  6A21               	clrf	_controlTransferState,c	;volatile
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 19318  004C78  518D               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 19319  004C7A  E11F               	bnz	i2l1620
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;usb_device.c: 2187: {
 19323                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 19324  004C7C  EE20 F001          	lfsr	2,1
 19325  004C80  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19326  004C82  26D9               	addwf	fsr2l,f,c
 19327  004C84  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19328  004C86  22DA               	addwfc	fsr2h,f,c
 19329  004C88  0E08               	movlw	8
 19330  004C8A  6EDF               	movwf	indf2,c
 19331                           
 19332                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19333  004C8C  EE20 F002          	lfsr	2,2
 19334  004C90  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19335  004C92  26D9               	addwf	fsr2l,f,c
 19336  004C94  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19337  004C96  22DA               	addwfc	fsr2h,f,c
 19338  004C98  0E30               	movlw	48
 19339  004C9A  6EDE               	movwf	postinc2,c
 19340  004C9C  0E04               	movlw	4
 19341  004C9E  6EDD               	movwf	postdec2,c
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19345  004CA0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19346  004CA4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19347  004CA8  0E0C               	movlw	12
 19348  004CAA  6EDF               	movwf	indf2,c
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19352  004CAC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19353  004CB0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19354  004CB4  0E00               	movlw	0
 19355  004CB6  8EDB               	bsf	plusw2,7,c
 19356                           
 19357                           ;usb_device.c: 2192: }
 19358  004CB8  0C00               	retlw	0
 19359  004CBA                     i2l1620:
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;usb_device.c: 2193: else
 19363                           ;usb_device.c: 2194: {
 19364                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 19365  004CBA  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19366                           
 19367                           ; BSR set to: 0
 19368  004CBC  0012               	return		;funcret
 19369  004CBE                     __end_of_USBCtrlTrfOutHandler:
 19370                           	opt stack 0
 19371                           pclatu	equ	0xFFB
 19372                           pclath	equ	0xFFA
 19373                           tblptru	equ	0xFF8
 19374                           tblptrh	equ	0xFF7
 19375                           tblptrl	equ	0xFF6
 19376                           tablat	equ	0xFF5
 19377                           prodh	equ	0xFF4
 19378                           prodl	equ	0xFF3
 19379                           intcon	equ	0xFF2
 19380                           postinc0	equ	0xFEE
 19381                           wreg	equ	0xFE8
 19382                           indf1	equ	0xFE7
 19383                           fsr1h	equ	0xFE2
 19384                           fsr1l	equ	0xFE1
 19385                           indf2	equ	0xFDF
 19386                           postinc2	equ	0xFDE
 19387                           postdec2	equ	0xFDD
 19388                           plusw2	equ	0xFDB
 19389                           fsr2h	equ	0xFDA
 19390                           fsr2l	equ	0xFD9
 19391                           status	equ	0xFD8
 19392                           
 19393 ;; *************** function _USBCtrlTrfRxService *****************
 19394 ;; Defined at:
 19395 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;		None
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  byteToRead      1   18[COMRAM] unsigned char 
 19400 ;;  i               1   17[COMRAM] unsigned char 
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  1    wreg      void 
 19403 ;; Registers used:
 19404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19405 ;; Tracked objects:
 19406 ;;		On entry : F/0
 19407 ;;		On exit  : F/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19410 ;;      Params:         0       0       0       0       0       0       0       0       0
 19411 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19413 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19414 ;;Total ram usage:        2 bytes
 19415 ;; Hardware stack levels used:    1
 19416 ;; Hardware stack levels required when called:    2
 19417 ;; This function calls:
 19418 ;;		_USART_mySetLineCodingHandler
 19419 ;;		_USBCtrlEPAllowStatusStage
 19420 ;; This function is called by:
 19421 ;;		_USBCtrlTrfOutHandler
 19422 ;; This function uses a non-reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text102
 19426  006628                     __ptext102:
 19427                           	opt stack 0
 19428  006628                     _USBCtrlTrfRxService:
 19429                           	opt stack 14
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;usb_device.c: 1520: uint8_t byteToRead;
 19433                           ;usb_device.c: 1521: uint8_t i;
 19434                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;incstack = 0
 19438  006628  EE20 F001          	lfsr	2,1
 19439  00662C  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19440  00662E  26D9               	addwf	fsr2l,f,c
 19441  006630  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19442  006632  22DA               	addwfc	fsr2h,f,c
 19443  006634  50DF               	movf	indf2,w,c
 19444  006636  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 19448  006638  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19449  00663A  5C05               	subwf	_outPipes+4,w,c	;volatile
 19450  00663C  0E00               	movlw	0
 19451  00663E  5806               	subwfb	_outPipes+5,w,c	;volatile
 19452  006640  E202               	bc	i2l6439
 19453                           
 19454                           ; BSR set to: 0
 19455                           ;usb_device.c: 1532: {
 19456                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 19457  006642  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19458  006646                     i2l6439:
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;usb_device.c: 1534: }
 19462                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 19463  006646  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19464  006648  5E05               	subwf	_outPipes+4,f,c	;volatile
 19465  00664A  0E00               	movlw	0
 19466  00664C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 19470  00664E  6A3F               	clrf	USBCtrlTrfRxService@i,c
 19471  006650  D00D               	goto	i2l6449
 19472  006652                     i2l6443:
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;usb_device.c: 1541: {
 19476                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19477  006652  0E38               	movlw	56
 19478  006654  243F               	addwf	USBCtrlTrfRxService@i,w,c
 19479  006656  6ED9               	movwf	fsr2l,c
 19480  006658  6ADA               	clrf	fsr2h,c
 19481  00665A  0E04               	movlw	4
 19482  00665C  22DA               	addwfc	fsr2h,f,c
 19483  00665E  5001               	movf	_outPipes,w,c	;volatile
 19484  006660  6EE1               	movwf	fsr1l,c
 19485  006662  6AE2               	clrf	fsr1h,c
 19486  006664  CFDF FFE7          	movff	indf2,indf1
 19487                           
 19488                           ; BSR set to: 0
 19489  006668  2A01               	incf	_outPipes,f,c	;volatile
 19490                           
 19491                           ; BSR set to: 0
 19492  00666A  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 19493  00666C                     i2l6449:
 19494                           
 19495                           ; BSR set to: 0
 19496  00666C  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19497  00666E  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 19498  006670  E3F0               	bnc	i2l6443
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;usb_device.c: 1543: }
 19502                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 19503  006672  5005               	movf	_outPipes+4,w,c	;volatile
 19504  006674  1006               	iorwf	_outPipes+5,w,c	;volatile
 19505  006676  E032               	bz	i2l6465
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;usb_device.c: 1548: {
 19509                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 19510  006678  EE20 F001          	lfsr	2,1
 19511  00667C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19512  00667E  26D9               	addwf	fsr2l,f,c
 19513  006680  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19514  006682  22DA               	addwfc	fsr2h,f,c
 19515  006684  0E08               	movlw	8
 19516  006686  6EDF               	movwf	indf2,c
 19517                           
 19518                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19519  006688  EE20 F002          	lfsr	2,2
 19520  00668C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19521  00668E  26D9               	addwf	fsr2l,f,c
 19522  006690  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19523  006692  22DA               	addwfc	fsr2h,f,c
 19524  006694  0E38               	movlw	56
 19525  006696  6EDE               	movwf	postinc2,c
 19526  006698  0E04               	movlw	4
 19527  00669A  6EDD               	movwf	postdec2,c
 19528                           
 19529                           ; BSR set to: 0
 19530                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19531  00669C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19532  0066A0  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19533  0066A4  BCDF               	btfsc	indf2,6,c
 19534  0066A6  D00D               	goto	i2l6461
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;usb_device.c: 1552: {
 19538                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19539  0066A8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19540  0066AC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19541  0066B0  0E48               	movlw	72
 19542  0066B2  6EDF               	movwf	indf2,c
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19546  0066B4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19547  0066B8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19548  0066BC  0E00               	movlw	0
 19549  0066BE  8EDB               	bsf	plusw2,7,c
 19550                           
 19551                           ;usb_device.c: 1555: }
 19552  0066C0  0C00               	retlw	0
 19553  0066C2                     i2l6461:
 19554                           
 19555                           ; BSR set to: 0
 19556                           ;usb_device.c: 1556: else
 19557                           ;usb_device.c: 1557: {
 19558                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19559  0066C2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19560  0066C6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19561  0066CA  0E08               	movlw	8
 19562  0066CC  6EDF               	movwf	indf2,c
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19566  0066CE  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19567  0066D2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19568  0066D6  0E00               	movlw	0
 19569  0066D8  8EDB               	bsf	plusw2,7,c
 19570  0066DA  0C00               	retlw	0
 19571  0066DC                     i2l6465:
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;usb_device.c: 1562: else
 19575                           ;usb_device.c: 1563: {
 19576                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 19577  0066DC  EE20 F001          	lfsr	2,1
 19578  0066E0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19579  0066E2  26D9               	addwf	fsr2l,f,c
 19580  0066E4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19581  0066E6  22DA               	addwfc	fsr2h,f,c
 19582  0066E8  0E08               	movlw	8
 19583  0066EA  6EDF               	movwf	indf2,c
 19584                           
 19585                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19586  0066EC  EE20 F002          	lfsr	2,2
 19587  0066F0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19588  0066F2  26D9               	addwf	fsr2l,f,c
 19589  0066F4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19590  0066F6  22DA               	addwfc	fsr2h,f,c
 19591  0066F8  0E30               	movlw	48
 19592  0066FA  6EDE               	movwf	postinc2,c
 19593  0066FC  0E04               	movlw	4
 19594  0066FE  6EDD               	movwf	postdec2,c
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19598  006700  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19599  006704  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19600  006708  6EDF               	movwf	indf2,c
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19604  00670A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19605  00670E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19606  006712  0E00               	movlw	0
 19607  006714  8EDB               	bsf	plusw2,7,c
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 19611  006716  5007               	movf	_outPipes+6,w,c	;volatile
 19612  006718  1008               	iorwf	_outPipes+7,w,c	;volatile
 19613  00671A  E00E               	bz	i2l6475
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;usb_device.c: 1581: {
 19617                           ;usb_device.c: 1586: outPipes[0].pFunc();
 19618  00671C  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 19619  006720  D801               	call	i2u435_48
 19620  006722  D00A               	goto	i2l6475
 19621  006724                     i2u435_48:
 19622  006724  0005               	push	
 19623  006726  6EFA               	movwf	pclath,c
 19624  006728  50DE               	movf	postinc2,w,c
 19625  00672A  6EFD               	movwf	tosl,c
 19626  00672C  50DE               	movf	postinc2,w,c
 19627  00672E  6EFE               	movwf	tosh,c
 19628  006730  50F8               	movf	tblptru,w,c
 19629  006732  6EFF               	movwf	tosu,c
 19630  006734  50FA               	movf	pclath,w,c
 19631  006736  0012               	return		;indir
 19632  006738                     i2l6475:
 19633                           
 19634                           ; BSR set to: 0
 19635                           ;usb_device.c: 1588: }
 19636                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 19637  006738  9E04               	bcf	_outPipes+3,7,c	;volatile
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 19641  00673A  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19642  00673C  B4D8               	btfsc	status,2,c
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;usb_device.c: 1604: {
 19646                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 19647  00673E  EC4B  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19648                           
 19649                           ; BSR set to: 0
 19650  006742  0012               	return		;funcret
 19651  006744                     __end_of_USBCtrlTrfRxService:
 19652                           	opt stack 0
 19653                           tosu	equ	0xFFF
 19654                           tosh	equ	0xFFE
 19655                           tosl	equ	0xFFD
 19656                           pclatu	equ	0xFFB
 19657                           pclath	equ	0xFFA
 19658                           tblptru	equ	0xFF8
 19659                           tblptrh	equ	0xFF7
 19660                           tblptrl	equ	0xFF6
 19661                           tablat	equ	0xFF5
 19662                           prodh	equ	0xFF4
 19663                           prodl	equ	0xFF3
 19664                           intcon	equ	0xFF2
 19665                           postinc0	equ	0xFEE
 19666                           wreg	equ	0xFE8
 19667                           indf1	equ	0xFE7
 19668                           fsr1h	equ	0xFE2
 19669                           fsr1l	equ	0xFE1
 19670                           indf2	equ	0xFDF
 19671                           postinc2	equ	0xFDE
 19672                           postdec2	equ	0xFDD
 19673                           plusw2	equ	0xFDB
 19674                           fsr2h	equ	0xFDA
 19675                           fsr2l	equ	0xFD9
 19676                           status	equ	0xFD8
 19677                           
 19678 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19679 ;; Defined at:
 19680 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 19681 ;; Parameters:    Size  Location     Type
 19682 ;;		None
 19683 ;; Auto vars:     Size  Location     Type
 19684 ;;		None
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  1    wreg      void 
 19687 ;; Registers used:
 19688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19689 ;; Tracked objects:
 19690 ;;		On entry : 0/0
 19691 ;;		On exit  : F/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19694 ;;      Params:         0       0       0       0       0       0       0       0       0
 19695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19698 ;;Total ram usage:        0 bytes
 19699 ;; Hardware stack levels used:    1
 19700 ;; This function calls:
 19701 ;;		Nothing
 19702 ;; This function is called by:
 19703 ;;		_USBDeviceTasks
 19704 ;;		_USBCtrlEPServiceComplete
 19705 ;;		_USBCtrlTrfRxService
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text103
 19710  005A96                     __ptext103:
 19711                           	opt stack 0
 19712  005A96                     _USBCtrlEPAllowStatusStage:
 19713                           	opt stack 15
 19714                           
 19715                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;incstack = 0
 19719  005A96  0100               	movlb	0	; () banked
 19720  005A98  5192               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 19721  005A9A  A4D8               	btfss	status,2,c
 19722  005A9C  0012               	return	
 19723                           
 19724                           ; BSR set to: 0
 19725                           ;usb_device.c: 1112: {
 19726                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 19727  005A9E  0E01               	movlw	1
 19728  005AA0  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19729                           
 19730                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 19731  005AA2  5193               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 19732  005AA4  A4D8               	btfss	status,2,c
 19733  005AA6  0012               	return	
 19734                           
 19735                           ; BSR set to: 0
 19736                           ;usb_device.c: 1115: {
 19737                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 19738  005AA8  0E01               	movlw	1
 19739  005AAA  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;usb_device.c: 1120: if(controlTransferState == 2)
 19743  005AAC  0E02               	movlw	2
 19744  005AAE  1821               	xorwf	_controlTransferState,w,c	;volatile
 19745  005AB0  E114               	bnz	i2l6027
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;usb_device.c: 1121: {
 19749                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 19750  005AB2  EE20 F001          	lfsr	2,1
 19751  005AB6  500F               	movf	_pBDTEntryIn,w,c
 19752  005AB8  26D9               	addwf	fsr2l,f,c
 19753  005ABA  5010               	movf	_pBDTEntryIn+1,w,c
 19754  005ABC  22DA               	addwfc	fsr2h,f,c
 19755  005ABE  6ADF               	clrf	indf2,c
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19759  005AC0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19760  005AC4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19761  005AC8  0E48               	movlw	72
 19762  005ACA  6EDF               	movwf	indf2,c
 19763                           
 19764                           ; BSR set to: 0
 19765                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19766  005ACC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19767  005AD0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19768  005AD4  0E00               	movlw	0
 19769  005AD6  8EDB               	bsf	plusw2,7,c
 19770                           
 19771                           ;usb_device.c: 1125: }
 19772  005AD8  0C00               	retlw	0
 19773  005ADA                     i2l6027:
 19774                           
 19775                           ; BSR set to: 0
 19776                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 19777  005ADA  0421               	decf	_controlTransferState,w,c	;volatile
 19778  005ADC  A4D8               	btfss	status,2,c
 19779  005ADE  0012               	return	
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;usb_device.c: 1127: {
 19783                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 19784  005AE0  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 19788  005AE2  EE20 F001          	lfsr	2,1
 19789  005AE6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19790  005AE8  26D9               	addwf	fsr2l,f,c
 19791  005AEA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19792  005AEC  22DA               	addwfc	fsr2h,f,c
 19793  005AEE  0E08               	movlw	8
 19794  005AF0  6EDF               	movwf	indf2,c
 19795                           
 19796                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19797  005AF2  EE20 F002          	lfsr	2,2
 19798  005AF6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19799  005AF8  26D9               	addwf	fsr2l,f,c
 19800  005AFA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19801  005AFC  22DA               	addwfc	fsr2h,f,c
 19802  005AFE  0E30               	movlw	48
 19803  005B00  6EDE               	movwf	postinc2,c
 19804  005B02  0E04               	movlw	4
 19805  005B04  6EDD               	movwf	postdec2,c
 19806                           
 19807                           ; BSR set to: 0
 19808                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19809  005B06  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19810  005B0A  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19811  005B0E  6EDF               	movwf	indf2,c
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19815  005B10  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19816  005B14  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19817  005B18  0E00               	movlw	0
 19818  005B1A  8EDB               	bsf	plusw2,7,c
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 19822  005B1C  0E01               	movlw	1
 19823  005B1E  6F8D               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 19827  005B20  EE20 F001          	lfsr	2,1
 19828  005B24  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19829  005B26  26D9               	addwf	fsr2l,f,c
 19830  005B28  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19831  005B2A  22DA               	addwfc	fsr2h,f,c
 19832  005B2C  0E08               	movlw	8
 19833  005B2E  6EDF               	movwf	indf2,c
 19834                           
 19835                           ; BSR set to: 0
 19836                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19837  005B30  EE20 F002          	lfsr	2,2
 19838  005B34  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19839  005B36  26D9               	addwf	fsr2l,f,c
 19840  005B38  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19841  005B3A  22DA               	addwfc	fsr2h,f,c
 19842  005B3C  0E30               	movlw	48
 19843  005B3E  6EDE               	movwf	postinc2,c
 19844  005B40  0E04               	movlw	4
 19845  005B42  6EDD               	movwf	postdec2,c
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19849  005B44  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19850  005B48  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19851  005B4C  0E80               	movlw	128
 19852  005B4E  6EDF               	movwf	indf2,c
 19853  005B50  0C80               	retlw	128
 19854  005B52                     __end_of_USBCtrlEPAllowStatusStage:
 19855                           	opt stack 0
 19856                           tosu	equ	0xFFF
 19857                           tosh	equ	0xFFE
 19858                           tosl	equ	0xFFD
 19859                           pclatu	equ	0xFFB
 19860                           pclath	equ	0xFFA
 19861                           tblptru	equ	0xFF8
 19862                           tblptrh	equ	0xFF7
 19863                           tblptrl	equ	0xFF6
 19864                           tablat	equ	0xFF5
 19865                           prodh	equ	0xFF4
 19866                           prodl	equ	0xFF3
 19867                           intcon	equ	0xFF2
 19868                           postinc0	equ	0xFEE
 19869                           wreg	equ	0xFE8
 19870                           indf1	equ	0xFE7
 19871                           fsr1h	equ	0xFE2
 19872                           fsr1l	equ	0xFE1
 19873                           indf2	equ	0xFDF
 19874                           postinc2	equ	0xFDE
 19875                           postdec2	equ	0xFDD
 19876                           plusw2	equ	0xFDB
 19877                           fsr2h	equ	0xFDA
 19878                           fsr2l	equ	0xFD9
 19879                           status	equ	0xFD8
 19880                           
 19881 ;; *************** function _USBCtrlTrfInHandler *****************
 19882 ;; Defined at:
 19883 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 19884 ;; Parameters:    Size  Location     Type
 19885 ;;		None
 19886 ;; Auto vars:     Size  Location     Type
 19887 ;;  lastDTS         1   17[COMRAM] unsigned char 
 19888 ;; Return value:  Size  Location     Type
 19889 ;;                  1    wreg      void 
 19890 ;; Registers used:
 19891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 19892 ;; Tracked objects:
 19893 ;;		On entry : F/0
 19894 ;;		On exit  : F/0
 19895 ;;		Unchanged: 0/0
 19896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19897 ;;      Params:         0       0       0       0       0       0       0       0       0
 19898 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19900 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19901 ;;Total ram usage:        1 bytes
 19902 ;; Hardware stack levels used:    1
 19903 ;; Hardware stack levels required when called:    2
 19904 ;; This function calls:
 19905 ;;		_USART_mySetLineCodingHandler
 19906 ;;		_USBCtrlTrfTxService
 19907 ;; This function is called by:
 19908 ;;		_USBCtrlEPService
 19909 ;; This function uses a non-reentrant model
 19910 ;;
 19911                           
 19912                           	psect	text104
 19913  005C14                     __ptext104:
 19914                           	opt stack 0
 19915  005C14                     _USBCtrlTrfInHandler:
 19916                           	opt stack 15
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;usb_device.c: 2225: uint8_t lastDTS;
 19920                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19921                           
 19922                           ; BSR set to: 0
 19923                           ;incstack = 0
 19924  005C14  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19925  005C18  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19926  005C1C  0E00               	movlw	0
 19927  005C1E  BCDF               	btfsc	indf2,6,c
 19928  005C20  0E01               	movlw	1
 19929  005C22  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19930                           
 19931                           ; BSR set to: 0
 19932                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19933  005C24  0E04               	movlw	4
 19934  005C26  1A0F               	xorwf	_pBDTEntryIn,f,c
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 19938  005C28  0E08               	movlw	8
 19939  005C2A  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 19940  005C2C  E10A               	bnz	i2l7225
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;usb_device.c: 2236: {
 19944                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 19945  005C2E  0104               	movlb	4	; () banked
 19946  005C30  5132               	movf	50,w,b	;volatile
 19947  005C32  0B7F               	andlw	127
 19948  005C34  6E63               	movwf	3939,c	;volatile
 19949                           
 19950                           ; BSR set to: 4
 19951                           ;usb_device.c: 2238: if(UADDR != 0u)
 19952  005C36  5063               	movf	3939,w,c
 19953                           
 19954                           ; BSR set to: 4
 19955                           ;usb_device.c: 2239: {
 19956                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 19957  005C38  0E10               	movlw	16
 19958  005C3A  B4D8               	btfsc	status,2,c
 19959                           
 19960                           ; BSR set to: 4
 19961                           ;usb_device.c: 2242: else
 19962                           ;usb_device.c: 2243: {
 19963                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 19964  005C3C  0E04               	movlw	4
 19965                           
 19966                           ;usb_device.c: 2241: }
 19967  005C3E  0100               	movlb	0	; () banked
 19968  005C40  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 19969  005C42                     i2l7225:
 19970                           
 19971                           ; BSR set to: 0
 19972                           ;usb_device.c: 2245: }
 19973                           ;usb_device.c: 2246: }
 19974                           ;usb_device.c: 2249: if(controlTransferState == 1)
 19975  005C42  0421               	decf	_controlTransferState,w,c	;volatile
 19976  005C44  E138               	bnz	i2l1628
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;usb_device.c: 2250: {
 19980                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19981  005C46  EE20 F002          	lfsr	2,2
 19982  005C4A  500F               	movf	_pBDTEntryIn,w,c
 19983  005C4C  26D9               	addwf	fsr2l,f,c
 19984  005C4E  5010               	movf	_pBDTEntryIn+1,w,c
 19985  005C50  22DA               	addwfc	fsr2h,f,c
 19986  005C52  0E38               	movlw	56
 19987  005C54  6EDE               	movwf	postinc2,c
 19988  005C56  0E04               	movlw	4
 19989  005C58  6EDD               	movwf	postdec2,c
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 19993  005C5A  ECA9  F02D         	call	_USBCtrlTrfTxService	;wreg free
 19994                           
 19995                           ; BSR set to: 0
 19996                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 19997  005C5E  0E02               	movlw	2
 19998  005C60  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 19999  005C62  E10D               	bnz	i2l7237
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;usb_device.c: 2259: {
 20003                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 20004  005C64  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20005  005C68  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20006  005C6C  0E04               	movlw	4
 20007  005C6E  6EDF               	movwf	indf2,c
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20011  005C70  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20012  005C74  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20013  005C78  0E00               	movlw	0
 20014  005C7A  8EDB               	bsf	plusw2,7,c
 20015                           
 20016                           ;usb_device.c: 2264: }
 20017  005C7C  0C00               	retlw	0
 20018  005C7E                     i2l7237:
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;usb_device.c: 2265: else
 20022                           ;usb_device.c: 2266: {
 20023                           ;usb_device.c: 2267: if(lastDTS == 0)
 20024  005C7E  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 20025  005C80  E10D               	bnz	i2l7243
 20026                           
 20027                           ; BSR set to: 0
 20028                           ;usb_device.c: 2268: {
 20029                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20030  005C82  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20031  005C86  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20032  005C8A  0E48               	movlw	72
 20033  005C8C  6EDF               	movwf	indf2,c
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20037  005C8E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20038  005C92  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20039  005C96  0E00               	movlw	0
 20040  005C98  8EDB               	bsf	plusw2,7,c
 20041                           
 20042                           ;usb_device.c: 2271: }
 20043  005C9A  0C00               	retlw	0
 20044  005C9C                     i2l7243:
 20045                           
 20046                           ; BSR set to: 0
 20047                           ;usb_device.c: 2272: else
 20048                           ;usb_device.c: 2273: {
 20049                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20050  005C9C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20051  005CA0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20052  005CA4  0E08               	movlw	8
 20053  005CA6  6EDF               	movwf	indf2,c
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20057  005CA8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20058  005CAC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20059  005CB0  0E00               	movlw	0
 20060  005CB2  8EDB               	bsf	plusw2,7,c
 20061  005CB4  0C00               	retlw	0
 20062  005CB6                     i2l1628:
 20063                           
 20064                           ; BSR set to: 0
 20065                           ;usb_device.c: 2279: else
 20066                           ;usb_device.c: 2280: {
 20067                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 20068  005CB6  AE04               	btfss	_outPipes+3,7,c	;volatile
 20069  005CB8  D012               	goto	i2l7253
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;usb_device.c: 2285: {
 20073                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 20074  005CBA  5007               	movf	_outPipes+6,w,c	;volatile
 20075  005CBC  1008               	iorwf	_outPipes+7,w,c	;volatile
 20076  005CBE  E00E               	bz	i2l7251
 20077                           
 20078                           ; BSR set to: 0
 20079                           ;usb_device.c: 2287: {
 20080                           ;usb_device.c: 2288: outPipes[0].pFunc();
 20081  005CC0  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 20082  005CC4  D801               	call	i2u522_48
 20083  005CC6  D00A               	goto	i2l7251
 20084  005CC8                     i2u522_48:
 20085  005CC8  0005               	push	
 20086  005CCA  6EFA               	movwf	pclath,c
 20087  005CCC  50DE               	movf	postinc2,w,c
 20088  005CCE  6EFD               	movwf	tosl,c
 20089  005CD0  50DE               	movf	postinc2,w,c
 20090  005CD2  6EFE               	movwf	tosh,c
 20091  005CD4  50F8               	movf	tblptru,w,c
 20092  005CD6  6EFF               	movwf	tosu,c
 20093  005CD8  50FA               	movf	pclath,w,c
 20094  005CDA  0012               	return		;indir
 20095  005CDC                     i2l7251:
 20096                           
 20097                           ; BSR set to: 0
 20098                           ;usb_device.c: 2289: }
 20099                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 20100  005CDC  9E04               	bcf	_outPipes+3,7,c	;volatile
 20101  005CDE                     i2l7253:
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;usb_device.c: 2291: }
 20105                           ;usb_device.c: 2293: controlTransferState = 0;
 20106  005CDE  6A21               	clrf	_controlTransferState,c	;volatile
 20107                           
 20108                           ; BSR set to: 0
 20109  005CE0  0012               	return		;funcret
 20110  005CE2                     __end_of_USBCtrlTrfInHandler:
 20111                           	opt stack 0
 20112                           tosu	equ	0xFFF
 20113                           tosh	equ	0xFFE
 20114                           tosl	equ	0xFFD
 20115                           pclatu	equ	0xFFB
 20116                           pclath	equ	0xFFA
 20117                           tblptru	equ	0xFF8
 20118                           tblptrh	equ	0xFF7
 20119                           tblptrl	equ	0xFF6
 20120                           tablat	equ	0xFF5
 20121                           prodh	equ	0xFF4
 20122                           prodl	equ	0xFF3
 20123                           intcon	equ	0xFF2
 20124                           postinc0	equ	0xFEE
 20125                           wreg	equ	0xFE8
 20126                           indf1	equ	0xFE7
 20127                           fsr1h	equ	0xFE2
 20128                           fsr1l	equ	0xFE1
 20129                           indf2	equ	0xFDF
 20130                           postinc2	equ	0xFDE
 20131                           postdec2	equ	0xFDD
 20132                           plusw2	equ	0xFDB
 20133                           fsr2h	equ	0xFDA
 20134                           fsr2l	equ	0xFD9
 20135                           status	equ	0xFD8
 20136                           
 20137 ;; *************** function _USBCtrlTrfTxService *****************
 20138 ;; Defined at:
 20139 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 20140 ;; Parameters:    Size  Location     Type
 20141 ;;		None
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20144 ;; Return value:  Size  Location     Type
 20145 ;;                  1    wreg      void 
 20146 ;; Registers used:
 20147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20148 ;; Tracked objects:
 20149 ;;		On entry : B/4
 20150 ;;		On exit  : F/0
 20151 ;;		Unchanged: 0/0
 20152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20153 ;;      Params:         0       0       0       0       0       0       0       0       0
 20154 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20155 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20156 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20157 ;;Total ram usage:        1 bytes
 20158 ;; Hardware stack levels used:    1
 20159 ;; This function calls:
 20160 ;;		Nothing
 20161 ;; This function is called by:
 20162 ;;		_USBCtrlEPAllowDataStage
 20163 ;;		_USBCtrlTrfInHandler
 20164 ;; This function uses a non-reentrant model
 20165 ;;
 20166                           
 20167                           	psect	text105
 20168  005B52                     __ptext105:
 20169                           	opt stack 0
 20170  005B52                     _USBCtrlTrfTxService:
 20171                           	opt stack 14
 20172                           
 20173                           ;usb_device.c: 1439: uint8_t byteToSend;
 20174                           ;usb_device.c: 1443: byteToSend = 8;
 20175                           
 20176                           ; BSR set to: 0
 20177                           ;incstack = 0
 20178  005B52  0E08               	movlw	8
 20179  005B54  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20180                           
 20181                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 20182  005B56  500E               	movf	_inPipes+5,w,c	;volatile
 20183  005B58  E10D               	bnz	i2l5825
 20184  005B5A  0E08               	movlw	8
 20185  005B5C  5C0D               	subwf	_inPipes+4,w,c	;volatile
 20186  005B5E  E20A               	bc	i2l5825
 20187                           
 20188                           ;usb_device.c: 1445: {
 20189                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 20190  005B60  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20191                           
 20192                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 20193  005B64  502B               	movf	_shortPacketStatus,w,c	;volatile
 20194  005B66  E102               	bnz	i2l5821
 20195                           
 20196                           ;usb_device.c: 1454: {
 20197                           ;usb_device.c: 1455: shortPacketStatus = 1;
 20198  005B68  0E01               	movlw	1
 20199  005B6A  D003               	goto	L31
 20200  005B6C                     i2l5821:
 20201                           
 20202                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 20203  005B6C  042B               	decf	_shortPacketStatus,w,c	;volatile
 20204  005B6E  E102               	bnz	i2l5825
 20205                           
 20206                           ;usb_device.c: 1458: {
 20207                           ;usb_device.c: 1459: shortPacketStatus = 2;
 20208  005B70  0E02               	movlw	2
 20209  005B72                     L31:
 20210  005B72  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20211  005B74                     i2l5825:
 20212                           
 20213                           ;usb_device.c: 1460: }
 20214                           ;usb_device.c: 1461: }
 20215                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 20216  005B74  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20217  005B76  5E0D               	subwf	_inPipes+4,f,c	;volatile
 20218  005B78  0E00               	movlw	0
 20219  005B7A  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 20220                           
 20221                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 20222  005B7C  EE20 F001          	lfsr	2,1
 20223  005B80  500F               	movf	_pBDTEntryIn,w,c
 20224  005B82  26D9               	addwf	fsr2l,f,c
 20225  005B84  5010               	movf	_pBDTEntryIn+1,w,c
 20226  005B86  22DA               	addwfc	fsr2h,f,c
 20227  005B88  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20228                           
 20229                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 20230  005B8C  0E38               	movlw	56
 20231  005B8E  0100               	movlb	0	; () banked
 20232  005B90  6F7F               	movwf	_pDst& (0+255),b
 20233  005B92  0E04               	movlw	4
 20234  005B94  6F80               	movwf	(_pDst+1)& (0+255),b
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20238  005B96  B00C               	btfsc	_inPipes+3,0,c	;volatile
 20239  005B98  D03A               	goto	i2l5853
 20240  005B9A  D01B               	goto	i2l5843
 20241  005B9C                     i2l5835:
 20242                           
 20243                           ; BSR set to: 0
 20244                           ;usb_device.c: 1478: {
 20245                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 20246  005B9C  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20247  005BA0  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20248  005BA4  6AF8               	clrf	tblptru,c
 20249  005BA6  C07F  FFD9         	movff	_pDst,fsr2l
 20250  005BAA  C080  FFDA         	movff	_pDst+1,fsr2h
 20251  005BAE  0E07               	movlw	(high __ramtop+-1)
 20252  005BB0  64F7               	cpfsgt	tblptrh,c
 20253  005BB2  D003               	bra	i2u353_47
 20254  005BB4  0008               	tblrd		*
 20255  005BB6  50F5               	movf	tablat,w,c
 20256  005BB8  D005               	bra	i2u353_40
 20257  005BBA                     i2u353_47:
 20258  005BBA  CFF6 FFE1          	movff	tblptrl,fsr1l
 20259  005BBE  CFF7 FFE2          	movff	tblptrh,fsr1h
 20260  005BC2  50E7               	movf	indf1,w,c
 20261  005BC4                     i2u353_40:
 20262  005BC4  6EDF               	movwf	indf2,c
 20263  005BC6  4A09               	infsnz	_inPipes,f,c	;volatile
 20264  005BC8  2A0A               	incf	_inPipes+1,f,c	;volatile
 20265  005BCA  0100               	movlb	0	; () banked
 20266  005BCC  4B7F               	infsnz	_pDst& (0+255),f,b
 20267  005BCE  2B80               	incf	(_pDst+1)& (0+255),f,b
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;usb_device.c: 1480: byteToSend--;
 20271  005BD0  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20272  005BD2                     i2l5843:
 20273                           
 20274                           ; BSR set to: 0
 20275  005BD2  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20276  005BD4  E1E3               	bnz	i2l5835
 20277  005BD6  0012               	return	
 20278  005BD8                     i2l5845:
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;usb_device.c: 1486: {
 20282                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 20283  005BD8  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20284  005BDC  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20285  005BE0  6AF8               	clrf	tblptru,c
 20286  005BE2  C07F  FFD9         	movff	_pDst,fsr2l
 20287  005BE6  C080  FFDA         	movff	_pDst+1,fsr2h
 20288  005BEA  0E07               	movlw	(high __ramtop+-1)
 20289  005BEC  64F7               	cpfsgt	tblptrh,c
 20290  005BEE  D003               	bra	i2u355_47
 20291  005BF0  0008               	tblrd		*
 20292  005BF2  50F5               	movf	tablat,w,c
 20293  005BF4  D005               	bra	i2u355_40
 20294  005BF6                     i2u355_47:
 20295  005BF6  CFF6 FFE1          	movff	tblptrl,fsr1l
 20296  005BFA  CFF7 FFE2          	movff	tblptrh,fsr1h
 20297  005BFE  50E7               	movf	indf1,w,c
 20298  005C00                     i2u355_40:
 20299  005C00  6EDF               	movwf	indf2,c
 20300  005C02  4A09               	infsnz	_inPipes,f,c	;volatile
 20301  005C04  2A0A               	incf	_inPipes+1,f,c	;volatile
 20302  005C06  0100               	movlb	0	; () banked
 20303  005C08  4B7F               	infsnz	_pDst& (0+255),f,b
 20304  005C0A  2B80               	incf	(_pDst+1)& (0+255),f,b
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;usb_device.c: 1488: byteToSend--;
 20308  005C0C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20309  005C0E                     i2l5853:
 20310                           
 20311                           ; BSR set to: 0
 20312  005C0E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20313  005C10  E1E3               	bnz	i2l5845
 20314                           
 20315                           ; BSR set to: 0
 20316  005C12  0012               	return		;funcret
 20317  005C14                     __end_of_USBCtrlTrfTxService:
 20318                           	opt stack 0
 20319                           tosu	equ	0xFFF
 20320                           tosh	equ	0xFFE
 20321                           tosl	equ	0xFFD
 20322                           pclatu	equ	0xFFB
 20323                           pclath	equ	0xFFA
 20324                           tblptru	equ	0xFF8
 20325                           tblptrh	equ	0xFF7
 20326                           tblptrl	equ	0xFF6
 20327                           tablat	equ	0xFF5
 20328                           prodh	equ	0xFF4
 20329                           prodl	equ	0xFF3
 20330                           intcon	equ	0xFF2
 20331                           postinc0	equ	0xFEE
 20332                           wreg	equ	0xFE8
 20333                           indf1	equ	0xFE7
 20334                           fsr1h	equ	0xFE2
 20335                           fsr1l	equ	0xFE1
 20336                           indf2	equ	0xFDF
 20337                           postinc2	equ	0xFDE
 20338                           postdec2	equ	0xFDD
 20339                           plusw2	equ	0xFDB
 20340                           fsr2h	equ	0xFDA
 20341                           fsr2l	equ	0xFD9
 20342                           status	equ	0xFD8
 20343                           
 20344 ;; *************** function _USART_mySetLineCodingHandler *****************
 20345 ;; Defined at:
 20346 ;;		line 236 in file "../Includes/Board/USBapp.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;		None
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;  dwBaud          4   13[COMRAM] unsigned long 
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      void 
 20353 ;; Registers used:
 20354 ;;		wreg, status,2, status,0, cstack
 20355 ;; Tracked objects:
 20356 ;;		On entry : F/0
 20357 ;;		On exit  : F/0
 20358 ;;		Unchanged: F/0
 20359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20360 ;;      Params:         0       0       0       0       0       0       0       0       0
 20361 ;;      Locals:         4       0       0       0       0       0       0       0       0
 20362 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20363 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20364 ;;Total ram usage:        4 bytes
 20365 ;; Hardware stack levels used:    1
 20366 ;; Hardware stack levels required when called:    1
 20367 ;; This function calls:
 20368 ;;		___lldiv
 20369 ;;		i2_EUSART_Initialize
 20370 ;; This function is called by:
 20371 ;;		_USBCheckCDCRequest
 20372 ;;		_USBCtrlTrfRxService
 20373 ;;		_USBCtrlTrfInHandler
 20374 ;; This function uses a non-reentrant model
 20375 ;;
 20376                           
 20377                           	psect	text106
 20378  004D10                     __ptext106:
 20379                           	opt stack 0
 20380  004D10                     _USART_mySetLineCodingHandler:
 20381                           	opt stack 14
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;incstack = 0
 20388  004D10  C0AD  F0B7         	movff	_cdc_notice,_line_coding
 20389  004D14  C0AE  F0B8         	movff	_cdc_notice+1,_line_coding+1
 20390  004D18  C0AF  F0B9         	movff	_cdc_notice+2,_line_coding+2
 20391  004D1C  C0B0  F0BA         	movff	_cdc_notice+3,_line_coding+3
 20392                           
 20393                           ; BSR set to: 0
 20394                           ;USBapp.c: 241: uint32_t dwBaud;
 20395                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 20396  004D20  6A2E               	clrf	___lldiv@dividend,c
 20397  004D22  0E1B               	movlw	27
 20398  004D24  6E2F               	movwf	___lldiv@dividend+1,c
 20399  004D26  0EB7               	movlw	183
 20400  004D28  6E30               	movwf	___lldiv@dividend+2,c
 20401  004D2A  6A31               	clrf	___lldiv@dividend+3,c
 20402  004D2C  C0B7  F032         	movff	_line_coding,___lldiv@divisor
 20403  004D30  C0B8  F033         	movff	_line_coding+1,___lldiv@divisor+1
 20404  004D34  C0B9  F034         	movff	_line_coding+2,___lldiv@divisor+2
 20405  004D38  C0BA  F035         	movff	_line_coding+3,___lldiv@divisor+3
 20406  004D3C  EC65  F028         	call	___lldiv	;wreg free
 20407  004D40  0EFF               	movlw	255
 20408  004D42  242E               	addwf	?___lldiv,w,c
 20409  004D44  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 20410  004D46  0EFF               	movlw	255
 20411  004D48  202F               	addwfc	?___lldiv+1,w,c
 20412  004D4A  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 20413  004D4C  0EFF               	movlw	255
 20414  004D4E  2030               	addwfc	?___lldiv+2,w,c
 20415  004D50  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 20416  004D52  0EFF               	movlw	255
 20417  004D54  2031               	addwfc	?___lldiv+3,w,c
 20418  004D56  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 20422  004D58  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 20426  004D5C  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;USBapp.c: 246: EUSART_Initialize();
 20430  004D60  EFED  F023         	goto	i2_EUSART_Initialize	;wreg free
 20431  004D64                     __end_of_USART_mySetLineCodingHandler:
 20432                           	opt stack 0
 20433                           tosu	equ	0xFFF
 20434                           tosh	equ	0xFFE
 20435                           tosl	equ	0xFFD
 20436                           pclatu	equ	0xFFB
 20437                           pclath	equ	0xFFA
 20438                           tblptru	equ	0xFF8
 20439                           tblptrh	equ	0xFF7
 20440                           tblptrl	equ	0xFF6
 20441                           tablat	equ	0xFF5
 20442                           prodh	equ	0xFF4
 20443                           prodl	equ	0xFF3
 20444                           intcon	equ	0xFF2
 20445                           postinc0	equ	0xFEE
 20446                           wreg	equ	0xFE8
 20447                           indf1	equ	0xFE7
 20448                           fsr1h	equ	0xFE2
 20449                           fsr1l	equ	0xFE1
 20450                           indf2	equ	0xFDF
 20451                           postinc2	equ	0xFDE
 20452                           postdec2	equ	0xFDD
 20453                           plusw2	equ	0xFDB
 20454                           fsr2h	equ	0xFDA
 20455                           fsr2l	equ	0xFD9
 20456                           status	equ	0xFD8
 20457                           
 20458 ;; *************** function i2_EUSART_Initialize *****************
 20459 ;; Defined at:
 20460 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;		None
 20463 ;; Auto vars:     Size  Location     Type
 20464 ;;		None
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  1    wreg      void 
 20467 ;; Registers used:
 20468 ;;		wreg, status,2
 20469 ;; Tracked objects:
 20470 ;;		On entry : F/0
 20471 ;;		On exit  : F/0
 20472 ;;		Unchanged: F/0
 20473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20474 ;;      Params:         0       0       0       0       0       0       0       0       0
 20475 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20477 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20478 ;;Total ram usage:        0 bytes
 20479 ;; Hardware stack levels used:    1
 20480 ;; This function calls:
 20481 ;;		Nothing
 20482 ;; This function is called by:
 20483 ;;		_USBapp_CdcEmulatorInitialize
 20484 ;;		_USART_mySetLineCodingHandler
 20485 ;; This function uses a non-reentrant model
 20486 ;;
 20487                           
 20488                           	psect	text107
 20489  0047DA                     __ptext107:
 20490                           	opt stack 0
 20491  0047DA                     i2_EUSART_Initialize:
 20492                           	opt stack 16
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;incstack = 0
 20499  0047DA  9A9D               	bcf	3997,5,c	;volatile
 20500                           
 20501                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 20502  0047DC  989D               	bcf	3997,4,c	;volatile
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;eusart.c: 85: BAUDCON = 0x48;
 20506  0047DE  0E48               	movlw	72
 20507  0047E0  6EB8               	movwf	4024,c	;volatile
 20508                           
 20509                           ;eusart.c: 88: RCSTA = 0x90;
 20510  0047E2  0E90               	movlw	144
 20511  0047E4  6EAB               	movwf	4011,c	;volatile
 20512                           
 20513                           ;eusart.c: 91: TXSTA = 0x26;
 20514  0047E6  0E26               	movlw	38
 20515  0047E8  6EAC               	movwf	4012,c	;volatile
 20516                           
 20517                           ;eusart.c: 95: SPBRG = 0x71;
 20518  0047EA  0E71               	movlw	113
 20519  0047EC  6EAF               	movwf	4015,c	;volatile
 20520                           
 20521                           ;eusart.c: 100: SPBRGH = 0x02;
 20522  0047EE  0E02               	movlw	2
 20523  0047F0  6EB0               	movwf	4016,c	;volatile
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;eusart.c: 103: eusartTxHead = 0;
 20527  0047F2  6A27               	clrf	_eusartTxHead,c
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;eusart.c: 104: eusartTxTail = 0;
 20531  0047F4  6A28               	clrf	_eusartTxTail,c
 20532                           
 20533                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 20534  0047F6  0E40               	movlw	64
 20535  0047F8  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;eusart.c: 107: eusartRxHead = 0;
 20539  0047FA  6A24               	clrf	_eusartRxHead,c
 20540                           
 20541                           ; BSR set to: 0
 20542                           ;eusart.c: 108: eusartRxTail = 0;
 20543  0047FC  6A25               	clrf	_eusartRxTail,c
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;eusart.c: 109: eusartRxCount = 0;
 20547  0047FE  6A23               	clrf	_eusartRxCount,c	;volatile
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 20551  004800  8A9D               	bsf	3997,5,c	;volatile
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 20555  004802  88AB               	bsf	4011,4,c	;volatile
 20556                           
 20557                           ; BSR set to: 0
 20558  004804  0012               	return		;funcret
 20559  004806                     __end_ofi2_EUSART_Initialize:
 20560                           	opt stack 0
 20561                           tosu	equ	0xFFF
 20562                           tosh	equ	0xFFE
 20563                           tosl	equ	0xFFD
 20564                           pclatu	equ	0xFFB
 20565                           pclath	equ	0xFFA
 20566                           tblptru	equ	0xFF8
 20567                           tblptrh	equ	0xFF7
 20568                           tblptrl	equ	0xFF6
 20569                           tablat	equ	0xFF5
 20570                           prodh	equ	0xFF4
 20571                           prodl	equ	0xFF3
 20572                           intcon	equ	0xFF2
 20573                           postinc0	equ	0xFEE
 20574                           wreg	equ	0xFE8
 20575                           indf1	equ	0xFE7
 20576                           fsr1h	equ	0xFE2
 20577                           fsr1l	equ	0xFE1
 20578                           indf2	equ	0xFDF
 20579                           postinc2	equ	0xFDE
 20580                           postdec2	equ	0xFDD
 20581                           plusw2	equ	0xFDB
 20582                           fsr2h	equ	0xFDA
 20583                           fsr2l	equ	0xFD9
 20584                           status	equ	0xFD8
 20585                           
 20586 ;; *************** function ___lldiv *****************
 20587 ;; Defined at:
 20588 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;  dividend        4    0[COMRAM] unsigned long 
 20591 ;;  divisor         4    4[COMRAM] unsigned long 
 20592 ;; Auto vars:     Size  Location     Type
 20593 ;;  quotient        4    8[COMRAM] unsigned long 
 20594 ;;  counter         1   12[COMRAM] unsigned char 
 20595 ;; Return value:  Size  Location     Type
 20596 ;;                  4    0[COMRAM] unsigned long 
 20597 ;; Registers used:
 20598 ;;		wreg, status,2, status,0
 20599 ;; Tracked objects:
 20600 ;;		On entry : F/0
 20601 ;;		On exit  : F/0
 20602 ;;		Unchanged: F/0
 20603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20604 ;;      Params:         8       0       0       0       0       0       0       0       0
 20605 ;;      Locals:         5       0       0       0       0       0       0       0       0
 20606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20607 ;;      Totals:        13       0       0       0       0       0       0       0       0
 20608 ;;Total ram usage:       13 bytes
 20609 ;; Hardware stack levels used:    1
 20610 ;; This function calls:
 20611 ;;		Nothing
 20612 ;; This function is called by:
 20613 ;;		_USART_mySetLineCodingHandler
 20614 ;; This function uses a non-reentrant model
 20615 ;;
 20616                           
 20617                           	psect	text108
 20618  0050CA                     __ptext108:
 20619                           	opt stack 0
 20620  0050CA                     ___lldiv:
 20621                           	opt stack 14
 20622                           
 20623                           ; BSR set to: 0
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;incstack = 0
 20627  0050CA  6A36               	clrf	___lldiv@quotient,c
 20628  0050CC  6A37               	clrf	___lldiv@quotient+1,c
 20629  0050CE  6A38               	clrf	___lldiv@quotient+2,c
 20630  0050D0  6A39               	clrf	___lldiv@quotient+3,c
 20631                           
 20632                           ; BSR set to: 0
 20633  0050D2  5032               	movf	___lldiv@divisor,w,c
 20634  0050D4  1033               	iorwf	___lldiv@divisor+1,w,c
 20635  0050D6  1034               	iorwf	___lldiv@divisor+2,w,c
 20636  0050D8  1035               	iorwf	___lldiv@divisor+3,w,c
 20637  0050DA  E029               	bz	i2l2250
 20638                           
 20639                           ; BSR set to: 0
 20640  0050DC  0E01               	movlw	1
 20641  0050DE  6E3A               	movwf	___lldiv@counter,c
 20642  0050E0  D006               	goto	i2l5863
 20643  0050E2                     i2l5861:
 20644                           
 20645                           ; BSR set to: 0
 20646  0050E2  90D8               	bcf	status,0,c
 20647  0050E4  3632               	rlcf	___lldiv@divisor,f,c
 20648  0050E6  3633               	rlcf	___lldiv@divisor+1,f,c
 20649  0050E8  3634               	rlcf	___lldiv@divisor+2,f,c
 20650  0050EA  3635               	rlcf	___lldiv@divisor+3,f,c
 20651  0050EC  2A3A               	incf	___lldiv@counter,f,c
 20652  0050EE                     i2l5863:
 20653                           
 20654                           ; BSR set to: 0
 20655  0050EE  AE35               	btfss	___lldiv@divisor+3,7,c
 20656  0050F0  D7F8               	goto	i2l5861
 20657  0050F2                     i2l5865:
 20658                           
 20659                           ; BSR set to: 0
 20660  0050F2  90D8               	bcf	status,0,c
 20661  0050F4  3636               	rlcf	___lldiv@quotient,f,c
 20662  0050F6  3637               	rlcf	___lldiv@quotient+1,f,c
 20663  0050F8  3638               	rlcf	___lldiv@quotient+2,f,c
 20664  0050FA  3639               	rlcf	___lldiv@quotient+3,f,c
 20665                           
 20666                           ; BSR set to: 0
 20667  0050FC  5032               	movf	___lldiv@divisor,w,c
 20668  0050FE  5C2E               	subwf	___lldiv@dividend,w,c
 20669  005100  5033               	movf	___lldiv@divisor+1,w,c
 20670  005102  582F               	subwfb	___lldiv@dividend+1,w,c
 20671  005104  5034               	movf	___lldiv@divisor+2,w,c
 20672  005106  5830               	subwfb	___lldiv@dividend+2,w,c
 20673  005108  5035               	movf	___lldiv@divisor+3,w,c
 20674  00510A  5831               	subwfb	___lldiv@dividend+3,w,c
 20675  00510C  E309               	bnc	i2l5873
 20676                           
 20677                           ; BSR set to: 0
 20678  00510E  5032               	movf	___lldiv@divisor,w,c
 20679  005110  5E2E               	subwf	___lldiv@dividend,f,c
 20680  005112  5033               	movf	___lldiv@divisor+1,w,c
 20681  005114  5A2F               	subwfb	___lldiv@dividend+1,f,c
 20682  005116  5034               	movf	___lldiv@divisor+2,w,c
 20683  005118  5A30               	subwfb	___lldiv@dividend+2,f,c
 20684  00511A  5035               	movf	___lldiv@divisor+3,w,c
 20685  00511C  5A31               	subwfb	___lldiv@dividend+3,f,c
 20686                           
 20687                           ; BSR set to: 0
 20688  00511E  8036               	bsf	___lldiv@quotient,0,c
 20689  005120                     i2l5873:
 20690                           
 20691                           ; BSR set to: 0
 20692  005120  90D8               	bcf	status,0,c
 20693  005122  3235               	rrcf	___lldiv@divisor+3,f,c
 20694  005124  3234               	rrcf	___lldiv@divisor+2,f,c
 20695  005126  3233               	rrcf	___lldiv@divisor+1,f,c
 20696  005128  3232               	rrcf	___lldiv@divisor,f,c
 20697                           
 20698                           ; BSR set to: 0
 20699  00512A  2E3A               	decfsz	___lldiv@counter,f,c
 20700  00512C  D7E2               	goto	i2l5865
 20701  00512E                     i2l2250:
 20702                           
 20703                           ; BSR set to: 0
 20704  00512E  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 20705  005132  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 20706  005136  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 20707  00513A  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 20708                           
 20709                           ; BSR set to: 0
 20710  00513E  0012               	return		;funcret
 20711  005140                     __end_of___lldiv:
 20712                           	opt stack 0
 20713                           tosu	equ	0xFFF
 20714                           tosh	equ	0xFFE
 20715                           tosl	equ	0xFFD
 20716                           pclatu	equ	0xFFB
 20717                           pclath	equ	0xFFA
 20718                           tblptru	equ	0xFF8
 20719                           tblptrh	equ	0xFF7
 20720                           tblptrl	equ	0xFF6
 20721                           tablat	equ	0xFF5
 20722                           prodh	equ	0xFF4
 20723                           prodl	equ	0xFF3
 20724                           intcon	equ	0xFF2
 20725                           postinc0	equ	0xFEE
 20726                           wreg	equ	0xFE8
 20727                           indf1	equ	0xFE7
 20728                           fsr1h	equ	0xFE2
 20729                           fsr1l	equ	0xFE1
 20730                           indf2	equ	0xFDF
 20731                           postinc2	equ	0xFDE
 20732                           postdec2	equ	0xFDD
 20733                           plusw2	equ	0xFDB
 20734                           fsr2h	equ	0xFDA
 20735                           fsr2l	equ	0xFD9
 20736                           status	equ	0xFD8
 20737                           
 20738 ;; *************** function _TMRapp_Tick *****************
 20739 ;; Defined at:
 20740 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 20741 ;; Parameters:    Size  Location     Type
 20742 ;;		None
 20743 ;; Auto vars:     Size  Location     Type
 20744 ;;		None
 20745 ;; Return value:  Size  Location     Type
 20746 ;;                  1    wreg      void 
 20747 ;; Registers used:
 20748 ;;		None
 20749 ;; Tracked objects:
 20750 ;;		On entry : 0/0
 20751 ;;		On exit  : F/0
 20752 ;;		Unchanged: 0/0
 20753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20754 ;;      Params:         0       0       0       0       0       0       0       0       0
 20755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20757 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20758 ;;Total ram usage:        0 bytes
 20759 ;; Hardware stack levels used:    1
 20760 ;; This function calls:
 20761 ;;		Nothing
 20762 ;; This function is called by:
 20763 ;;		_INTERRUPT_InterruptManager
 20764 ;; This function uses a non-reentrant model
 20765 ;;
 20766                           
 20767                           	psect	text109
 20768  00441E                     __ptext109:
 20769                           	opt stack 0
 20770  00441E                     _TMRapp_Tick:
 20771                           	opt stack 19
 20772                           
 20773                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 20774                           
 20775                           ; BSR set to: 0
 20776                           ;incstack = 0
 20777  00441E  0100               	movlb	0	; () banked
 20778  004420  8195               	bsf	_appTimer& (0+255),0,b
 20779                           
 20780                           ; BSR set to: 0
 20781  004422  0012               	return		;funcret
 20782  004424                     __end_of_TMRapp_Tick:
 20783                           	opt stack 0
 20784                           tosu	equ	0xFFF
 20785                           tosh	equ	0xFFE
 20786                           tosl	equ	0xFFD
 20787                           pclatu	equ	0xFFB
 20788                           pclath	equ	0xFFA
 20789                           tblptru	equ	0xFF8
 20790                           tblptrh	equ	0xFF7
 20791                           tblptrl	equ	0xFF6
 20792                           tablat	equ	0xFF5
 20793                           prodh	equ	0xFF4
 20794                           prodl	equ	0xFF3
 20795                           intcon	equ	0xFF2
 20796                           postinc0	equ	0xFEE
 20797                           wreg	equ	0xFE8
 20798                           indf1	equ	0xFE7
 20799                           fsr1h	equ	0xFE2
 20800                           fsr1l	equ	0xFE1
 20801                           indf2	equ	0xFDF
 20802                           postinc2	equ	0xFDE
 20803                           postdec2	equ	0xFDD
 20804                           plusw2	equ	0xFDB
 20805                           fsr2h	equ	0xFDA
 20806                           fsr2l	equ	0xFD9
 20807                           status	equ	0xFD8
 20808                           
 20809 ;; *************** function _TMR1_ISR *****************
 20810 ;; Defined at:
 20811 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;		None
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;		None
 20816 ;; Return value:  Size  Location     Type
 20817 ;;                  1    wreg      void 
 20818 ;; Registers used:
 20819 ;;		None
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/0
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20825 ;;      Params:         0       0       0       0       0       0       0       0       0
 20826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20828 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20829 ;;Total ram usage:        0 bytes
 20830 ;; Hardware stack levels used:    1
 20831 ;; This function calls:
 20832 ;;		Nothing
 20833 ;; This function is called by:
 20834 ;;		_INTERRUPT_InterruptManager
 20835 ;; This function uses a non-reentrant model
 20836 ;;
 20837                           
 20838                           	psect	text110
 20839  004442                     __ptext110:
 20840                           	opt stack 0
 20841  004442                     _TMR1_ISR:
 20842                           	opt stack 19
 20843                           
 20844                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 20845                           
 20846                           ; BSR set to: 0
 20847                           ;incstack = 0
 20848  004442  909E               	bcf	3998,0,c	;volatile
 20849                           
 20850                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 20851  004444  C086  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 20852                           
 20853                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 20854  004448  C085  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 20855  00444C  0012               	return		;funcret
 20856  00444E                     __end_of_TMR1_ISR:
 20857                           	opt stack 0
 20858                           tosu	equ	0xFFF
 20859                           tosh	equ	0xFFE
 20860                           tosl	equ	0xFFD
 20861                           pclatu	equ	0xFFB
 20862                           pclath	equ	0xFFA
 20863                           tblptru	equ	0xFF8
 20864                           tblptrh	equ	0xFF7
 20865                           tblptrl	equ	0xFF6
 20866                           tablat	equ	0xFF5
 20867                           prodh	equ	0xFF4
 20868                           prodl	equ	0xFF3
 20869                           intcon	equ	0xFF2
 20870                           postinc0	equ	0xFEE
 20871                           wreg	equ	0xFE8
 20872                           indf1	equ	0xFE7
 20873                           fsr1h	equ	0xFE2
 20874                           fsr1l	equ	0xFE1
 20875                           indf2	equ	0xFDF
 20876                           postinc2	equ	0xFDE
 20877                           postdec2	equ	0xFDD
 20878                           plusw2	equ	0xFDB
 20879                           fsr2h	equ	0xFDA
 20880                           fsr2l	equ	0xFD9
 20881                           status	equ	0xFD8
 20882                           
 20883 ;; *************** function _EUSART_Transmit_ISR *****************
 20884 ;; Defined at:
 20885 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;		None
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  1    wreg      void 
 20892 ;; Registers used:
 20893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/0
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20903 ;;Total ram usage:        0 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; This function calls:
 20906 ;;		Nothing
 20907 ;; This function is called by:
 20908 ;;		_INTERRUPT_InterruptManager
 20909 ;; This function uses a non-reentrant model
 20910 ;;
 20911                           
 20912                           	psect	text111
 20913  00470E                     __ptext111:
 20914                           	opt stack 0
 20915  00470E                     _EUSART_Transmit_ISR:
 20916                           	opt stack 19
 20917                           
 20918                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20919                           
 20920                           ;incstack = 0
 20921  00470E  0E40               	movlw	64
 20922  004710  6026               	cpfslt	_eusartTxBufferRemaining,c
 20923  004712  D00F               	goto	i2l929
 20924                           
 20925                           ;eusart.c: 167: {
 20926                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 20927  004714  0E40               	movlw	low _eusartTxBuffer
 20928  004716  2428               	addwf	_eusartTxTail,w,c
 20929  004718  6ED9               	movwf	fsr2l,c
 20930  00471A  6ADA               	clrf	fsr2h,c
 20931  00471C  0E02               	movlw	high _eusartTxBuffer
 20932  00471E  22DA               	addwfc	fsr2h,f,c
 20933  004720  50DF               	movf	indf2,w,c
 20934  004722  6EAD               	movwf	4013,c	;volatile
 20935  004724  2A28               	incf	_eusartTxTail,f,c
 20936                           
 20937                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 20938  004726  0E3F               	movlw	63
 20939  004728  6428               	cpfsgt	_eusartTxTail,c
 20940  00472A  D001               	goto	i2l8285
 20941                           
 20942                           ;eusart.c: 170: {
 20943                           ;eusart.c: 171: eusartTxTail = 0;
 20944  00472C  6A28               	clrf	_eusartTxTail,c
 20945  00472E                     i2l8285:
 20946                           
 20947                           ;eusart.c: 172: }
 20948                           ;eusart.c: 173: eusartTxBufferRemaining++;
 20949  00472E  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 20950                           
 20951                           ;eusart.c: 174: }
 20952  004730  0012               	return	
 20953  004732                     i2l929:
 20954                           
 20955                           ;eusart.c: 175: else
 20956                           ;eusart.c: 176: {
 20957                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 20958  004732  989D               	bcf	3997,4,c	;volatile
 20959  004734  0012               	return		;funcret
 20960  004736                     __end_of_EUSART_Transmit_ISR:
 20961                           	opt stack 0
 20962                           tosu	equ	0xFFF
 20963                           tosh	equ	0xFFE
 20964                           tosl	equ	0xFFD
 20965                           pclatu	equ	0xFFB
 20966                           pclath	equ	0xFFA
 20967                           tblptru	equ	0xFF8
 20968                           tblptrh	equ	0xFF7
 20969                           tblptrl	equ	0xFF6
 20970                           tablat	equ	0xFF5
 20971                           prodh	equ	0xFF4
 20972                           prodl	equ	0xFF3
 20973                           intcon	equ	0xFF2
 20974                           postinc0	equ	0xFEE
 20975                           wreg	equ	0xFE8
 20976                           indf1	equ	0xFE7
 20977                           fsr1h	equ	0xFE2
 20978                           fsr1l	equ	0xFE1
 20979                           indf2	equ	0xFDF
 20980                           postinc2	equ	0xFDE
 20981                           postdec2	equ	0xFDD
 20982                           plusw2	equ	0xFDB
 20983                           fsr2h	equ	0xFDA
 20984                           fsr2l	equ	0xFD9
 20985                           status	equ	0xFD8
 20986                           
 20987 ;; *************** function _EUSART_Receive_ISR *****************
 20988 ;; Defined at:
 20989 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 20990 ;; Parameters:    Size  Location     Type
 20991 ;;		None
 20992 ;; Auto vars:     Size  Location     Type
 20993 ;;		None
 20994 ;; Return value:  Size  Location     Type
 20995 ;;                  1    wreg      void 
 20996 ;; Registers used:
 20997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20998 ;; Tracked objects:
 20999 ;;		On entry : 0/0
 21000 ;;		On exit  : 0/0
 21001 ;;		Unchanged: 0/0
 21002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21003 ;;      Params:         0       0       0       0       0       0       0       0       0
 21004 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21006 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21007 ;;Total ram usage:        0 bytes
 21008 ;; Hardware stack levels used:    1
 21009 ;; This function calls:
 21010 ;;		Nothing
 21011 ;; This function is called by:
 21012 ;;		_INTERRUPT_InterruptManager
 21013 ;; This function uses a non-reentrant model
 21014 ;;
 21015                           
 21016                           	psect	text112
 21017  0046E6                     __ptext112:
 21018                           	opt stack 0
 21019  0046E6                     _EUSART_Receive_ISR:
 21020                           	opt stack 19
 21021                           
 21022                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 21023                           
 21024                           ;incstack = 0
 21025  0046E6  A2AB               	btfss	4011,1,c	;volatile
 21026  0046E8  D003               	goto	i2l8291
 21027                           
 21028                           ;eusart.c: 184: {
 21029                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 21030  0046EA  98AB               	bcf	4011,4,c	;volatile
 21031                           
 21032                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 21033  0046EC  88AB               	bsf	4011,4,c	;volatile
 21034                           
 21035                           ;eusart.c: 189: }
 21036  0046EE  0012               	return	
 21037  0046F0                     i2l8291:
 21038                           
 21039                           ;eusart.c: 190: else
 21040                           ;eusart.c: 191: {
 21041                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 21042  0046F0  0E00               	movlw	low _eusartRxBuffer
 21043  0046F2  2424               	addwf	_eusartRxHead,w,c
 21044  0046F4  6ED9               	movwf	fsr2l,c
 21045  0046F6  6ADA               	clrf	fsr2h,c
 21046  0046F8  0E02               	movlw	high _eusartRxBuffer
 21047  0046FA  22DA               	addwfc	fsr2h,f,c
 21048  0046FC  CFAE FFDF          	movff	4014,indf2	;volatile
 21049  004700  2A24               	incf	_eusartRxHead,f,c
 21050                           
 21051                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 21052  004702  0E3F               	movlw	63
 21053  004704  6424               	cpfsgt	_eusartRxHead,c
 21054  004706  D001               	goto	i2l8299
 21055                           
 21056                           ;eusart.c: 195: {
 21057                           ;eusart.c: 196: eusartRxHead = 0;
 21058  004708  6A24               	clrf	_eusartRxHead,c
 21059  00470A                     i2l8299:
 21060                           
 21061                           ;eusart.c: 197: }
 21062                           ;eusart.c: 198: eusartRxCount++;
 21063  00470A  2A23               	incf	_eusartRxCount,f,c	;volatile
 21064  00470C  0012               	return		;funcret
 21065  00470E                     __end_of_EUSART_Receive_ISR:
 21066                           	opt stack 0
 21067                           tosu	equ	0xFFF
 21068                           tosh	equ	0xFFE
 21069                           tosl	equ	0xFFD
 21070                           pclatu	equ	0xFFB
 21071                           pclath	equ	0xFFA
 21072                           tblptru	equ	0xFF8
 21073                           tblptrh	equ	0xFF7
 21074                           tblptrl	equ	0xFF6
 21075                           tablat	equ	0xFF5
 21076                           prodh	equ	0xFF4
 21077                           prodl	equ	0xFF3
 21078                           intcon	equ	0xFF2
 21079                           postinc0	equ	0xFEE
 21080                           wreg	equ	0xFE8
 21081                           indf1	equ	0xFE7
 21082                           fsr1h	equ	0xFE2
 21083                           fsr1l	equ	0xFE1
 21084                           indf2	equ	0xFDF
 21085                           postinc2	equ	0xFDE
 21086                           postdec2	equ	0xFDD
 21087                           plusw2	equ	0xFDB
 21088                           fsr2h	equ	0xFDA
 21089                           fsr2l	equ	0xFD9
 21090                           status	equ	0xFD8
 21091                           
 21092 ;; *************** function _CMP1_ISR *****************
 21093 ;; Defined at:
 21094 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;		None
 21097 ;; Auto vars:     Size  Location     Type
 21098 ;;		None
 21099 ;; Return value:  Size  Location     Type
 21100 ;;                  1    wreg      void 
 21101 ;; Registers used:
 21102 ;;		None
 21103 ;; Tracked objects:
 21104 ;;		On entry : 0/0
 21105 ;;		On exit  : 0/0
 21106 ;;		Unchanged: 0/0
 21107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21108 ;;      Params:         0       0       0       0       0       0       0       0       0
 21109 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21110 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21111 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21112 ;;Total ram usage:        0 bytes
 21113 ;; Hardware stack levels used:    1
 21114 ;; This function calls:
 21115 ;;		Nothing
 21116 ;; This function is called by:
 21117 ;;		_INTERRUPT_InterruptManager
 21118 ;; This function uses a non-reentrant model
 21119 ;;
 21120                           
 21121                           	psect	text113
 21122  00440A                     __ptext113:
 21123                           	opt stack 0
 21124  00440A                     _CMP1_ISR:
 21125                           	opt stack 19
 21126                           
 21127                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 21128                           
 21129                           ;incstack = 0
 21130  00440A  9CA1               	bcf	4001,6,c	;volatile
 21131  00440C  0012               	return		;funcret
 21132  00440E                     __end_of_CMP1_ISR:
 21133                           	opt stack 0
 21134                           tosu	equ	0xFFF
 21135                           tosh	equ	0xFFE
 21136                           tosl	equ	0xFFD
 21137                           pclatu	equ	0xFFB
 21138                           pclath	equ	0xFFA
 21139                           tblptru	equ	0xFF8
 21140                           tblptrh	equ	0xFF7
 21141                           tblptrl	equ	0xFF6
 21142                           tablat	equ	0xFF5
 21143                           prodh	equ	0xFF4
 21144                           prodl	equ	0xFF3
 21145                           intcon	equ	0xFF2
 21146                           postinc0	equ	0xFEE
 21147                           wreg	equ	0xFE8
 21148                           indf1	equ	0xFE7
 21149                           fsr1h	equ	0xFE2
 21150                           fsr1l	equ	0xFE1
 21151                           indf2	equ	0xFDF
 21152                           postinc2	equ	0xFDE
 21153                           postdec2	equ	0xFDD
 21154                           plusw2	equ	0xFDB
 21155                           fsr2h	equ	0xFDA
 21156                           fsr2l	equ	0xFD9
 21157                           status	equ	0xFD8
 21158                           tosu	equ	0xFFF
 21159                           tosh	equ	0xFFE
 21160                           tosl	equ	0xFFD
 21161                           pclatu	equ	0xFFB
 21162                           pclath	equ	0xFFA
 21163                           tblptru	equ	0xFF8
 21164                           tblptrh	equ	0xFF7
 21165                           tblptrl	equ	0xFF6
 21166                           tablat	equ	0xFF5
 21167                           prodh	equ	0xFF4
 21168                           prodl	equ	0xFF3
 21169                           intcon	equ	0xFF2
 21170                           postinc0	equ	0xFEE
 21171                           wreg	equ	0xFE8
 21172                           indf1	equ	0xFE7
 21173                           fsr1h	equ	0xFE2
 21174                           fsr1l	equ	0xFE1
 21175                           indf2	equ	0xFDF
 21176                           postinc2	equ	0xFDE
 21177                           postdec2	equ	0xFDD
 21178                           plusw2	equ	0xFDB
 21179                           fsr2h	equ	0xFDA
 21180                           fsr2l	equ	0xFD9
 21181                           status	equ	0xFD8
 21182                           
 21183                           	psect	text114
 21184  000000                     __ptext114:
 21185                           	opt stack 0
 21186                           tosu	equ	0xFFF
 21187                           tosh	equ	0xFFE
 21188                           tosl	equ	0xFFD
 21189                           pclatu	equ	0xFFB
 21190                           pclath	equ	0xFFA
 21191                           tblptru	equ	0xFF8
 21192                           tblptrh	equ	0xFF7
 21193                           tblptrl	equ	0xFF6
 21194                           tablat	equ	0xFF5
 21195                           prodh	equ	0xFF4
 21196                           prodl	equ	0xFF3
 21197                           intcon	equ	0xFF2
 21198                           postinc0	equ	0xFEE
 21199                           wreg	equ	0xFE8
 21200                           indf1	equ	0xFE7
 21201                           fsr1h	equ	0xFE2
 21202                           fsr1l	equ	0xFE1
 21203                           indf2	equ	0xFDF
 21204                           postinc2	equ	0xFDE
 21205                           postdec2	equ	0xFDD
 21206                           plusw2	equ	0xFDB
 21207                           fsr2h	equ	0xFDA
 21208                           fsr2l	equ	0xFD9
 21209                           status	equ	0xFD8
 21210                           
 21211                           	psect	rparam
 21212  0000                     tosu	equ	0xFFF
 21213                           tosh	equ	0xFFE
 21214                           tosl	equ	0xFFD
 21215                           pclatu	equ	0xFFB
 21216                           pclath	equ	0xFFA
 21217                           tblptru	equ	0xFF8
 21218                           tblptrh	equ	0xFF7
 21219                           tblptrl	equ	0xFF6
 21220                           tablat	equ	0xFF5
 21221                           prodh	equ	0xFF4
 21222                           prodl	equ	0xFF3
 21223                           intcon	equ	0xFF2
 21224                           postinc0	equ	0xFEE
 21225                           wreg	equ	0xFE8
 21226                           indf1	equ	0xFE7
 21227                           fsr1h	equ	0xFE2
 21228                           fsr1l	equ	0xFE1
 21229                           indf2	equ	0xFDF
 21230                           postinc2	equ	0xFDE
 21231                           postdec2	equ	0xFDD
 21232                           plusw2	equ	0xFDB
 21233                           fsr2h	equ	0xFDA
 21234                           fsr2l	equ	0xFD9
 21235                           status	equ	0xFD8
 21236                           
 21237                           	psect	temp
 21238  00005B                     btemp:
 21239                           	opt stack 0
 21240  00005B                     	ds	1
 21241  0000                     int$flags	set	btemp
 21242                           tosu	equ	0xFFF
 21243                           tosh	equ	0xFFE
 21244                           tosl	equ	0xFFD
 21245                           pclatu	equ	0xFFB
 21246                           pclath	equ	0xFFA
 21247                           tblptru	equ	0xFF8
 21248                           tblptrh	equ	0xFF7
 21249                           tblptrl	equ	0xFF6
 21250                           tablat	equ	0xFF5
 21251                           prodh	equ	0xFF4
 21252                           prodl	equ	0xFF3
 21253                           intcon	equ	0xFF2
 21254                           postinc0	equ	0xFEE
 21255                           wreg	equ	0xFE8
 21256                           indf1	equ	0xFE7
 21257                           fsr1h	equ	0xFE2
 21258                           fsr1l	equ	0xFE1
 21259                           indf2	equ	0xFDF
 21260                           postinc2	equ	0xFDE
 21261                           postdec2	equ	0xFDD
 21262                           plusw2	equ	0xFDB
 21263                           fsr2h	equ	0xFDA
 21264                           fsr2l	equ	0xFD9
 21265                           status	equ	0xFD8


Data Sizes:
    Strings     1150
    Constant    987
    Data        3
    BSS         493
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     59     158
    BANK1           256      0     224
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_74(CODE[10]), STR_63(CODE[3]), STR_59(CODE[9]), STR_57(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_46(CODE[3]), STR_43(CODE[3]), 
		 -> STR_40(CODE[3]), STR_37(CODE[3]), STR_34(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_101(CODE[7]), STR_52(CODE[4]), STR_51(CODE[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_72(CODE[24]), STR_50(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> cmd(BANK1[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5139_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5139_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5139_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5139_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3862$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3852$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3852$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3828$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3828$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3828$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3828$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_100(CODE[12]), STR_99(CODE[8]), 
		 -> STR_98(CODE[9]), STR_80(CODE[2]), STR_79(CODE[16]), STR_78(CODE[13]), 
		 -> STR_77(CODE[12]), STR_76(CODE[17]), STR_75(CODE[7]), STR_73(CODE[7]), 
		 -> STR_71(CODE[7]), STR_70(CODE[2]), STR_69(CODE[7]), STR_68(CODE[7]), 
		 -> STR_67(CODE[16]), STR_66(CODE[8]), STR_65(CODE[10]), STR_64(CODE[15]), 
		 -> STR_62(CODE[17]), STR_61(CODE[7]), STR_58(CODE[17]), STR_56(CODE[9]), 
		 -> STR_53(CODE[7]), cmd(BANK1[64]), STR_48(CODE[8]), STR_45(CODE[9]), 
		 -> STR_42(CODE[8]), STR_39(CODE[12]), STR_36(CODE[12]), STR_33(CODE[12]), 
		 -> modemResonseBuffer(BANK1[64]), STR_30(CODE[8]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), STR_23(CODE[10]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[14]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_81(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_97(CODE[26]), STR_96(CODE[26]), STR_95(CODE[26]), STR_94(CODE[26]), 
		 -> STR_93(CODE[1]), STR_92(CODE[9]), STR_91(CODE[13]), STR_90(CODE[13]), 
		 -> STR_89(CODE[13]), STR_88(CODE[13]), STR_87(CODE[13]), STR_86(CODE[13]), 
		 -> STR_85(CODE[13]), STR_84(CODE[13]), STR_83(CODE[16]), STR_82(CODE[15]), 
		 -> STR_60(CODE[24]), STR_55(CODE[13]), cmd(BANK1[64]), STR_47(CODE[24]), 
		 -> STR_44(CODE[16]), STR_41(CODE[16]), STR_38(CODE[49]), STR_35(CODE[49]), 
		 -> STR_32(CODE[25]), STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 

    moteJoiningProcess$1333	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_52(CODE[4]), STR_51(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteJoiningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _moteJoiningProcess->_sprintf
    _sprintf->___lwmod
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _oled_putUint16->_oled_putString
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _TMRapp_Handler->___lwmod
    ___lwmod->___lwdiv
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  277027
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  214588
                                             48 BANK0     11    11      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3  108359
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1012
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   21455
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    7159
                                             12 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   19185
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8589
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8867
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  61    60      1   72800
                                             37 BANK0     11    10      1
                  _ADC_GetConversion
                 _ADC_TempConversion
                   _DATAEE_WriteByte
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                        _sendCommand
                            _sprintf
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    21      8    9426
                                             12 BANK0     25    17      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    2885
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   28191
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5704
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3976
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3976
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   24730
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   18984
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
         ___lwdiv (ARG)
     _moteApp_delayms
     _moteJoiningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _DATAEE_WriteByte
       _MOTEapp_getModemResponse
         _EUSART_Read
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3B      9E       5       98.8%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     258      14        0.0%
DATA                 0      0     258       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu May  5 18:59:54 2016

                            _SPI_Initialize 4472                                  _USB_SD_Ptr 77B7  
               ?_moteApp_add16bToDataBuffer 00CC                                          l50 5A68  
                         ??_CMP1_Initialize 00C0                                  _USB_Buffer 0118  
                       moteRunningProcess@i 00E3                               _USBDeviceInit 5CE2  
                       ___wmul@multiplicand 00C2                     EUSART_FlushBuffer@index 00C0  
                    __end_of_oled_writeData 4466                          __size_of_CDCInitEP 0052  
                    moteJoiningProcess@Traw 00EB                    USBapp_handlerState@state 00C0  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l301 4F8A                                         l310 458C  
                                       l324 691C                 __end_of_USBStdGetDscHandler 651E  
                                       l441 771C                                         l338 69B2  
                                       l363 702A                                         l428 74DA  
                                       l372 7032                                         l368 7030  
                                       l561 505E                                         l298 4F50  
                                       l475 68CC                                         l593 4752  
                                       l761 4BFE                                         l914 48B8  
                                       l923 48F6                                         l684 5224  
                                       _BDT 000400                                         l677 51B8  
                                       _CKE 007E3E                                         l699 5950  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 701A  
                                       _UIE 000F64                                         _UIR 000F65  
                           _timer1ReloadVal 0085                                         _cmd 0158  
                                _USBSuspend 459C                __end_of_moteApp_clearBuffers 4AF4  
                      USBStdSetCfgHandler@i 0043                             _TMR2_Initialize 448E  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                              _USBDeviceTasks 621E  
                            _USBDeviceState 0091                       moteApp_delayms@length 00C0  
                     ??_USBCtrlTrfRxService 003F                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00CA                                ?_EUSART_Read 002E  
                  USBEnableEndpoint@options 0036                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00E5                                        l1010 4542  
                                      l1044 49DC                                        l1072 44A6  
                                      l1216 4A1C                                        l2303 4B7E  
                                      l2313 4AA2                                        l1490 4880  
                                      l1491 487E                  USBConfigureEndpoint@handle 0034  
                                      l1850 6DFA                                        l1755 54E6  
                                      l1835 6C8C                                        l1785 6338  
                                      l1881 6ED0                                        l1794 638A  
                                      l1882 6ED4                                        l1858 6D76  
                                      l9001 4FF8                                        l9011 504A  
                                      l9013 52AA                                        l9005 501E  
                                      l9031 5302                                        l9121 6E22  
                                      l9105 6DBA                                        l9009 5042  
                                      l9211 6FF0                                        l9131 6E3A  
                                      l9035 5310                                        l9043 5320  
                                      l9205 6FD6                                        l9125 6E36  
                                      l9109 6DCC                                        l9213 6FF6  
                                      l9301 555E                                        l9207 6FE0  
                                      l9215 700E                                        l9055 6C94  
                                      l9311 5584                                        l9145 6E66  
                                      l9073 6D1A                                        l9065 6CC2  
                                      l9049 6C74                                        l9321 55B4  
                                      l9305 5574                                        l9163 6EAE  
                                      l9139 6E62                                        l9155 6E8E  
                                      l9083 6D3E                                        l9075 6D1E  
                                      l9059 6C9A                                        l9421 5516  
                                      l8605 45DE                                        l8613 473C  
                                      l8621 4D66                                        l9173 6EF2  
                                      l9181 6F10                                        l9157 6E98  
                                      l9093 6D7C                                        l9085 6D44  
                                      l9245 4AB0                                        l9325 55E6  
                                      l9183 6F16                                        l9087 6D48  
                                      l9255 4AC4                                        l8561 48E8  
                                      l9425 5534                                        l8553 515C  
                                      l8625 4D90                                        l9097 6D8C  
                                      l9265 4ADC                                        l9507 63E6  
                                      l9419 5512                                        l9195 6F4C  
                                      l9099 6D9C                                        l9517 63FA  
                                      l9509 63EA                                        l9461 6346  
                                      l8573 4912                                        l9429 5558  
                                      l8645 4BB2                                        l8653 4BCE  
                                      l9197 6F52                                        l9189 6F32  
                                      l8813 488E                                        l9519 6418  
                                      l8575 4914                                        l9199 6F94  
                                      l9711 7280                                        l9607 7036  
                                      l8751 4F6E                                        l9481 638E  
                                      l9465 634E                                        l9449 457C  
                                      l8761 4F94                                        l9721 72C2  
                                      l9713 7284                                        l9641 70EC  
                                      l9633 70C4                                        l8753 4F76  
                                      l9393 50B2                                        l8905 4978  
                                      l8851 575E                                        l9475 637C  
                                      l8579 48BA                                        l9811 74AE  
                                      l9723 72CA                                        l9619 706E  
                                      l8755 4F7C                                        l8845 573E  
                                      l9469 6356                                        l8589 48DC  
                                      l8765 4F9C                                        l8941 4B5A  
                                      l9813 74B2                                        l9397 50B8  
                                      l8909 4980                                        l8925 477E  
                                      l8917 4768                                        l9581 4BDA  
                                      l8863 57B2                                        l9831 7502  
                                      l9743 7348                                        l9655 713C  
                                      l9639 70E8                                        l9489 63A4  
                                      l9497 63C2                                        l8961 4A86  
                                      l8937 4B4E                                        l9921 7724  
                                      l9913 7704                                        l9905 76BC  
                                      l9833 750A                                        l9761 73A8  
                                      l9745 734C                                        l9593 4C14  
                                      l9499 63C8                                        l8939 4B56  
                                      l9683 71DC                                        l8787 46D4  
                                      l9595 4C16                                        l9587 4BFA  
                                      l8965 4A98                                        l8957 4A7A  
                                      l8949 4B74                                        l8877 460C  
                                      l9917 7714                                        l9845 753E  
                                      l9773 73EE                                        l9669 718C  
                                      l9925 7734                                        l8893 495E  
                                      l9597 4C1A                                        l9589 4C02  
                                      l8959 4A82                                        l9855 7562  
                                      l9927 779E                                        STR_1 7DDD  
                                      STR_2 7F34                                        l9697 722E  
                                      l8897 4964                                        l9945 6762  
                                      STR_3 7DAF                                        STR_4 7F6B  
                                      l9859 7570                                        l8899 4968  
                                      l9869 7594                                        l9789 7442  
                                      STR_7 7D9F                                        STR_8 7EE9  
                                      l9799 7468                                        l9959 6792  
                                      STR_9 7F74                                        l9993 685A  
                                      l9899 7684                                        l9997 6864  
           __size_of_MOTEapp_TimerBasedTask 000E                                        _PEIE 007F96  
                     ??_USBCtrlTrfTxService 002E                                        u6810 4FBC  
                                      u8090 7528                                        u6830 4FEA  
                                      _UCFG 000F62                                        u6680 4D86  
                                      u6817 4FB2                                        u6690 4DB0  
                                      u7395 4A2C                                        u7396 4A2E  
                                      _UEP0 000F6A                                        u6837 4FE0  
                                      _UEP1 000F6B                                        u6687 4D7C  
                                      u8607 5ED0                                        u8617 4742  
                                      u6697 4DA6                                        u8627 49D6  
                                      _UEIE 000F66                                        u8577 5E98  
                                      u8587 5EA6                                        u7980 72B4  
                                      u8597 5EBC                                        u7990 72C2  
                                      _UEIR 000F67                                        _UCON 000F60  
                                      _TMR2 000FBC                             _CDCDataInHandle 0079  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 007F  
                                      _main 59DC                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 4F2C                                        _pkts 0081  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                           _USBDeviceAttach 485E                                        btemp 005B  
                             __CFG_BORV$190 000000                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                      _USBapp_setrxByteFlag 4424                                        start 10AA  
                  moteJoiningProcess@i_1350 00EE                             ?_oled_putUint16 00D2  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 4472  
                    __end_of_SPI_Initialize 4480                            __end_of_CMP1_ISR 440E  
                           ?_oled_putString 00CD                  __end_of_USBCheckStdRequest 572C  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 018A  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 441E  
                      ??_moteJoiningProcess 00E6                      moteApp_delayms@counter 00C3  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00C3  
                         sendCommand@string 00C1                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 441A                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00D2              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 454C  
                                     l10021 68C8                                       l10015 68C2  
                                     l10201 5D54                                       l10133 47BA  
                                     l10301 68F0                                       l10137 47CA  
                                     l10065 59B0                                       l10049 5974  
                                     l10321 692A                                       l10313 690E  
                                     l10171 5D0E                                       l10307 6902  
                                     l10261 51BA                                       l10333 6942  
                                     l10317 691E                                       l10271 5200  
                                     l10177 5D38                                       l10185 5D42  
                                     l10281 5214                                       l10441 5A7A  
                                     l10275 5208                                       l10347 6972  
                                     l10435 5A6A                                       l10277 520E  
                                     l10365 69B4                                       l10357 69A0  
                                     l10293 68DE                                       l10391 6A50  
                                     l10377 69FC                                       l10449 5A8A  
                                     l10395 6A64                                       l10397 6A76  
                                     ?_main 002E                             __end_of___lbdiv 4984  
                                     _EEADR 000FA9                                       STR_10 7E6D  
                                     STR_11 7EF5                                       STR_20 7F7D  
                                     STR_12 7E94                                       STR_21 7FFC  
                                     STR_13 7E7A                                       STR_30 7EC9  
                                     STR_14 7E87                                       STR_22 7CC3  
                                     STR_31 7FF7                                       STR_23 7F16  
                                     STR_15 7F01                                       STR_40 7DCB  
                                     STR_24 7F62                                       STR_16 7F2A  
                                     STR_32 7C4A                                       STR_17 7F86  
                                     STR_33 7EB9                                       STR_41 7D8F  
                                     STR_25 7D0A                                       STR_34 7DCB  
                                     STR_18 7FAF                                       STR_42 7FA7  
                                     STR_26 7D3D                                       STR_50 7CAB  
                                     STR_43 7DCB                                       STR_51 7DDA  
                                     STR_19 7FB7                                       STR_27 7D4E  
                                     STR_35 7BB1                                       STR_52 7D9B  
                                     STR_36 7EDD                                       STR_44 7D7F  
                                     STR_28 7CE8                                       STR_60 7C63  
                                     STR_37 7DCB                                       STR_61 7FF0  
                                     STR_53 7FE9                                       STR_45 7F47  
                                     STR_29 7EC5                                       STR_70 7BAF  
                                     STR_54 7DCB                                       STR_46 7DCB  
                                     STR_62 7D2C                                       STR_38 7B80  
                                     STR_63 7DCB                                       STR_71 7FE2  
                                     STR_39 7ED1                                       STR_55 7E60  
                                     STR_47 7C7B                                       STR_80 7BAF  
                                     STR_56 7E64                                       STR_48 7F97  
                                     STR_64 7DBF                                       STR_72 7C93  
                                     STR_57 7DCB                                       STR_49 7DCB  
                                     STR_73 7FD4                                       STR_65 7F20  
                                     STR_81 7F0C                                       STR_74 7DC4  
                                     STR_66 7F9F                                       STR_90 7E46  
                                     STR_82 7DCE                                       STR_58 7CF9  
                                     STR_75 7FCD                                       STR_59 7F50  
                                     STR_91 7E53                                       STR_67 7D5F  
                                     STR_68 7FDB                                       STR_92 7F59  
                                     STR_84 7DF8                                       STR_76 7D1B  
                           __end_of___lbmod 4786                                       STR_69 7FC6  
                                     STR_77 7EAD                                       STR_85 7E05  
                                     STR_86 7E12                                       STR_78 7DEB  
                                     STR_94 7C16                                       STR_87 7E1F  
                                     STR_79 7D6F                                       STR_95 7C30  
                                     STR_88 7E2C                                       STR_96 7BE2  
                                     STR_89 7E39                                       STR_97 7BFC  
                                     STR_98 7F3E                                       STR_99 7F8F  
         __size_of_USBCtrlEPServiceComplete 00E4                             _TMR1_StartTimer 440E  
                           __end_of___lldiv 5140           __size_of_MOTEapp_setResponseReady 0002  
                                     _T1CON 000FCD                      __end_of_USBDeviceTasks 631C  
                                     _T2CON 000FBA                     __end_of_sendDataCommand 55F0  
                 ?_USBCtrlEPServiceComplete 002E                             __end_of___lwdiv 4B88  
                           __end_of___lwmod 4AAC                   ?_MOTEapp_setResponseReady 002E  
                       oled_putUint8@number 00D4                                       i2l929 4732  
                                     i2l970 104A                                       _UADDR 000F63  
                                     i2l972 105A                                       i2l974 1066  
                                     i2l978 1076                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 00CE     moteApp_add8bToDataBuffer@bufferLocation 00C4  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                           moteHandler@i_1290 00F9  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 54CC                           oled_putChar@index 00CC  
                          __end_of_TMR1_ISR 444E                                       _sd000 7B7C  
                                     _sd001 7B02             service_pushbutton@Release_Timer 00A0  
                                     _sd002 7B36                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 00E1                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 44E4  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                           __end_of_dpowers 77AF                                       _light 007D  
                           __end_of_isdigit 4614                     __end_of_TMR1_Initialize 485E  
                              _runningState 009C                                       pclath 000FFA  
                                     tablat 000FF5                                       plusw2 000FDB  
                         __end_of_CDCInitEP 4D10                  oled_setDisplay@displayType 00C2  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             __end_of_sprintf 701A  
                           _TMR2_StartTimer 4412                             __end_of_strncmp 505E  
                           ___lbdiv@divisor 00C0                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 002E                            __end_ofi2_memset 47B0  
                           ___lbdiv@counter 00C2                                _m10SecTicker 0099  
                           ?_SPI_Initialize 002E                             putUSBUSART@data 00C0  
        USART_mySetLineCodingHandler@dwBaud 003B                __size_of_USBStdSetCfgHandler 00A8  
                           __initialization 4E12                       TMR2_ReadTimer@readVal 00C0  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 5A96  
             __size_of_MOTEapp_handlerState 0008                      _MOTEapp_TimerBasedTask 4480  
                            ??_EUSART_Write 00C0                     __end_of_TMR2_Initialize 449E  
                              ?_sendCommand 00C1                 ?_INTERRUPT_InterruptManager 002E  
                 __size_of_USBCtrlEPService 00B2                                      ??_main 00FB  
                              ?_moteHandler 002E                               __activetblptr 000002  
                        _modemResonseBuffer 0198                             ?_USBDeviceTasks 002E  
                       i2_EUSART_Initialize 47DA                       oled_putUint16@numData 00D6  
                 sendDataCommand@dataLength 00C4                                 ?_USBSuspend 002E  
                                _NextUSBOut 001A                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 0096  
                  __end_of_SPI_Exchange8bit 44AE                     __end_of_USBDeviceAttach 488A  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 007B  
                         _getsUSBUSART$5507 00CB                                      _ACTCON 000FB5  
                                    STR_100 7EA1                                      STR_101 7FBF  
                                    STR_102 7CD7                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _EEDATA 000FA8  
                                    _EECON2 000FA7           __size_of_MOTEapp_getModemResponse 004A  
                           getsUSBUSART@len 00C9                                      _T1GCON 000FCC  
                      oled_putUint8@numData 00D5                   ?_MOTEapp_getModemResponse 002E  
                     __size_of_CDCTxService 0100                                      i2l1441 6246  
                                    i2l2250 512E                                      i2l1515 60BA  
                                    i2l1451 62C2                                      i2l1620 4CBA  
                                    i2l1452 6318                                      i2l1453 62C8  
                                    i2l1618 4C76                                      i2l1642 569A  
                                    i2l1571 6506                                      i2l1651 56CA  
                                    i2l1628 5CB6                                      i2l1573 650A  
                                    i2l1581 5296                                      i2l1582 523E  
                                    i2l1735 5370                                      i2l1583 5242  
                                    i2l1591 4A6A                                      i2l1568 64BA  
                                    i2l1658 6A94                                      i2l1578 5234  
                                    i2l1676 6BF4                                      i2l1668 6B7A  
                                    i2l6101 5856                                      i2l6121 64BE  
                                    i2l6113 643C                                      i2l6027 5ADA  
                                    i2l6211 6B92                                      i2l6221 6BD4  
                                    i2l6109 642C                                      i2l6141 5254  
                                    i2l6231 6C06                                      i2l6223 6BE0  
                                    i2l6151 5288                                      i2l6055 5486  
                                    i2l6209 6B68                                      i2l6129 650E  
                                    i2l6059 549A                                      i2l6237 6C3E  
                                    i2l5551 5410                                      i2l6239 6C4A  
                                    i2l6079 57FC                                      i2l6503 56B4  
                                    i2l6407 60CE                                      i2l6415 60DC  
                                    i2l7225 5C42                                      i2l6193 6B1E  
                                    i2l6185 6AEE                                      i2l6169 6A96  
                                    i2l6513 56DA                                      i2l7251 5CDC  
                                    i2l7243 5C9C                                      i2l6443 6652  
                                    i2l5723 5346                                      i2l6195 6B20  
                                    i2l5821 5B6C                                      i2l7253 5CDE  
                                    i2l7237 5C7E                                      i2l6461 66C2  
                                    i2l5565 4926                                      i2l5709 49A0  
                                    i2l6517 56EC                                      i2l6439 6646  
                                    i2l5751 539A                                      i2l5719 533A  
                                    i2l5583 5620                                      i2l6199 6B30  
                                    i2l6391 605E                                      i2l8311 6232  
                                    i2l5825 5B74                                      i2l6465 66DC  
                                    i2l6449 666C                                      i2l5745 5388  
                                    i2l5737 5364                                      i2l5729 5350  
                                    i2l5569 4934                                      i2l5577 5600  
                                    i2l5835 5B9C                                      i2l5843 5BD2  
                                    i2l6475 6738                                      i2l5595 5674  
                                    i2l6491 56A4                                      i2l6395 6064  
                                    i2l5861 50E2                                      i2l5845 5BD8  
                                    i2l5853 5C0E                                      i2l5757 53A0  
                                    i2l8341 6264                                      i2l8333 6258  
                                    i2l5863 50EE                                      i2l8319 623E  
                                    i2l5873 5120                                      i2l5865 50F2  
                                    i2l8353 6288                                      i2l8291 46F0  
                                    i2l5883 47A0                                      i2l8371 62B6  
                                    i2l8363 629A                                      i2l8347 6280  
                                    i2l8285 472E                                      i2l7901 4A68  
                                    i2l8357 6290                                      i2l5879 4790  
                                    i2l8391 62E6                                      i2l7921 58BA  
                                    i2l8473 1072                                      i2l8299 470A  
                                    i2l8397 62FC                                      i2l7935 5918  
                                    i2l8399 6310                                      i2l7961 5E0E  
                                    i2l7955 5DE4                                      i2l7877 464E  
                                    i2l7879 4650                                      i2l7985 5E2C  
                                    i2l7969 5E18                                   ??_EndLine 00C1  
                                    _OSCCON 000FD3                               CDCTxService@i 00C9  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                  i2USBTransferOnePacket@ep 0032                           ??i2_USBDeviceInit 0036  
           __size_ofi2_USBTransferOnePacket 009E                        ?i2_EUSART_Initialize 002E  
                      oled_displayOff@state 00C2                               oled_putChar@k 00CB  
                         _shortPacketStatus 002B              moteRunningProcess@changeStates 002E  
                            __CFG_XINST$OFF 000000                        _moteApp_clearBuffers 4AAC  
                           USBDeviceTasks@i 004E                  __end_of_Set_Column_Address 45D8  
               USBStdFeatureReqHandler@pUEP 0045                            __end_of_hexToStr 46E6  
                  USBTransferOnePacket@data 00C1                  USBCtrlTrfInHandler@lastDTS 003F  
                           ??_USBDeviceInit 00C8                   __size_of_Set_Page_Address 0014  
                   __end_of_TMR1_StartTimer 4412                                ?_putUSBUSART 00C0  
                                    ___wmul 469A                                   ??___lbdiv 00C1  
                            __CFG_STVREN$ON 000000                      modemResync@escapeEvent 00C7  
                                 ??___lbmod 00C1                                   ??___lldiv 0036  
                      __end_of_getsUSBUSART 555C                                   ??___lwdiv 00C4  
                                 ??___lwmod 00CB                           _USBEnableEndpoint 4918  
           __size_of_USBStdGetStatusHandler 007E                         _EUSART_Transmit_ISR 470E  
                                    _memset 47B0                                      clear_0 4E18  
                                    clear_1 4E24                                      clear_2 4E30  
                                    clear_3 4E3C                          ?_USBEnableEndpoint 0036  
            ??_USART_mySetLineCodingHandler 003B                     __end_of_DATAEE_ReadByte 44F8  
                                    _strcmp 52AA                  __end_of_ADC_TempConversion 4678  
             __size_of_USBTransferOnePacket 00A0                            ?_sendDataCommand 00C1  
                           _moteApp_delayms 4736                 __size_of_service_pushbutton 004C  
                                 ??_isdigit 00C0                                _CDCTxService 631C  
                              __mediumconst 77A4                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                       ??_USBEnableEndpoint 0037                    ADC_GetConversion@channel 00C4  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 4416  
                                 ??_sprintf 00D4                                 _CtrlTrfData 000438  
                                 ??_strncmp 00C6                            ___lbdiv@dividend 00C1  
                             ?_oled_devInit 002E                        ?_EUSART_Transmit_ISR 002E  
                      _controlTransferState 0021                        _USBapp_getrxByteFlag 4416  
                          ?_TMR1_Initialize 002E                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 4614  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00C0  
                                __accesstop 0060                     __end_of__initialization 4E60  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 00C2  
                           __CFG_PBADEN$OFF 000000                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 44AE                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 00C1                               ___rparam_used 000001  
                             ?_oled_setFont 00C0                    __size_of_USBStallHandler 003E  
                             ?_oled_putChar 00C3                       ?_moteApp_clearBuffers 002E  
                       __size_of_USBSuspend 001E                 __size_of_EUSART_FlushBuffer 002C  
                            __pcstackCOMRAM 002E                   __end_of_USBEnableEndpoint 494E  
                          __CFG_nPWRTEN$OFF 000000                               __end_of_sd000 7B80  
                             __end_of_sd001 7B36                               __end_of_sd002 7B6A  
                              __pidataBANK0 4407                         ??_SYSTEM_Initialize 00C2  
                 oled_putUint16@station_dot 00D4                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 49F6  
             __size_of_USBConfigureEndpoint 0088                 __end_of_USBCtrlTrfInHandler 5CE2  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 00C3  
                    i2_USBTransferOnePacket 55F0                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7ABF  
                         _CDCTxService$5555 00C7                                  _cdc_notice 00AD  
                                 ?i2_memset 002E                                  _cdc_rx_len 0097  
                                _cdc_tx_len 0098                                  ??_CMP1_ISR 002E  
                           _responsePortNum 0076                    ??_USBCtrlTrfSetupHandler 004B  
                                _dataBuffer 00A1                              ??_oled_devInit 00C2  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 4634  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 522C  
                              sprintf@width 00E2                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 00C0                            ??_oled_putUint16 00D6  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 4918  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00D1  
                            ??_oled_setFont 00C2                 __size_of_EUSART_Receive_ISR 0028  
                       oled_putString@index 00D1                              ??_oled_putChar 00C5  
               __size_of_USBWakeFromSuspend 0022                                 _pBDTEntryIn 000F  
                    __size_of_oled_clearRow 001E                        __size_of_modemResync 0064  
                  sendDataCommand@byteCount 00C6            __end_of_USBCtrlEPServiceComplete 612A  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00C4  
               __size_of_USBCheckCDCRequest 0088                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0022                            ??_oled_writeData 00C1  
                      USBCtrlTrfRxService@i 003F                                ?_TMRapp_Tick 002E  
                                   ?___wmul 00C0                            ?_TMR1_StartTimer 002E  
                                ??_TMR1_ISR 002E                    oled_putUint16@start_page 00D5  
                   __end_of_moteApp_delayms 475E                                     _CM1CON0 000F98  
        MOTEapp_getModemResponse@bufferByte 00C2                     __size_of_USBapp_Handler 0076  
                   __size_of_TMRapp_Handler 00DE                                     _BAUDCON 000FB8  
                                   ?_memset 00C0                                  _device_dsc 7B6A  
                 Set_Column_Address@address 00C2                    __size_of_oled_displayOff 0012  
                          _USBCtrlEPService 5874                                  _ep_data_in 006A  
                   __size_of_ADC_Initialize 0016                                     ?_strcmp 00C0  
                          ?_DATAEE_ReadByte 002E                 __end_of_USBCtrlTrfRxService 6744  
                      __size_of_sendCommand 0054                          _USBCheckStdRequest 568E  
                             _eusartRxCount 0023                           _configDescriptor1 7ABF  
                                   i2l10491 4B08                                     i2l10493 4B3A  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                                ??i2_memset 0034                 __end_of_USBCtrlTrfTxService 5C14  
                      __size_of_moteHandler 01AC                         _USBStdSetCfgHandler 57CC  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                   __end_of_CMP1_Initialize 44C0                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                       moteJoiningProcess@i 00ED                                     _UIRbits 000F65  
                          ??_SPI_Initialize 00C0                                     _EndLine 4466  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00C1  
                __end_of_moteRunningProcess 68CE                      ??_moteApp_clearBuffers 00C0  
                ?_moteApp_add8bToDataBuffer 00C4                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 4CBE                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1375 00E4  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 00F6  
                          _Set_Page_Address 44F8                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 00DE                           _timerMinTickCount 0087  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 078A  
                                   ___lbdiv 494E                                     ___lbmod 475E  
                                   ___lldiv 50CA                            ??_USBDeviceTasks 004E  
                           __size_of___wmul 0026                                     ___lwdiv 4B3E  
                         ??_USBStallHandler 002E                                     ___lwmod 4A6E  
                      __size_of_putUSBUSART 001C                                     __pcinit 4E12  
                        getsUSBUSART@buffer 00C7                             __size_of_memset 002A  
                 __end_of_configDescriptor1 7B02                                     __ramtop 0800  
                         hexToStr@character 00C0            __end_of_MOTEapp_getModemResponse 4BD2  
                                   __ptext0 59DC                                     __ptext1 68CE  
                                   __ptext2 4BD2                                     __ptext3 6744  
                                   __ptext4 555C                                     __ptext5 46C0  
                                   __ptext6 4DB8                                     __ptext7 4AAC  
                                   __ptext8 4ECC                                     __ptext9 475E  
                  __size_of_oled_setDisplay 0014                                     _inPipes 0009  
               _USBDeferOUTDataStagePackets 0090                             __size_of_strcmp 0084  
                          oled_setFont@font 00C0                           __end_of_hexpowers 77B7  
                                 _T1CONbits 000FCD                                     _dpowers 77A5  
                     _OSCILLATOR_Initialize 4536                                ??_USBSuspend 0043  
                             _oled_clearRow 45D8                                   _T2CONbits 000FBA  
                                _modemSleep 4580             moteApp_add8bToDataBuffer@number 00C5  
                                   _isdigit 45F6                                  _oled_clear 454C  
                  ??_PIN_MANAGER_Initialize 00C0                __end_of_TMRapp_ClearBitFlags 441E  
                              _LastRS232Out 0019                             i2_USBDeviceInit 5DB8  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 469A  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 4432  
                    ??_USBapp_getrxByteFlag 00C0                          __end_of_USB_CD_Ptr 77BF  
                __size_of_SYSTEM_Initialize 0020                                     _sprintf 6C6E  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 00C0  
                                   _strncmp 4FF6                        end_of_initialization 4E60  
                              _getsUSBUSART 54CC               sendDataCommand@byteCount_1433 00C7  
                        ??_SPI_Exchange8bit 00C0                        SPI_Exchange8bit@data 00C0  
                        __end_of_USB_SD_Ptr 77BD                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 00C2                                     memset@n 00C4  
                                   memset@p 00C6                               __Lmediumconst 77A4  
           _dummy_encapsulated_cmd_response 01D8                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 448E                           _EUSART_Initialize 4806  
                                _rxByteFlag 002A                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 4DB8                          __end_of_USBSuspend 45BA  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 543E  
                                 _RCSTAbits 000FAB                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                      __end_of_oled_devInit 5F68                    _USBCtrlEPServiceComplete 6046  
                                _responseId 0100                            ?_moteApp_delayms 00C0  
                             _randomPortNum 009B                    _MOTEapp_setResponseReady 1004  
                _USBStatusStageEnabledFlag1 0092                  _USBStatusStageEnabledFlag2 0093  
                       _USBapp_handlerState 4432                         ??_EUSART_Initialize 00C0  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTCbits 000F82                     oled_putUint8@start_page 00D3  
                            ?_oled_clearRow 002E                        __end_of_oled_setFont 44E4  
                        _Set_Column_Address 45BA                        __end_of_oled_putChar 51B6  
                          ___lbmod@dividend 00C1                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                         ??_oled_displayOff 00C2                       __size_of_EUSART_Write 0034  
                        _BothEP0OutUOWNsSet 008D                            ?_CMP1_Initialize 002E  
                 USBConfigureEndpoint@EPNum 0033                  ?_USBCtrlEPAllowStatusStage 002E  
                  __end_of_DATAEE_WriteByte 4A30                         ?_Set_Column_Address 002E  
       USER_USB_CALLBACK_EVENT_HANDLER@size 003F                              _TMR2_ReadTimer 443A  
                                 _USTATcopy 002D                           __size_of_CMP1_ISR 0004  
                      ?_USBapp_handlerState 002E                          _ADC_TempConversion 4656  
                  oled_putString@start_page 00D0                                 ___lbmod@rem 00C3  
                 __end_of_EUSART_Initialize 4832                __end_of_USBTransferOnePacket 57CC  
                               _CM2CON1bits 000F9A                                   _TXSTAbits 000FAC  
                           moteHandler@Traw 00F4                              ?_oled_putUint8 00D2  
                         putUSBUSART@length 00C2                         ?_ADC_TempConversion 002E  
                    _USBCtrlTrfSetupHandler 4E6E                        ??_Set_Column_Address 00C2  
                   ?i2_USBTransferOnePacket 002E                       __end_of_USBDeviceInit 5DB8  
                            _TMRapp_Handler 5F68                              _USBapp_Handler 51B6  
                      __size_of_TMRapp_Tick 0006                ??_moteApp_add16bToDataBuffer 00CF  
                            __end_of___wmul 46C0                                _EUSART_Write 48E4  
                     sendDataCommand@string 00C1                     __end_ofi2_USBDeviceInit 5E90  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 4C1E  
                            _ADC_Initialize 4520                 moteApp_clearBuffers@counter 00C0  
                                 i2memset@c 0030                                   i2memset@n 0032  
                                 i2memset@p 0034                      ?_OSCILLATOR_Initialize 002E  
                            __end_of_memset 47DA                           _USBBusIsSuspended 008E  
                  oled_writeCommand@command 00C1                                 ?_modemSleep 002E  
                            __end_of_strcmp 532E                                 ?_oled_clear 002E  
                       start_initialization 4E12                        ??_ADC_TempConversion 00C7  
                   ?_USBStdGetStatusHandler 002E               USBCtrlTrfRxService@byteToRead 0040  
                  _MOTEapp_getModemResponse 4B88             __size_of_PIN_MANAGER_Initialize 004E  
                         ??_oled_setDisplay 00C2                               ??_EUSART_Read 00C0  
                    __end_of_TMR2_ReadTimer 4442                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 4806  
                         __size_ofi2_memset 002A                                   _OledFont0 77BF  
              __end_of_USBConfigureEndpoint 543E             __end_of_USBStdFeatureReqHandler 6C6E  
                  __size_of_sendDataCommand 0094                       ??_USBapp_handlerState 00C0  
         __end_of_USBCtrlEPAllowStatusStage 5B52                    __end_of_USBCtrlEPService 5926  
      __end_of_USART_mySetLineCodingHandler 4D64       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 4D10                  __end_of_EUSART_FlushBuffer 48B6  
                       DATAEE_ReadByte@bAdd 00C0               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 010A                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 00C8  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 002C  
                   USBTransferOnePacket@dir 00C0                     USBTransferOnePacket@len 00C3  
                    __end_of_USBapp_Handler 522C                      __end_of_TMRapp_Handler 6046  
            __end_ofi2_USBTransferOnePacket 568E                        _TMRapp_ClearBitFlags 441A  
                                  ??___wmul 00C4                         _USBStdGetDscHandler 641C  
                      _MOTEapp_handlerState 442A                      __end_of_ADC_Initialize 4536  
                               __pdataBANK0 00FB                                    ??_memset 00C6  
                           ??_oled_clearRow 00CD  MOTEapp_getModemResponse@terminatorReceived 00C1  
           MOTEapp_TimerBasedTask@timerTask 00C0                                    ??_strcmp 00C4  
                 oled_putString@station_dot 00CF                      _USBActiveConfiguration 002C  
            __end_of_USBStdGetStatusHandler 52AA                 __end_of_EUSART_Transmit_ISR 4736  
                               __pbssCOMRAM 0001                  service_pushbutton@PB_Timer 0066  
                             __pcstackBANK0 00C0                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                    __end_of_Set_Page_Address 450C  
                           ?_TMR2_ReadTimer 002E                                 _activeState 0094  
                      ?_USBStdGetDscHandler 002E                                _isdigit$5885 00C1  
                 ADC_TempConversion@tempRaw 00C7                  __end_of_EUSART_Receive_ISR 470E  
            moteRunningProcess@messageReady 00DD                                    ?_EndLine 002E  
                __end_of_USBWakeFromSuspend 4656                               ??_modemResync 00C5  
                __size_of_EUSART_Initialize 002C                           __size_of_hexToStr 0026  
                               sprintf@flag 00E1                                 sprintf@prec 00D9  
                           _USBStallHandler 4A30                                _pBDTEntryOut 0060  
                       __end_of_EUSART_Read 48E4                  __end_of_USBCheckCDCRequest 53B6  
                           ??_oled_putUint8 00D4                        oled_putString@string 00CD  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 00C5  
                         _oled_writeCommand 444E                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 00C3                         __size_of_modemSleep 001C  
                          ___lwdiv@dividend 00C0                      _PIN_MANAGER_Initialize 4C1E  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 00C0                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 1008  
                        ?_oled_writeCommand 002E                               __pmediumconst 77A4  
             moteJoiningProcess@switchEvent 00E5                       ?_MOTEapp_handlerState 002E  
                                 __ptext100 532E                                   __ptext101 4C6C  
                                  ?___lbdiv 00C0                                   __ptext110 4442  
                                 __ptext102 6628                                   __ptext111 470E  
                                 __ptext103 5A96                                   __ptext112 46E6  
                                 __ptext104 5C14                                   __ptext113 440A  
                                 __ptext105 5B52                                   __ptext114 0000  
                                 __ptext106 4D10                                   __ptext107 47DA  
                                 __ptext108 50CA                                   __ptext109 441E  
                                  ?___lbmod 00C0                                    ?___lldiv 002E  
                                  ?___lwdiv 00C0                                    ?___lwmod 00C7  
                           ?_ADC_Initialize 002E                       __size_of_oled_setFont 0012  
                              _eusartRxHead 0024                               ??_sendCommand 00C3  
                              _eusartTxHead 0027                                _eusartRxTail 0025  
                              _eusartTxTail 0028                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 6744                ??_INTERRUPT_InterruptManager 004F  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 00FA  
                       ??_oled_writeCommand 00C1                               ??_moteHandler 00F0  
                   _eusartTxBufferRemaining 0026                        _USBTransferOnePacket 572C  
                              moteHandler@i 00F8            moteApp_add16bToDataBuffer@number 00CC  
                  __size_of_TMR1_StartTimer 0004                                    ?_isdigit 002E  
                    moteHandler@buttonPress 00F7                         ?_moteRunningProcess 00DC  
              __end_of_USBCtrlTrfOutHandler 4CBE                                   _hexpowers 77AF  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 440A  
                               _ep_data_out 006D                            ___lwdiv@quotient 00C5  
                                  ?_sprintf 00CC                __size_of_USBCtrlTrfRxService 011C  
                                 _secTicker 009D               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 00C0  
                              _oled_devInit 5E90                              _eusartRxBuffer 0200  
                          _timerMsTickCount 0089                                   _oled_init 4678  
              __size_of_USBCtrlTrfTxService 00C2                     _moteJoiningProcess$1333 00E8  
                            _eusartTxBuffer 0240                              ___wmul@product 00C4  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 445A                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 002F  
                ??_MOTEapp_setResponseReady 00C0                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 44D2                                   _moteState 00FD  
                         ??_sendDataCommand 00C5                               _operationType 009A  
                      ??_moteRunningProcess 00DF                  __end_of_moteJoiningProcess 77A4  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 5140  
                                  i2u353_40 5BC4                                    _PIR1bits 000F9E  
                                  i2u353_47 5BBA                                    i2u355_40 5C00  
                                  i2u522_48 5CC8                                    _PIR2bits 000FA1  
                                  i2u355_47 5BF6               __size_of_moteApp_clearBuffers 0048  
                                  i2u435_48 6724                                    i2u380_40 6488  
                                  i2u380_47 647E                                    i2u381_40 64B6  
                                  _PIR3bits 000FA4                                    i2u381_47 64AC  
                                  i2u383_40 6500                                    i2u383_47 64F6  
                 USBCtrlEPService@setup_cnt 004D                   __size_of_SPI_Exchange8bit 0010  
                       __end_of_modemResync 4F90                                    _RCONbits 000FD0  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 00C3  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 008F                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 6628                  _moteApp_add16bToDataBuffer 651E  
               __size_of_USBCheckStdRequest 009E                                    _TMR1_ISR 4442  
                   __size_of_oled_putString 0066                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 44C0  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 00DC  
                      _USBConfigureEndpoint 53B6            __size_of_USBStdFeatureReqHandler 01F4  
                         ??_TMR1_Initialize 00C0                                  _ADCON0bits 000FC2  
                   Set_Page_Address@address 00C2                           ___wmul@multiplier 00C0  
                     ?_USBTransferOnePacket 00C0                        moteJoiningProcess@ch 008B  
                    ADC_TempConversion@temp 00C8                   _moteApp_add8bToDataBuffer 4ECC  
                   __size_of_oled_writeData 000C                               ?_CDCTxService 002E  
                  moteHandler@gotoNextState 00F3                                _RemoteWakeup 001D  
                       __end_of_sendCommand 4DB8                                    i2_memset 4786  
                         __CFG_CFGPLLEN$OFF 000000                       DATAEE_WriteByte@bData 00C0  
                        _RS232_Out_Data_Rdy 001B                     __end_of_USBStallHandler 4A6E  
                       __end_of_moteHandler 6A7A                                 _EUSART_Read 48B6  
                         _moteApp_GoToSleep 505E                 ??_USBCtrlEPAllowStatusStage 002E  
               __end_of_USBStdSetCfgHandler 5874                           ?_DATAEE_WriteByte 00C0  
             __size_of_USBapp_getrxByteFlag 0004                          ?_moteApp_GoToSleep 002E  
                                ?_oled_init 002E                           ??_TMR2_Initialize 00C0  
                          __size_of_EndLine 000C                          ??_DATAEE_WriteByte 00C1  
                        __end_of_device_dsc 7B7C                                  _EECON1bits 000FA6  
                   ?_USBCtrlTrfSetupHandler 002E               USBapp_CdcEmulatorInitialize@i 003A  
                    ??_TMRapp_ClearBitFlags 00C0                     USBStdGetStatusHandler@p 002E  
                                  __Hrparam 0000                         ??_moteApp_GoToSleep 00CF  
                                  __Lrparam 0000                      USBTransferOnePacket@ep 00C4  
                    ??_MOTEapp_handlerState 00C0                           _ADC_GetConversion 49BC  
                        __CFG_BOREN$SBORDIS 000000                                    _SetupPkt 000430  
                   __size_of_SPI_Initialize 000E                     ??_OSCILLATOR_Initialize 00C0  
                     ?_USBConfigureEndpoint 002E                          ?_ADC_GetConversion 00C0  
                         ??_USBDeviceAttach 00C0                            __size_of___lbdiv 0036  
                          __size_of___lbmod 0028                  ??_MOTEapp_getModemResponse 00C1  
                              _selectedFont 00FB                            __size_of___lldiv 0076  
          moteApp_clearBuffers@counter_1500 00C1            moteApp_clearBuffers@counter_1501 00C2  
                           _oled_setDisplay 450C                            __size_of___lwdiv 004A  
                          __size_of___lwmod 003E                   MOTEapp_handlerState@state 00C0  
                                _ANSELAbits 000F5B                         __end_of_putUSBUSART 4580  
                               _line_coding 00B7                                  _ANSELCbits 000F5D  
                            ??_CDCTxService 00C7                                ??_modemSleep 00C5  
                       ??_ADC_GetConversion 00C2                                  sprintf@idx 00D8  
                                sprintf@len 00DD                                  sprintf@val 00DF  
                              ??_oled_clear 00CF                    modemResync@escapeCounter 00C5  
                  __size_of_moteApp_delayms 0028                            __size_of_isdigit 001E  
                 __end_of_moteApp_GoToSleep 50CA                     __size_of_USBDeviceTasks 00FE  
                           ___lwdiv@divisor 00C2                                    _appTimer 0095  
                           ___lwdiv@counter 00C4                                    __ptext10 494E  
                                  __ptext11 651E                                    __ptext20 488A  
                                  __ptext12 505E                                    __ptext21 443A  
                                  __ptext13 4678                                    __ptext30 612A  
                                  __ptext22 701A                                    __ptext14 44D2  
                                  __ptext31 4736                                    __ptext23 4FF6  
                                  __ptext15 450C                                    __ptext40 4480  
                                  __ptext32 4B88                                    __ptext24 52AA  
                                  __ptext16 5E90                                    __ptext41 4432  
                                  __ptext33 49F6                                    __ptext25 6C6E  
                                  __ptext17 44C0                                    __ptext50 444E  
                                  __ptext42 51B6                                    __ptext34 4656  
                                  __ptext26 45F6                                    __ptext18 4580  
                                  __ptext51 449E                                    __ptext43 4F90  
                                  __ptext35 4B3E                                    __ptext27 469A  
                                  __ptext19 4F2C                                    __ptext60 572C  
                                  __ptext52 5926                                    __ptext44 454C  
                                  __ptext36 49BC                                    __ptext28 4D64  
                                  __ptext61 5CE2                                    __ptext53 4564  
                                  __ptext45 45D8                                    __ptext37 5F68  
                                  __ptext29 4466                                    __ptext70 4C1E  
                                  __ptext62 47B0                                    __ptext54 54CC  
                                  __ptext46 5140                                    __ptext38 4A6E  
                                  __ptext71 4536                                    __ptext63 485E  
                                  __ptext55 4416                                    __ptext47 445A  
                                  __ptext39 441A                                    __ptext80 5DB8  
                                  __ptext72 4806                                    __ptext64 4614  
                                  __ptext56 1004                                    __ptext48 44F8  
                                  __ptext81 4634                                    __ptext73 44AE  
                                  __ptext65 448E                                    __ptext57 48E4  
                                  __ptext49 45BA                                    __ptext90 4786  
                                  __ptext82 459C                                    __ptext74 4520  
                                  __ptext66 4412                                    __ptext58 48B6  
                                  __ptext91 522C                                    __ptext83 4A30  
                                  __ptext75 442A                                    __ptext67 4832  
                                  __ptext59 631C                                    __ptext92 641C  
                                  __ptext84 5874                                    __ptext76 44E4  
                                  __ptext68 440E                                    __ptext93 6A7A  
                                  __ptext85 4E6E                                    __ptext69 4472  
                                  __ptext94 4AF4                                    __ptext86 6046  
                                  __ptext78 4424                                    __ptext95 4984  
                                  __ptext87 543E                                    __ptext79 621E  
                                  __ptext96 4CBE                                    __ptext88 568E  
                                  __ptext97 55F0                                    __ptext89 57CC  
                                  __ptext98 4918                                    __ptext99 53B6  
      __end_of_USBapp_CdcEmulatorInitialize 49BC       __size_of_USBapp_CdcEmulatorInitialize 0038  
              _USBapp_CdcEmulatorInitialize 4984                                _SSP1CON1bits 000FC6  
                                  _hexToStr 46C0                          _service_pushbutton 4BD2  
                         ??_TMR1_StartTimer 00C0                            __size_of_sprintf 03AC  
               DATAEE_WriteByte@GIEBitValue 00C2                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 0068                                 _modemResync 4F2C  
            __end_of_USBCtrlTrfSetupHandler 4ECC                               __size_of_main 00BA  
                         ?_USBCtrlEPService 002E                  __size_of_oled_writeCommand 000C  
                                strncmp@len 00C4                         ?_service_pushbutton 002E  
                         ??_DATAEE_ReadByte 00C0                   __end_of_ADC_GetConversion 49F6  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 44D2  
                        ??_USBCtrlEPService 004B                         _USBCtrlTrfInHandler 5C14  
                             ??_TMRapp_Tick 002E                          __end_of_modemSleep 459C  
                        __end_of_oled_clear 4564                                    _outPipes 0001  
                      _USBCtrlTrfOutHandler 4C6C                                    int$flags 005B  
                                  _usbState 009F                   _USBCtrlEPAllowStatusStage 5A96  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 00C0  
        __end_of_INTERRUPT_InterruptManager 10AA                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 4D64  
                    ??_USBTransferOnePacket 00C4                          oled_clearRow@index 00CE  
                        _EUSART_FlushBuffer 488A                __end_of_USBapp_setrxByteFlag 442A  
                               _moteHandler 68CE                            ??_TMR2_ReadTimer 00C0  
                      ??_service_pushbutton 00C0                   _USBDeferStatusStagePacket 001E  
                  CDCTxService@byte_to_send 00CA                                  _INTCONbits 000FF2  
               __end_of_USBapp_handlerState 443A                        ?_USBCtrlTrfInHandler 002E  
                       ?_EUSART_FlushBuffer 002E                 __size_of_ADC_TempConversion 0022  
             USBCtrlTrfTxService@byteToSend 002E                                    isdigit@c 00C2  
                                  memset@p1 00C0                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 00C0                                _responseData 0110  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                                 sprintf@ap 00DC                                   sprintf@cp 00DA  
                                 sprintf@sp 00CC                                 ??_oled_init 00CF  
                        ??_Set_Page_Address 00C2                      __size_of_USBDeviceInit 00D6  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4B3E    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 0041            ?_USER_USB_CALLBACK_EVENT_HANDLER 003B  
           _USER_USB_CALLBACK_EVENT_HANDLER 4AF4              moteJoiningProcess@messageReady 00EF  
                          ___lwmod@dividend 00C7                i2USBTransferOnePacket@handle 0033  
                          ___lldiv@dividend 002E                     ?_PIN_MANAGER_Initialize 002E  
                          ??_USBapp_Handler 00D2                            ??_TMRapp_Handler 00CC  
                      moteHandler@gotoSleep 00F2                __size_ofi2_EUSART_Initialize 002C  
                                 strncmp@s1 00C0                                   strncmp@s2 00C2  
                          ??_ADC_Initialize 00C0                        ??_EUSART_FlushBuffer 00C0  
                   __end_of_oled_setDisplay 4520                              _oled_putUint16 612A  
                          _SPI_Exchange8bit 449E                  i2USBTransferOnePacket@data 002F  
                               _sleepTicker 009E                      ??_USBConfigureEndpoint 002F  
                     ?_USBCtrlTrfOutHandler 002E                              _oled_putString 4F90  
                               _putUSBUSART 4564                          _EUSART_Receive_ISR 46E6  
                         oled_clearRow@page 00CD                        __CFG_CPUDIV$NOCLKDIV 000000  
                       _USBCtrlTrfRxService 6628                          _USBWakeFromSuspend 4634  
                   _USBStdFeatureReqHandler 6A7A     __end_of_USBapp_DeviceCdcEmulatorHandler 59DC  
  __size_of_USBapp_DeviceCdcEmulatorHandler 00B6            ?_USBapp_DeviceCdcEmulatorHandler 002E  
         ??_USBapp_DeviceCdcEmulatorHandler 00CD             _USBapp_DeviceCdcEmulatorHandler 5926  
                        _USBCheckCDCRequest 532E                         _USBCtrlTrfTxService 5B52  
                       __end_of_TMRapp_Tick 4424                       __end_of_oled_clearRow 45F6  
                               _temperature 0083                                    sprintf@c 00E4  
                                  sprintf@f 00CE                         ?_EUSART_Receive_ISR 002E  
                            _oled_writeData 445A                         ?_USBWakeFromSuspend 002E  
                                  strcmp@s1 00C0                                    strcmp@t0 00C6  
                                  strcmp@s2 00C2                                    strcmp@t1 00C8  
                                  strcmp@t2 00C7                            ___lldiv@quotient 0036  
                           ___lwmod@divisor 00C9                       ??_USBCtrlTrfInHandler 003F  
                     _USBAlternateInterface 00BE                             ___lwmod@counter 00CB  
                       ?_USBCheckCDCRequest 002E                  __size_of_moteApp_GoToSleep 006C  
                 i2USBTransferOnePacket@dir 002E                   i2USBTransferOnePacket@len 0031  
                       USBEnableEndpoint@ep 0039                             _endpoint_number 0022  
                           _sendDataCommand 555C                        ?_USBCtrlTrfRxService 002E  
                             ?_getsUSBUSART 00C7                    oled_putUint8@station_dot 00D2  
                        __CFG_FOSC$INTOSCIO 000000                          EUSART_Write@txData 00C0  
              __size_of_EUSART_Transmit_ISR 0028              __end_of_PIN_MANAGER_Initialize 4C6C  
                  ?_USBCtrlEPAllowDataStage 002E          __size_of_moteApp_add8bToDataBuffer 0060  
                      ?_USBCtrlTrfTxService 002E                           ??_moteApp_delayms 00C2  
              _USBStatusStageTimeoutCounter 001F                        ??_EUSART_Receive_ISR 002E  
                      ??_USBWakeFromSuspend 0043                      __end_of_oled_putUint16 621E  
                USBTransferOnePacket@handle 00C5                  __size_of_ADC_GetConversion 003A  
                      __end_of_CDCTxService 641C                             _TMR1_Initialize 4832  
         moteJoiningProcess@joiningComplete 00EA                            ?_oled_displayOff 002E  
                     __end_of_oled_putUint8 4E12                      __end_of_oled_putString 4FF6  
                      ??_USBCheckCDCRequest 002E                                  _USB_CD_Ptr 77BD  
